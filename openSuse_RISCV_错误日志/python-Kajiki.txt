[    0s] Using BUILD_ROOT=/var/cache/obs/worker/root_4/.mount
[    0s] Using BUILD_ARCH=riscv64
[    0s] Doing kvm build in /var/cache/obs/worker/root_4/root
[    0s] 
[    0s] 
[    0s] cloud125 started "build python-Kajiki.spec" at Sat Feb 18 23:54:07 UTC 2023.
[    0s] 
[    0s] Building python-Kajiki for project 'openSUSE:Factory:RISCV' repository 'standard' arch 'riscv64' srcmd5 '300da90ffd930838b4551f7a8ff4b3f9'
[    0s] 
[    0s] processing recipe /var/cache/obs/worker/root_4/.build-srcdir/python-Kajiki.spec ...
[    0s] running changelog2spec --target rpm --file /var/cache/obs/worker/root_4/.build-srcdir/python-Kajiki.spec
[    0s] init_buildsystem --configdir /var/run/obs/worker/4/build/configs --cachedir /var/cache/build --prepare --clean --rpmlist /var/cache/obs/worker/root_4/.build.rpmlist /var/cache/obs/worker/root_4/.build-srcdir/python-Kajiki.spec build ...
[    1s] unpacking preinstall image openSUSE:Factory:RISCV/standard/preinstallimage-python [83160fede3a282f635470653fe6cebf8]
[    5s] 
[    5s] copying packages...
[    6s] reordering...done
[    6s] Detected virtio-serial support
[   19s] booting kvm...
[   19s] ### VM INTERACTION START ###
[   19s] Using virtio-serial support
[   19s] /usr/bin/qemu-kvm -nodefaults -no-reboot -nographic -vga none -cpu host -M pc,accel=kvm,usb=off,dump-guest-core=off,vmport=off -sandbox on -bios /usr/share/qemu/qboot.rom -object rng-random,filename=/dev/random,id=rng0 -device virtio-rng-pci,rng=rng0 -object iothread,id=io0 -runas qemu -net none -kernel /var/cache/obs/worker/root_4/.mount/boot/kernel -initrd /var/cache/obs/worker/root_4/.mount/boot/initrd -append root=/dev/disk/by-id/virtio-0 rootfstype=ext4 rootflags=noatime kvmclock mitigations=off elevator=noop nmi_watchdog=0 rw rd.driver.pre=binfmt_misc oops=panic panic=1 quiet console=hvc0 init=/.build/initvm.x86_64 -m 3072 -drive file=/var/cache/obs/worker/root_4/root,format=raw,if=none,id=disk,cache=unsafe,aio=io_uring -device virtio-blk-pci,iothread=io0,drive=disk,serial=0 -drive file=/var/cache/obs/worker/root_4/swap,format=raw,if=none,id=swap,cache=unsafe,aio=io_uring -device virtio-blk-pci,iothread=io0,drive=swap,serial=1 -device virtio-serial,max_ports=2 -device virtconsole,chardev=virtiocon0 -chardev stdio,id=virtiocon0 -chardev socket,id=monitor,server=on,wait=off,path=/var/cache/obs/worker/root_4/root.qemu/monitor -mon chardev=monitor,mode=readline -smp 4
[   23s] ### VM INTERACTION END ###
[   23s] 2nd stage started in virtual machine
[   24s] machine type: riscv64
[   24s] Linux version: 6.1.12-1-default #1 SMP PREEMPT_DYNAMIC Wed Feb 15 05:31:41 UTC 2023 (373f017)
[   24s] Increasing log level from now on...
[   24s] [    4.644992][  T367] sysrq: Changing Loglevel
[   24s] [    4.645211][  T367] sysrq: Loglevel set to 4
[   24s] Enable sysrq operations
[   24s] Setting up swapspace version 1, size = 2 GiB (2097147904 bytes)
[   24s] no label, UUID=bcb463fd-a696-447b-a745-c1061a5bf116
[   24s] swapon: /dev/vdb: found signature [pagesize=4096, signature=swap]
[   24s] swapon: /dev/vdb: pagesize=4096, swapsize=2097152000, devsize=2097152000
[   24s] swapon /dev/vdb
[   25s] WARNING: udev not running, creating extra device nodes
[   25s] logging output to //.build.log...
[   25s] processing recipe /.build-srcdir/python-Kajiki.spec ...
[   26s] init_buildsystem --configdir /.build/configs --cachedir /var/cache/build /.build-srcdir/python-Kajiki.spec build ...
[   26s] initializing rpm db...
[   27s] querying package ids...
[   54s] [1/197] preinstalled aaa_base-84.87+git20220822.6b9f7a3-1.1
[   54s] [2/197] preinstalled aaa_base-malloccheck-84.87+git20220822.6b9f7a3-1.1
[   54s] [3/197] preinstalled attr-2.5.1-1.1
[   54s] [4/197] preinstalled bash-5.2.15-8.1
[   54s] [5/197] preinstalled bash-sh-5.2.15-8.1
[   54s] [6/197] preinstalled binutils-2.39-3.1
[   54s] [7/197] preinstalled brp-check-suse-84.87+git20221115.2f7add6-1.1
[   54s] [8/197] preinstalled build-compare-20221206T204012.bb70754-1.2
[   54s] [9/197] preinstalled build-mkbaselibs-20230215-1.1
[   54s] [10/197] preinstalled bzip2-1.0.8-4.1
[   54s] [11/197] preinstalled chkstat-1599_20221220-1.2
[   54s] [12/197] preinstalled compat-usrmerge-build-84.87-5.1
[   54s] [13/197] preinstalled compat-usrmerge-tools-84.87-5.1
[   54s] [14/197] preinstalled coreutils-9.1-5.1
[   54s] [15/197] preinstalled cpio-2.13-5.1
[   54s] [16/197] preinstalled cpp-12-2.1
[   54s] [17/197] preinstalled cpp12-12.2.1+git749-4.1
[   54s] [18/197] preinstalled crypto-policies-20210917.c9d86d1-1.1
[   54s] [19/197] preinstalled debugedit-5.0-5.1
[   54s] [20/197] preinstalled diffutils-3.9-1.1
[   54s] [21/197] preinstalled dwz-0.15-2.1
[   54s] [22/197] preinstalled elfutils-0.188-3.2
[   54s] [23/197] cumulate fdupes-2.2.1-1.1
[   54s] [24/197] preinstalled file-5.44-1.2
[   54s] [25/197] preinstalled file-magic-5.44-1.2
[   54s] [26/197] preinstalled filesystem-84.87-12.1
[   54s] [27/197] preinstalled fillup-1.42-279.1
[   54s] [28/197] preinstalled findutils-4.9.0-2.1
[   54s] [29/197] preinstalled gawk-5.2.1-2.1
[   54s] [30/197] preinstalled gcc-12-2.1
[   54s] [31/197] preinstalled gcc-PIE-12-2.1
[   54s] [32/197] preinstalled gcc12-12.2.1+git749-4.1
[   54s] [33/197] preinstalled gcc12-PIE-12.2.1+git749-4.1
[   54s] [34/197] preinstalled gettext-runtime-mini-0.21.1-1.1
[   54s] [35/197] preinstalled gettext-tools-mini-0.21.1-1.1
[   54s] [36/197] preinstalled glibc-2.37-1.1
[   54s] [37/197] preinstalled glibc-devel-2.37-1.1
[   54s] [38/197] preinstalled glibc-locale-base-2.37-1.1
[   54s] [39/197] preinstalled grep-3.8-3.1
[   54s] [40/197] preinstalled gzip-1.12-3.1
[   54s] [41/197] preinstalled kernel-obs-build-6.1.12-1.1
[   54s] [42/197] preinstalled libacl1-2.3.1-2.1
[   54s] [43/197] cumulate libalternatives1-1.2+3.b848aad-3.1
[   54s] [44/197] preinstalled libasan8-13.0.1+git5428-6.1
[   54s] [45/197] preinstalled libasm1-0.188-3.2
[   54s] [46/197] preinstalled libatomic1-13.0.1+git5428-6.1
[   54s] [47/197] preinstalled libattr1-2.5.1-1.1
[   54s] [48/197] preinstalled libaudit1-3.0.6-4.1
[   54s] [49/197] preinstalled libblkid1-2.38.1-7.1
[   54s] [50/197] preinstalled libbz2-1-1.0.8-4.1
[   54s] [51/197] preinstalled libcap-ng0-0.8.3-1.1
[   54s] [52/197] preinstalled libcap2-2.67-1.1
[   54s] [53/197] preinstalled libcrypt1-4.4.33-1.1
[   54s] [54/197] preinstalled libctf-nobfd0-2.39-3.1
[   54s] [55/197] preinstalled libctf0-2.39-3.1
[   54s] [56/197] preinstalled libdb-4_8-4.8.30-39.1
[   54s] [57/197] preinstalled libdw1-0.188-3.2
[   54s] [58/197] preinstalled libeconf0-0.5.1-1.1
[   54s] [59/197] preinstalled libelf1-0.188-3.2
[   54s] [60/197] preinstalled libexpat1-2.5.0-2.1
[   54s] [61/197] preinstalled libfdisk1-2.38.1-7.1
[   54s] [62/197] preinstalled libffi8-3.4.4-1.1
[   54s] [63/197] preinstalled libgcc_s1-13.0.1+git5428-6.1
[   54s] [64/197] preinstalled libgcrypt20-1.10.1-1.1
[   54s] [65/197] preinstalled libgdbm6-1.23-1.1
[   54s] [66/197] preinstalled libgdbm_compat4-1.23-1.1
[   54s] [67/197] preinstalled libgmp10-6.2.1-4.1
[   54s] [68/197] preinstalled libgomp1-13.0.1+git5428-6.1
[   54s] [69/197] preinstalled libgpg-error0-1.46-1.1
[   54s] [70/197] preinstalled libisl23-0.25-1.1
[   54s] [71/197] preinstalled liblua5_4-5-5.4.4-8.1
[   54s] [72/197] preinstalled liblzma5-5.4.1-1.1
[   54s] [73/197] preinstalled libmagic1-5.44-1.2
[   54s] [74/197] preinstalled libmount1-2.38.1-7.1
[   54s] [75/197] preinstalled libmpc3-1.3.1-1.2
[   54s] [76/197] preinstalled libmpdec3-2.5.1-2.1
[   54s] [77/197] preinstalled libmpfr6-4.2.0-1.1
[   54s] [78/197] preinstalled libncurses6-6.4.20230128-5.1
[   54s] [79/197] preinstalled libopenssl3-3.0.7-3.1
[   54s] [80/197] preinstalled libpcre2-8-0-10.42-3.2
[   54s] [81/197] preinstalled libpkgconf3-1.8.0-2.1
[   54s] [82/197] preinstalled libpopt0-1.19-1.1
[   54s] [83/197] preinstalled libpython3_10-1_0-3.10.9-2.2
[   54s] [84/197] preinstalled libpython3_11-1_0-3.11.1-4.2
[   54s] [85/197] preinstalled libpython3_8-1_0-3.8.16-3.2
[   54s] [86/197] preinstalled libpython3_9-1_0-3.9.16-3.2
[   54s] [87/197] preinstalled libreadline8-8.2-2.1
[   54s] [88/197] preinstalled librpmbuild9-4.18.0-3.2
[   54s] [89/197] preinstalled libseccomp2-2.5.4-2.1
[   54s] [90/197] preinstalled libselinux1-3.4-2.1
[   54s] [91/197] preinstalled libsemanage-conf-3.4-1.1
[   54s] [92/197] preinstalled libsemanage2-3.4-1.1
[   54s] [93/197] preinstalled libsepol2-3.4-1.1
[   54s] [94/197] preinstalled libsmartcols1-2.38.1-7.1
[   54s] [95/197] preinstalled libstdc++6-13.0.1+git5428-6.1
[   54s] [96/197] preinstalled libsubid4-4.13-3.1
[   54s] [97/197] preinstalled libubsan1-13.0.1+git5428-6.1
[   54s] [98/197] preinstalled libutempter0-1.2.0-3.2
[   54s] [99/197] preinstalled libuuid1-2.38.1-7.1
[   54s] [100/197] preinstalled libxcrypt-devel-4.4.33-1.1
[   54s] [101/197] preinstalled libz1-1.2.13-2.1
[   54s] [102/197] preinstalled libzstd1-1.5.2-2.1
[   54s] [103/197] preinstalled linux-glibc-devel-6.1-1.1
[   54s] [104/197] preinstalled login_defs-4.13-3.1
[   54s] [105/197] preinstalled lua54-5.4.4-8.1
[   54s] [106/197] preinstalled make-4.4-2.1
[   54s] [107/197] preinstalled ncurses-utils-6.4.20230128-5.1
[   54s] [108/197] preinstalled pam-1.5.2-12.1
[   54s] [109/197] preinstalled patch-2.7.6-6.1
[   54s] [110/197] preinstalled perl-5.36.0-4.1
[   54s] [111/197] preinstalled perl-base-5.36.0-4.1
[   54s] [112/197] preinstalled permissions-1599_20221220-1.2
[   54s] [113/197] preinstalled permissions-config-1599_20221220-1.2
[   54s] [114/197] preinstalled pkgconf-1.8.0-2.1
[   54s] [115/197] preinstalled pkgconf-m4-1.8.0-2.1
[   54s] [116/197] preinstalled pkgconf-pkg-config-1.8.0-2.1
[   54s] [117/197] preinstalled polkit-default-privs-1550+20221102.9f111fa-1.1
[   54s] [118/197] preinstalled post-build-checks-84.87+git20230106.3a359c5-1.1
[   54s] [119/197] preinstalled python-rpm-macros-20230128.e704796-1.2
[   54s] [120/197] preinstalled python-rpm-packaging-20210526+a18ca48-1.2
[   54s] [121/197] cumulate python310-attrs-22.2.0-1.2
[   54s] [122/197] preinstalled python310-base-3.10.9-2.2
[   54s] [123/197] cumulate python310-exceptiongroup-1.1.0-1.2
[   54s] [124/197] cumulate python310-iniconfig-1.1.1-3.2
[   54s] [125/197] cumulate python310-nine-1.1.0-1.9
[   54s] [126/197] preinstalled python310-packaging-23.0-1.1
[   54s] [127/197] cumulate python310-pluggy-1.0.0-1.5
[   54s] [128/197] preinstalled python310-setuptools-65.6.3-1.2
[   54s] [129/197] cumulate python310-tomli-2.0.1-1.3
[   54s] [130/197] cumulate python310-zipp-3.8.1-1.2
[   54s] [131/197] cumulate python311-attrs-22.2.0-1.2
[   54s] [132/197] preinstalled python311-base-3.11.1-4.2
[   54s] [133/197] cumulate python311-exceptiongroup-1.1.0-1.2
[   54s] [134/197] cumulate python311-iniconfig-1.1.1-3.2
[   54s] [135/197] cumulate python311-nine-1.1.0-1.9
[   54s] [136/197] cumulate python311-packaging-23.0-1.2
[   54s] [137/197] cumulate python311-pluggy-1.0.0-1.5
[   54s] [138/197] preinstalled python311-setuptools-65.6.3-1.2
[   54s] [139/197] cumulate python311-tomli-2.0.1-1.3
[   54s] [140/197] cumulate python311-zipp-3.8.1-1.2
[   54s] [141/197] cumulate python38-attrs-22.2.0-1.2
[   54s] [142/197] preinstalled python38-base-3.8.16-3.2
[   54s] [143/197] cumulate python38-exceptiongroup-1.1.0-1.2
[   54s] [144/197] cumulate python38-iniconfig-1.1.1-3.2
[   54s] [145/197] cumulate python38-nine-1.1.0-1.9
[   54s] [146/197] cumulate python38-packaging-23.0-1.2
[   54s] [147/197] cumulate python38-pluggy-1.0.0-1.5
[   54s] [148/197] preinstalled python38-setuptools-65.6.3-1.2
[   54s] [149/197] cumulate python38-tomli-2.0.1-1.3
[   54s] [150/197] cumulate python38-zipp-3.8.1-1.2
[   54s] [151/197] cumulate python39-attrs-22.2.0-1.2
[   54s] [152/197] preinstalled python39-base-3.9.16-3.2
[   54s] [153/197] cumulate python39-exceptiongroup-1.1.0-1.2
[   54s] [154/197] cumulate python39-iniconfig-1.1.1-3.2
[   54s] [155/197] cumulate python39-nine-1.1.0-1.9
[   54s] [156/197] cumulate python39-packaging-23.0-1.2
[   54s] [157/197] cumulate python39-pluggy-1.0.0-1.5
[   54s] [158/197] preinstalled python39-setuptools-65.6.3-1.2
[   54s] [159/197] cumulate python39-tomli-2.0.1-1.3
[   54s] [160/197] cumulate python39-zipp-3.8.1-1.2
[   54s] [161/197] preinstalled qemu-linux-user-7.1.0-50.1
[   54s] [162/197] preinstalled rpm-4.18.0-3.2
[   54s] [163/197] preinstalled rpm-build-4.18.0-3.2
[   54s] [164/197] preinstalled rpm-build-perl-4.18.0-3.2
[   54s] [165/197] preinstalled rpm-config-SUSE-20220926-1.1
[   54s] [166/197] preinstalled rpmlint-mini-2.4.0+git20230214.1bab129-9.4
[   54s] [167/197] preinstalled rpmlint-strict-2.4.0+git20230214.1bab129-1.1
[   54s] [168/197] preinstalled sed-4.9-2.1
[   54s] [169/197] preinstalled shadow-4.13-3.1
[   54s] [170/197] preinstalled system-group-hardware-20170617-24.1
[   54s] [171/197] preinstalled system-user-root-20190513-2.1
[   54s] [172/197] preinstalled systemd-rpm-macros-19-1.1
[   54s] [173/197] preinstalled sysuser-shadow-3.1-5.1
[   54s] [174/197] preinstalled tar-1.34-9.1
[   54s] [175/197] preinstalled terminfo-base-6.4.20230128-5.1
[   54s] [176/197] cumulate timezone-2022g-2.1
[   54s] [177/197] preinstalled update-alternatives-1.21.8-1.1
[   54s] [178/197] preinstalled util-linux-2.38.1-7.1
[   54s] [179/197] preinstalled which-2.21-5.1
[   54s] [180/197] preinstalled xz-5.4.1-1.1
[   54s] [181/197] cumulate alts-1.2+3.b848aad-3.1
[   54s] [182/197] cumulate python310-importlib-metadata-6.0.0-1.2
[   54s] [183/197] cumulate python310-pytz-2022.7-1.2
[   54s] [184/197] cumulate python311-importlib-metadata-6.0.0-1.2
[   54s] [185/197] cumulate python311-pytz-2022.7-1.2
[   54s] [186/197] cumulate python38-importlib-metadata-6.0.0-1.2
[   54s] [187/197] cumulate python38-pytz-2022.7-1.2
[   54s] [188/197] cumulate python39-importlib-metadata-6.0.0-1.2
[   54s] [189/197] cumulate python39-pytz-2022.7-1.2
[   54s] [190/197] cumulate python310-Babel-2.11.0-1.2
[   54s] [191/197] cumulate python311-Babel-2.11.0-1.2
[   54s] [192/197] cumulate python38-Babel-2.11.0-1.2
[   54s] [193/197] cumulate python39-Babel-2.11.0-1.2
[   54s] [194/197] cumulate python310-pytest-7.2.0-2.2
[   55s] [195/197] cumulate python311-pytest-7.2.0-2.2
[   55s] [196/197] cumulate python38-pytest-7.2.0-2.2
[   55s] [197/197] cumulate python39-pytest-7.2.0-2.2
[   55s] now installing cumulated packages
[   55s] Preparing...                          ########################################
[   55s] Updating / installing...
[   56s] timezone-2022g-2.1                    ########################################
[   56s] python310-pytz-2022.7-1.2             ########################################
[   56s] python311-pytz-2022.7-1.2             ########################################
[   57s] python38-pytz-2022.7-1.2              ########################################
[   57s] python39-pytz-2022.7-1.2              ########################################
[   57s] python39-zipp-3.8.1-1.2               ########################################
[   57s] python39-importlib-metadata-6.0.0-1.2 ########################################
[   57s] python39-tomli-2.0.1-1.3              ########################################
[   57s] python39-pluggy-1.0.0-1.5             ########################################
[   57s] python39-packaging-23.0-1.2           ########################################
[   57s] python39-iniconfig-1.1.1-3.2          ########################################
[   57s] python39-exceptiongroup-1.1.0-1.2     ########################################
[   57s] python39-attrs-22.2.0-1.2             ########################################
[   57s] python38-zipp-3.8.1-1.2               ########################################
[   57s] python38-importlib-metadata-6.0.0-1.2 ########################################
[   57s] python38-tomli-2.0.1-1.3              ########################################
[   57s] python38-pluggy-1.0.0-1.5             ########################################
[   57s] python38-packaging-23.0-1.2           ########################################
[   57s] python38-iniconfig-1.1.1-3.2          ########################################
[   57s] python38-exceptiongroup-1.1.0-1.2     ########################################
[   57s] python38-attrs-22.2.0-1.2             ########################################
[   57s] python311-zipp-3.8.1-1.2              ########################################
[   57s] python311-importlib-metadata-6.0.0-1.2########################################
[   57s] python311-tomli-2.0.1-1.3             ########################################
[   58s] python311-pluggy-1.0.0-1.5            ########################################
[   58s] python311-packaging-23.0-1.2          ########################################
[   58s] python311-iniconfig-1.1.1-3.2         ########################################
[   58s] python311-exceptiongroup-1.1.0-1.2    ########################################
[   58s] python311-attrs-22.2.0-1.2            ########################################
[   58s] python310-zipp-3.8.1-1.2              ########################################
[   58s] python310-importlib-metadata-6.0.0-1.2########################################
[   58s] python310-tomli-2.0.1-1.3             ########################################
[   58s] python310-pluggy-1.0.0-1.5            ########################################
[   58s] python310-iniconfig-1.1.1-3.2         ########################################
[   58s] python310-exceptiongroup-1.1.0-1.2    ########################################
[   58s] python310-attrs-22.2.0-1.2            ########################################
[   58s] libalternatives1-1.2+3.b848aad-3.1    ########################################
[   58s] alts-1.2+3.b848aad-3.1                ########################################
[   64s] python310-Babel-2.11.0-1.2            ########################################
[   69s] python311-Babel-2.11.0-1.2            ########################################
[   75s] python38-Babel-2.11.0-1.2             ########################################
[   81s] python39-Babel-2.11.0-1.2             ########################################
[   82s] python310-pytest-7.2.0-2.2            ########################################
[   83s] python311-pytest-7.2.0-2.2            ########################################
[   83s] python38-pytest-7.2.0-2.2             ########################################
[   84s] python39-pytest-7.2.0-2.2             ########################################
[   84s] python39-nine-1.1.0-1.9               ########################################
[   84s] python38-nine-1.1.0-1.9               ########################################
[   84s] python311-nine-1.1.0-1.9              ########################################
[   84s] python310-nine-1.1.0-1.9              ########################################
[   84s] fdupes-2.2.1-1.1                      ########################################
[   87s] now finalizing build dir...
[   88s] ... running 01-add_abuild_user_to_trusted_group
[   88s] ... running 02-set_timezone_to_utc
[   88s] ... running 03-set-permissions-secure
[   88s] ... running 11-hack_uname_version_to_kernel_version
[   98s] -----------------------------------------------------------------
[   98s] I have the following modifications for python-Kajiki.spec:
[   98s] 22c22
[   98s] < Release:        0
[   98s] ---
[   98s] > Release:        1.5
[  107s] build target is riscv64-suse-linux
[  107s] -----------------------------------------------------------------
[  107s] ----- building python-Kajiki.spec (user abuild)
[  107s] -----------------------------------------------------------------
[  107s] -----------------------------------------------------------------
[  111s] + exec rpmbuild -ba --define '_srcdefattr (-,root,root)' --nosignature --target=riscv64-suse-linux --define '_build_create_debug 1' --define 'disturl obs://build.opensuse.org/openSUSE:Factory:RISCV/standard/300da90ffd930838b4551f7a8ff4b3f9-python-Kajiki' /home/abuild/rpmbuild/SOURCES/python-Kajiki.spec
[  164s] Building target platforms: riscv64-suse-linux
[  164s] Building for target riscv64-suse-linux
[  164s] setting SOURCE_DATE_EPOCH=1630368000
[  164s] Executing(%prep): /usr/bin/bash -e /var/tmp/rpm-tmp.t11zdb
[  164s] + umask 022
[  164s] + cd /home/abuild/rpmbuild/BUILD
[  164s] + cd /home/abuild/rpmbuild/BUILD
[  164s] + rm -rf kajiki-0.8.3
[  164s] + /usr/lib/rpm/rpmuncompress -x /home/abuild/rpmbuild/SOURCES/kajiki-0.8.3.tar.gz
[  164s] + STATUS=0
[  164s] + '[' 0 -ne 0 ']'
[  164s] + cd kajiki-0.8.3
[  164s] + /usr/bin/chmod -Rf a+rX,u+w,g-w,o-w .
[  164s] + sed -i 's/from nose import SkipTest/from unittest import SkipTest/' kajiki/tests/test_xml.py
[  164s] + RPM_EC=0
[  164s] ++ jobs -p
[  165s] + exit 0
[  165s] Executing(%build): /usr/bin/bash -e /var/tmp/rpm-tmp.J4hl5C
[  165s] + umask 022
[  165s] + cd /home/abuild/rpmbuild/BUILD
[  165s] + /usr/bin/rm -rf /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64
[  165s] ++ dirname /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64
[  165s] + /usr/bin/mkdir -p /home/abuild/rpmbuild/BUILDROOT
[  165s] + /usr/bin/mkdir /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64
[  165s] + cd kajiki-0.8.3
[  165s] + ref=/usr/lib/rpm
[  165s] + mints=0
[  165s] + case $(uname -m) in
[  165s] ++ uname -m
[  165s] + mints=20160911
[  165s] + for s in guess sub
[  165s] ++ find -maxdepth 8 -name config.guess
[  165s] + for s in guess sub
[  165s] ++ find -maxdepth 8 -name config.sub
[  165s] ++ '[' -f _current_flavor ']'
[  165s] ++ true
[  165s] + last_flavor=
[  165s] + '[' -z '' ']'
[  165s] + last_flavor=tmp
[  165s] + '[' tmp '!=' python38 ']'
[  165s] + '[' -d build ']'
[  165s] + '[' -d _build.python38 ']'
[  165s] + echo python38
[  165s] + python_flavor=python38
[  165s] + /usr/bin/python3.8 setup.py build '--executable=/usr/bin/python3.8 -s'
[  171s] running build
[  171s] running build_py
[  171s] creating build
[  171s] creating build/lib
[  171s] creating build/lib/kajiki
[  171s] copying kajiki/__init__.py -> build/lib/kajiki
[  171s] copying kajiki/__main__.py -> build/lib/kajiki
[  171s] copying kajiki/ddict.py -> build/lib/kajiki
[  171s] copying kajiki/doctype.py -> build/lib/kajiki
[  171s] copying kajiki/entities.py -> build/lib/kajiki
[  171s] copying kajiki/html_utils.py -> build/lib/kajiki
[  171s] copying kajiki/i18n.py -> build/lib/kajiki
[  171s] copying kajiki/ir.py -> build/lib/kajiki
[  171s] copying kajiki/lnotab.py -> build/lib/kajiki
[  171s] copying kajiki/loader.py -> build/lib/kajiki
[  171s] copying kajiki/markup_template.py -> build/lib/kajiki
[  171s] copying kajiki/template.py -> build/lib/kajiki
[  171s] copying kajiki/text.py -> build/lib/kajiki
[  171s] copying kajiki/util.py -> build/lib/kajiki
[  171s] copying kajiki/version.py -> build/lib/kajiki
[  171s] copying kajiki/xml_template.py -> build/lib/kajiki
[  171s] creating build/lib/kajiki/integration
[  171s] copying kajiki/integration/__init__.py -> build/lib/kajiki/integration
[  171s] copying kajiki/integration/pyramid.py -> build/lib/kajiki/integration
[  171s] copying kajiki/integration/turbogears1.py -> build/lib/kajiki/integration
[  171s] creating build/lib/kajiki/tests
[  171s] copying kajiki/tests/__init__.py -> build/lib/kajiki/tests
[  171s] copying kajiki/tests/test_cli.py -> build/lib/kajiki/tests
[  171s] copying kajiki/tests/test_doctype.py -> build/lib/kajiki/tests
[  171s] copying kajiki/tests/test_ir.py -> build/lib/kajiki/tests
[  171s] copying kajiki/tests/test_runtime.py -> build/lib/kajiki/tests
[  171s] copying kajiki/tests/test_text.py -> build/lib/kajiki/tests
[  171s] copying kajiki/tests/test_xml.py -> build/lib/kajiki/tests
[  171s] creating build/lib/kajiki/tests/data
[  171s] copying kajiki/tests/data/__init__.py -> build/lib/kajiki/tests/data
[  171s] running egg_info
[  171s] writing kajiki.egg-info/PKG-INFO
[  171s] writing dependency_links to kajiki.egg-info/dependency_links.txt
[  171s] writing entry points to kajiki.egg-info/entry_points.txt
[  171s] writing requirements to kajiki.egg-info/requires.txt
[  171s] writing top-level names to kajiki.egg-info/top_level.txt
[  171s] reading manifest file 'kajiki.egg-info/SOURCES.txt'
[  171s] reading manifest template 'MANIFEST.in'
[  172s] no previously-included directories found matching 'kajiki/perf'
[  172s] no previously-included directories found matching 'docs/_build'
[  172s] warning: no previously-included files matching '*.pyc' found anywhere in distribution
[  172s] adding license file 'LICENSE.rst'
[  172s] writing manifest file 'kajiki.egg-info/SOURCES.txt'
[  172s] copying kajiki/tests/data/debug.html -> build/lib/kajiki/tests/data
[  172s] copying kajiki/tests/data/debug.txt -> build/lib/kajiki/tests/data
[  172s] copying kajiki/tests/data/error.html -> build/lib/kajiki/tests/data
[  172s] copying kajiki/tests/data/file_child.html -> build/lib/kajiki/tests/data
[  172s] copying kajiki/tests/data/file_parent.html -> build/lib/kajiki/tests/data
[  172s] copying kajiki/tests/data/simple.html -> build/lib/kajiki/tests/data
[  172s] ++ '[' -f _current_flavor ']'
[  172s] ++ cat _current_flavor
[  172s] + last_flavor=python38
[  172s] + '[' -z python38 ']'
[  172s] + '[' python38 '!=' python39 ']'
[  172s] + '[' -d build ']'
[  172s] + mv build _build.python38
[  172s] + '[' -d _build.python39 ']'
[  172s] + echo python39
[  172s] + python_flavor=python39
[  172s] + /usr/bin/python3.9 setup.py build '--executable=/usr/bin/python3.9 -s'
[  177s] running build
[  177s] running build_py
[  177s] creating build
[  177s] creating build/lib
[  177s] creating build/lib/kajiki
[  177s] copying kajiki/__init__.py -> build/lib/kajiki
[  177s] copying kajiki/__main__.py -> build/lib/kajiki
[  177s] copying kajiki/ddict.py -> build/lib/kajiki
[  177s] copying kajiki/doctype.py -> build/lib/kajiki
[  177s] copying kajiki/entities.py -> build/lib/kajiki
[  177s] copying kajiki/html_utils.py -> build/lib/kajiki
[  177s] copying kajiki/i18n.py -> build/lib/kajiki
[  177s] copying kajiki/ir.py -> build/lib/kajiki
[  177s] copying kajiki/lnotab.py -> build/lib/kajiki
[  177s] copying kajiki/loader.py -> build/lib/kajiki
[  177s] copying kajiki/markup_template.py -> build/lib/kajiki
[  177s] copying kajiki/template.py -> build/lib/kajiki
[  177s] copying kajiki/text.py -> build/lib/kajiki
[  177s] copying kajiki/util.py -> build/lib/kajiki
[  177s] copying kajiki/version.py -> build/lib/kajiki
[  177s] copying kajiki/xml_template.py -> build/lib/kajiki
[  177s] creating build/lib/kajiki/integration
[  177s] copying kajiki/integration/__init__.py -> build/lib/kajiki/integration
[  177s] copying kajiki/integration/pyramid.py -> build/lib/kajiki/integration
[  177s] copying kajiki/integration/turbogears1.py -> build/lib/kajiki/integration
[  177s] creating build/lib/kajiki/tests
[  177s] copying kajiki/tests/__init__.py -> build/lib/kajiki/tests
[  177s] copying kajiki/tests/test_cli.py -> build/lib/kajiki/tests
[  177s] copying kajiki/tests/test_doctype.py -> build/lib/kajiki/tests
[  177s] copying kajiki/tests/test_ir.py -> build/lib/kajiki/tests
[  177s] copying kajiki/tests/test_runtime.py -> build/lib/kajiki/tests
[  177s] copying kajiki/tests/test_text.py -> build/lib/kajiki/tests
[  177s] copying kajiki/tests/test_xml.py -> build/lib/kajiki/tests
[  177s] creating build/lib/kajiki/tests/data
[  177s] copying kajiki/tests/data/__init__.py -> build/lib/kajiki/tests/data
[  177s] running egg_info
[  178s] writing kajiki.egg-info/PKG-INFO
[  178s] writing dependency_links to kajiki.egg-info/dependency_links.txt
[  178s] writing entry points to kajiki.egg-info/entry_points.txt
[  178s] writing requirements to kajiki.egg-info/requires.txt
[  178s] writing top-level names to kajiki.egg-info/top_level.txt
[  178s] reading manifest file 'kajiki.egg-info/SOURCES.txt'
[  178s] reading manifest template 'MANIFEST.in'
[  178s] no previously-included directories found matching 'kajiki/perf'
[  178s] no previously-included directories found matching 'docs/_build'
[  178s] warning: no previously-included files matching '*.pyc' found anywhere in distribution
[  178s] adding license file 'LICENSE.rst'
[  178s] writing manifest file 'kajiki.egg-info/SOURCES.txt'
[  178s] copying kajiki/tests/data/debug.html -> build/lib/kajiki/tests/data
[  178s] copying kajiki/tests/data/debug.txt -> build/lib/kajiki/tests/data
[  178s] copying kajiki/tests/data/error.html -> build/lib/kajiki/tests/data
[  178s] copying kajiki/tests/data/file_child.html -> build/lib/kajiki/tests/data
[  178s] copying kajiki/tests/data/file_parent.html -> build/lib/kajiki/tests/data
[  178s] copying kajiki/tests/data/simple.html -> build/lib/kajiki/tests/data
[  178s] ++ '[' -f _current_flavor ']'
[  178s] ++ cat _current_flavor
[  178s] + last_flavor=python39
[  178s] + '[' -z python39 ']'
[  178s] + '[' python39 '!=' python311 ']'
[  178s] + '[' -d build ']'
[  178s] + mv build _build.python39
[  178s] + '[' -d _build.python311 ']'
[  178s] + echo python311
[  178s] + python_flavor=python311
[  178s] + /usr/bin/python3.11 setup.py build '--executable=/usr/bin/python3.11 -s'
[  183s] running build
[  183s] running build_py
[  183s] creating build
[  183s] creating build/lib
[  183s] creating build/lib/kajiki
[  183s] copying kajiki/__init__.py -> build/lib/kajiki
[  183s] copying kajiki/__main__.py -> build/lib/kajiki
[  183s] copying kajiki/ddict.py -> build/lib/kajiki
[  183s] copying kajiki/doctype.py -> build/lib/kajiki
[  183s] copying kajiki/entities.py -> build/lib/kajiki
[  183s] copying kajiki/html_utils.py -> build/lib/kajiki
[  183s] copying kajiki/i18n.py -> build/lib/kajiki
[  183s] copying kajiki/ir.py -> build/lib/kajiki
[  183s] copying kajiki/lnotab.py -> build/lib/kajiki
[  183s] copying kajiki/loader.py -> build/lib/kajiki
[  183s] copying kajiki/markup_template.py -> build/lib/kajiki
[  183s] copying kajiki/template.py -> build/lib/kajiki
[  183s] copying kajiki/text.py -> build/lib/kajiki
[  183s] copying kajiki/util.py -> build/lib/kajiki
[  183s] copying kajiki/version.py -> build/lib/kajiki
[  183s] copying kajiki/xml_template.py -> build/lib/kajiki
[  183s] creating build/lib/kajiki/integration
[  183s] copying kajiki/integration/__init__.py -> build/lib/kajiki/integration
[  183s] copying kajiki/integration/pyramid.py -> build/lib/kajiki/integration
[  183s] copying kajiki/integration/turbogears1.py -> build/lib/kajiki/integration
[  183s] creating build/lib/kajiki/tests
[  183s] copying kajiki/tests/__init__.py -> build/lib/kajiki/tests
[  183s] copying kajiki/tests/test_cli.py -> build/lib/kajiki/tests
[  183s] copying kajiki/tests/test_doctype.py -> build/lib/kajiki/tests
[  183s] copying kajiki/tests/test_ir.py -> build/lib/kajiki/tests
[  183s] copying kajiki/tests/test_runtime.py -> build/lib/kajiki/tests
[  183s] copying kajiki/tests/test_text.py -> build/lib/kajiki/tests
[  183s] copying kajiki/tests/test_xml.py -> build/lib/kajiki/tests
[  183s] creating build/lib/kajiki/tests/data
[  183s] copying kajiki/tests/data/__init__.py -> build/lib/kajiki/tests/data
[  183s] running egg_info
[  184s] writing kajiki.egg-info/PKG-INFO
[  184s] writing dependency_links to kajiki.egg-info/dependency_links.txt
[  184s] writing entry points to kajiki.egg-info/entry_points.txt
[  184s] writing requirements to kajiki.egg-info/requires.txt
[  184s] writing top-level names to kajiki.egg-info/top_level.txt
[  184s] reading manifest file 'kajiki.egg-info/SOURCES.txt'
[  184s] reading manifest template 'MANIFEST.in'
[  184s] no previously-included directories found matching 'kajiki/perf'
[  184s] no previously-included directories found matching 'docs/_build'
[  184s] warning: no previously-included files matching '*.pyc' found anywhere in distribution
[  184s] adding license file 'LICENSE.rst'
[  184s] writing manifest file 'kajiki.egg-info/SOURCES.txt'
[  184s] copying kajiki/tests/data/debug.html -> build/lib/kajiki/tests/data
[  184s] copying kajiki/tests/data/debug.txt -> build/lib/kajiki/tests/data
[  184s] copying kajiki/tests/data/error.html -> build/lib/kajiki/tests/data
[  184s] copying kajiki/tests/data/file_child.html -> build/lib/kajiki/tests/data
[  184s] copying kajiki/tests/data/file_parent.html -> build/lib/kajiki/tests/data
[  184s] copying kajiki/tests/data/simple.html -> build/lib/kajiki/tests/data
[  184s] ++ '[' -f _current_flavor ']'
[  184s] ++ cat _current_flavor
[  184s] + last_flavor=python311
[  184s] + '[' -z python311 ']'
[  184s] + '[' python311 '!=' python310 ']'
[  184s] + '[' -d build ']'
[  184s] + mv build _build.python311
[  184s] + '[' -d _build.python310 ']'
[  184s] + echo python310
[  184s] + python_flavor=python310
[  184s] + /usr/bin/python3.10 setup.py build '--executable=/usr/bin/python3.10 -s'
[  190s] running build
[  190s] running build_py
[  190s] creating build
[  190s] creating build/lib
[  190s] creating build/lib/kajiki
[  190s] copying kajiki/__init__.py -> build/lib/kajiki
[  190s] copying kajiki/__main__.py -> build/lib/kajiki
[  190s] copying kajiki/ddict.py -> build/lib/kajiki
[  190s] copying kajiki/doctype.py -> build/lib/kajiki
[  190s] copying kajiki/entities.py -> build/lib/kajiki
[  190s] copying kajiki/html_utils.py -> build/lib/kajiki
[  190s] copying kajiki/i18n.py -> build/lib/kajiki
[  190s] copying kajiki/ir.py -> build/lib/kajiki
[  190s] copying kajiki/lnotab.py -> build/lib/kajiki
[  190s] copying kajiki/loader.py -> build/lib/kajiki
[  190s] copying kajiki/markup_template.py -> build/lib/kajiki
[  190s] copying kajiki/template.py -> build/lib/kajiki
[  190s] copying kajiki/text.py -> build/lib/kajiki
[  190s] copying kajiki/util.py -> build/lib/kajiki
[  190s] copying kajiki/version.py -> build/lib/kajiki
[  190s] copying kajiki/xml_template.py -> build/lib/kajiki
[  190s] creating build/lib/kajiki/integration
[  190s] copying kajiki/integration/__init__.py -> build/lib/kajiki/integration
[  190s] copying kajiki/integration/pyramid.py -> build/lib/kajiki/integration
[  190s] copying kajiki/integration/turbogears1.py -> build/lib/kajiki/integration
[  190s] creating build/lib/kajiki/tests
[  190s] copying kajiki/tests/__init__.py -> build/lib/kajiki/tests
[  190s] copying kajiki/tests/test_cli.py -> build/lib/kajiki/tests
[  190s] copying kajiki/tests/test_doctype.py -> build/lib/kajiki/tests
[  190s] copying kajiki/tests/test_ir.py -> build/lib/kajiki/tests
[  190s] copying kajiki/tests/test_runtime.py -> build/lib/kajiki/tests
[  190s] copying kajiki/tests/test_text.py -> build/lib/kajiki/tests
[  190s] copying kajiki/tests/test_xml.py -> build/lib/kajiki/tests
[  190s] creating build/lib/kajiki/tests/data
[  190s] copying kajiki/tests/data/__init__.py -> build/lib/kajiki/tests/data
[  190s] running egg_info
[  190s] writing kajiki.egg-info/PKG-INFO
[  190s] writing dependency_links to kajiki.egg-info/dependency_links.txt
[  190s] writing entry points to kajiki.egg-info/entry_points.txt
[  190s] writing requirements to kajiki.egg-info/requires.txt
[  190s] writing top-level names to kajiki.egg-info/top_level.txt
[  190s] reading manifest file 'kajiki.egg-info/SOURCES.txt'
[  190s] reading manifest template 'MANIFEST.in'
[  190s] no previously-included directories found matching 'kajiki/perf'
[  190s] no previously-included directories found matching 'docs/_build'
[  190s] warning: no previously-included files matching '*.pyc' found anywhere in distribution
[  190s] adding license file 'LICENSE.rst'
[  190s] writing manifest file 'kajiki.egg-info/SOURCES.txt'
[  190s] copying kajiki/tests/data/debug.html -> build/lib/kajiki/tests/data
[  190s] copying kajiki/tests/data/debug.txt -> build/lib/kajiki/tests/data
[  190s] copying kajiki/tests/data/error.html -> build/lib/kajiki/tests/data
[  190s] copying kajiki/tests/data/file_child.html -> build/lib/kajiki/tests/data
[  190s] copying kajiki/tests/data/file_parent.html -> build/lib/kajiki/tests/data
[  190s] copying kajiki/tests/data/simple.html -> build/lib/kajiki/tests/data
[  191s] + RPM_EC=0
[  191s] ++ jobs -p
[  191s] + exit 0
[  191s] Executing(%install): /usr/bin/bash -e /var/tmp/rpm-tmp.tQjR7k
[  191s] + umask 022
[  191s] + cd /home/abuild/rpmbuild/BUILD
[  191s] + /usr/bin/rm -rf /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64
[  191s] + /usr/bin/mkdir -p /home/abuild/rpmbuild/BUILDROOT
[  191s] + /usr/bin/mkdir /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64
[  191s] + cd kajiki-0.8.3
[  191s] ++ '[' -f _current_flavor ']'
[  191s] ++ cat _current_flavor
[  191s] + last_flavor=python310
[  191s] + '[' -z python310 ']'
[  191s] + '[' python310 '!=' python38 ']'
[  191s] + '[' -d build ']'
[  191s] + mv build _build.python310
[  191s] + '[' -d _build.python38 ']'
[  191s] + mv _build.python38 build
[  191s] + echo python38
[  191s] + python_flavor=python38
[  191s] + /usr/bin/python3.8 setup.py install -O1 --skip-build --force --root /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64 --prefix /usr
[  197s] running install
[  197s] running install_lib
[  197s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr
[  197s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib
[  197s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8
[  197s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages
[  197s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/__main__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/ddict.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/doctype.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/entities.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/html_utils.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/i18n.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/ir.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/lnotab.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/loader.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/markup_template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/text.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/util.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/version.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] copying build/lib/kajiki/xml_template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki
[  197s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/integration
[  197s] copying build/lib/kajiki/integration/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/integration
[  197s] copying build/lib/kajiki/integration/pyramid.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/integration
[  197s] copying build/lib/kajiki/integration/turbogears1.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/integration
[  197s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests
[  197s] copying build/lib/kajiki/tests/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests
[  197s] copying build/lib/kajiki/tests/test_cli.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests
[  197s] copying build/lib/kajiki/tests/test_doctype.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests
[  197s] copying build/lib/kajiki/tests/test_ir.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests
[  197s] copying build/lib/kajiki/tests/test_runtime.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests
[  197s] copying build/lib/kajiki/tests/test_text.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests
[  197s] copying build/lib/kajiki/tests/test_xml.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests
[  197s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/data
[  197s] copying build/lib/kajiki/tests/data/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/data
[  197s] copying build/lib/kajiki/tests/data/debug.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/data
[  197s] copying build/lib/kajiki/tests/data/debug.txt -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/data
[  197s] copying build/lib/kajiki/tests/data/error.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/data
[  197s] copying build/lib/kajiki/tests/data/file_child.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/data
[  197s] copying build/lib/kajiki/tests/data/file_parent.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/data
[  197s] copying build/lib/kajiki/tests/data/simple.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/data
[  197s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/__init__.py to __init__.cpython-38.pyc
[  197s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/__main__.py to __main__.cpython-38.pyc
[  197s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/ddict.py to ddict.cpython-38.pyc
[  197s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/doctype.py to doctype.cpython-38.pyc
[  197s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/entities.py to entities.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/html_utils.py to html_utils.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/i18n.py to i18n.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/ir.py to ir.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/lnotab.py to lnotab.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/loader.py to loader.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/markup_template.py to markup_template.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/template.py to template.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/text.py to text.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/util.py to util.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/version.py to version.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/xml_template.py to xml_template.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/integration/__init__.py to __init__.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/integration/pyramid.py to pyramid.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/integration/turbogears1.py to turbogears1.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/__init__.py to __init__.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/test_cli.py to test_cli.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/test_doctype.py to test_doctype.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/test_ir.py to test_ir.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/test_runtime.py to test_runtime.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/test_text.py to test_text.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/test_xml.py to test_xml.cpython-38.pyc
[  198s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests/data/__init__.py to __init__.cpython-38.pyc
[  198s] writing byte-compilation script '/tmp/tmpobtzwcz2.py'
[  198s] /usr/bin/python3.8 /tmp/tmpobtzwcz2.py
[  204s] removing /tmp/tmpobtzwcz2.py
[  204s] running install_egg_info
[  204s] running egg_info
[  204s] writing kajiki.egg-info/PKG-INFO
[  204s] writing dependency_links to kajiki.egg-info/dependency_links.txt
[  204s] writing entry points to kajiki.egg-info/entry_points.txt
[  204s] writing requirements to kajiki.egg-info/requires.txt
[  204s] writing top-level names to kajiki.egg-info/top_level.txt
[  205s] reading manifest file 'kajiki.egg-info/SOURCES.txt'
[  205s] reading manifest template 'MANIFEST.in'
[  205s] /usr/lib/python3.8/site-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.
[  205s]   warnings.warn(
[  205s] no previously-included directories found matching 'kajiki/perf'
[  205s] no previously-included directories found matching 'docs/_build'
[  205s] warning: no previously-included files matching '*.pyc' found anywhere in distribution
[  205s] adding license file 'LICENSE.rst'
[  205s] writing manifest file 'kajiki.egg-info/SOURCES.txt'
[  205s] Copying kajiki.egg-info to /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki-0.8.3-py3.8.egg-info
[  205s] running install_scripts
[  205s] Installing kajiki script to /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin
[  206s] ++ '[' -f _current_flavor ']'
[  206s] ++ cat _current_flavor
[  206s] + last_flavor=python38
[  206s] + '[' -z python38 ']'
[  206s] + '[' python38 '!=' python39 ']'
[  206s] + '[' -d build ']'
[  206s] + mv build _build.python38
[  206s] + '[' -d _build.python39 ']'
[  206s] + mv _build.python39 build
[  206s] + echo python39
[  206s] + python_flavor=python39
[  206s] + /usr/bin/python3.9 setup.py install -O1 --skip-build --force --root /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64 --prefix /usr
[  211s] running install
[  211s] /usr/lib/python3.9/site-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.
[  211s]   warnings.warn(
[  211s] running install_lib
[  211s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9
[  211s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages
[  211s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/__main__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/ddict.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/doctype.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/entities.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/html_utils.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/i18n.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/ir.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/lnotab.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/loader.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/markup_template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/text.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/util.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/version.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] copying build/lib/kajiki/xml_template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki
[  211s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/integration
[  211s] copying build/lib/kajiki/integration/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/integration
[  211s] copying build/lib/kajiki/integration/pyramid.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/integration
[  211s] copying build/lib/kajiki/integration/turbogears1.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/integration
[  211s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests
[  211s] copying build/lib/kajiki/tests/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests
[  211s] copying build/lib/kajiki/tests/test_cli.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests
[  211s] copying build/lib/kajiki/tests/test_doctype.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests
[  211s] copying build/lib/kajiki/tests/test_ir.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests
[  211s] copying build/lib/kajiki/tests/test_runtime.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests
[  211s] copying build/lib/kajiki/tests/test_text.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests
[  211s] copying build/lib/kajiki/tests/test_xml.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests
[  211s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/data
[  211s] copying build/lib/kajiki/tests/data/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/data
[  211s] copying build/lib/kajiki/tests/data/debug.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/data
[  211s] copying build/lib/kajiki/tests/data/debug.txt -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/data
[  211s] copying build/lib/kajiki/tests/data/error.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/data
[  211s] copying build/lib/kajiki/tests/data/file_child.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/data
[  211s] copying build/lib/kajiki/tests/data/file_parent.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/data
[  211s] copying build/lib/kajiki/tests/data/simple.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/data
[  211s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/__init__.py to __init__.cpython-39.pyc
[  211s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/__main__.py to __main__.cpython-39.pyc
[  211s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/ddict.py to ddict.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/doctype.py to doctype.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/entities.py to entities.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/html_utils.py to html_utils.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/i18n.py to i18n.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/ir.py to ir.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/lnotab.py to lnotab.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/loader.py to loader.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/markup_template.py to markup_template.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/template.py to template.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/text.py to text.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/util.py to util.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/version.py to version.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/xml_template.py to xml_template.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/integration/__init__.py to __init__.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/integration/pyramid.py to pyramid.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/integration/turbogears1.py to turbogears1.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/__init__.py to __init__.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/test_cli.py to test_cli.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/test_doctype.py to test_doctype.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/test_ir.py to test_ir.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/test_runtime.py to test_runtime.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/test_text.py to test_text.cpython-39.pyc
[  212s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/test_xml.py to test_xml.cpython-39.pyc
[  213s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests/data/__init__.py to __init__.cpython-39.pyc
[  213s] writing byte-compilation script '/tmp/tmph9usf202.py'
[  213s] /usr/bin/python3.9 /tmp/tmph9usf202.py
[  219s] removing /tmp/tmph9usf202.py
[  219s] running install_egg_info
[  219s] running egg_info
[  219s] writing kajiki.egg-info/PKG-INFO
[  219s] writing dependency_links to kajiki.egg-info/dependency_links.txt
[  219s] writing entry points to kajiki.egg-info/entry_points.txt
[  219s] writing requirements to kajiki.egg-info/requires.txt
[  219s] writing top-level names to kajiki.egg-info/top_level.txt
[  219s] reading manifest file 'kajiki.egg-info/SOURCES.txt'
[  219s] reading manifest template 'MANIFEST.in'
[  219s] no previously-included directories found matching 'kajiki/perf'
[  219s] no previously-included directories found matching 'docs/_build'
[  219s] warning: no previously-included files matching '*.pyc' found anywhere in distribution
[  219s] adding license file 'LICENSE.rst'
[  219s] writing manifest file 'kajiki.egg-info/SOURCES.txt'
[  219s] Copying kajiki.egg-info to /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki-0.8.3-py3.9.egg-info
[  219s] running install_scripts
[  220s] Installing kajiki script to /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin
[  220s] ++ '[' -f _current_flavor ']'
[  220s] ++ cat _current_flavor
[  220s] + last_flavor=python39
[  220s] + '[' -z python39 ']'
[  220s] + '[' python39 '!=' python311 ']'
[  220s] + '[' -d build ']'
[  220s] + mv build _build.python39
[  220s] + '[' -d _build.python311 ']'
[  220s] + mv _build.python311 build
[  220s] + echo python311
[  220s] + python_flavor=python311
[  220s] + /usr/bin/python3.11 setup.py install -O1 --skip-build --force --root /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64 --prefix /usr
[  225s] running install
[  225s] /usr/lib/python3.11/site-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.
[  225s]   warnings.warn(
[  225s] running install_lib
[  225s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11
[  225s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages
[  225s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/__main__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/ddict.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/doctype.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/entities.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/html_utils.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/i18n.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/ir.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/lnotab.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/loader.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/markup_template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/text.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/util.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/version.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] copying build/lib/kajiki/xml_template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki
[  225s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration
[  225s] copying build/lib/kajiki/integration/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration
[  225s] copying build/lib/kajiki/integration/pyramid.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration
[  225s] copying build/lib/kajiki/integration/turbogears1.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration
[  225s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests
[  225s] copying build/lib/kajiki/tests/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests
[  225s] copying build/lib/kajiki/tests/test_cli.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests
[  225s] copying build/lib/kajiki/tests/test_doctype.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests
[  225s] copying build/lib/kajiki/tests/test_ir.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests
[  225s] copying build/lib/kajiki/tests/test_runtime.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests
[  225s] copying build/lib/kajiki/tests/test_text.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests
[  226s] copying build/lib/kajiki/tests/test_xml.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests
[  226s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/data
[  226s] copying build/lib/kajiki/tests/data/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/data
[  226s] copying build/lib/kajiki/tests/data/debug.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/data
[  226s] copying build/lib/kajiki/tests/data/debug.txt -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/data
[  226s] copying build/lib/kajiki/tests/data/error.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/data
[  226s] copying build/lib/kajiki/tests/data/file_child.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/data
[  226s] copying build/lib/kajiki/tests/data/file_parent.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/data
[  226s] copying build/lib/kajiki/tests/data/simple.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/data
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__init__.py to __init__.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__main__.py to __main__.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/ddict.py to ddict.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/doctype.py to doctype.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/entities.py to entities.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/html_utils.py to html_utils.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/i18n.py to i18n.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/ir.py to ir.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/lnotab.py to lnotab.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/loader.py to loader.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/markup_template.py to markup_template.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/template.py to template.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/text.py to text.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/util.py to util.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/version.py to version.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/xml_template.py to xml_template.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration/__init__.py to __init__.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration/pyramid.py to pyramid.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration/turbogears1.py to turbogears1.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/__init__.py to __init__.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/test_cli.py to test_cli.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/test_doctype.py to test_doctype.cpython-311.pyc
[  226s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/test_ir.py to test_ir.cpython-311.pyc
[  227s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/test_runtime.py to test_runtime.cpython-311.pyc
[  227s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/test_text.py to test_text.cpython-311.pyc
[  227s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/test_xml.py to test_xml.cpython-311.pyc
[  227s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests/data/__init__.py to __init__.cpython-311.pyc
[  227s] writing byte-compilation script '/tmp/tmpb0a5c8ae.py'
[  227s] /usr/bin/python3.11 /tmp/tmpb0a5c8ae.py
[  233s] removing /tmp/tmpb0a5c8ae.py
[  233s] running install_egg_info
[  233s] running egg_info
[  233s] writing kajiki.egg-info/PKG-INFO
[  233s] writing dependency_links to kajiki.egg-info/dependency_links.txt
[  233s] writing entry points to kajiki.egg-info/entry_points.txt
[  233s] writing requirements to kajiki.egg-info/requires.txt
[  233s] writing top-level names to kajiki.egg-info/top_level.txt
[  233s] reading manifest file 'kajiki.egg-info/SOURCES.txt'
[  233s] reading manifest template 'MANIFEST.in'
[  233s] no previously-included directories found matching 'kajiki/perf'
[  233s] no previously-included directories found matching 'docs/_build'
[  233s] warning: no previously-included files matching '*.pyc' found anywhere in distribution
[  233s] adding license file 'LICENSE.rst'
[  233s] writing manifest file 'kajiki.egg-info/SOURCES.txt'
[  233s] Copying kajiki.egg-info to /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki-0.8.3-py3.11.egg-info
[  233s] running install_scripts
[  234s] Installing kajiki script to /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin
[  234s] ++ '[' -f _current_flavor ']'
[  234s] ++ cat _current_flavor
[  234s] + last_flavor=python311
[  234s] + '[' -z python311 ']'
[  234s] + '[' python311 '!=' python310 ']'
[  234s] + '[' -d build ']'
[  234s] + mv build _build.python311
[  234s] + '[' -d _build.python310 ']'
[  234s] + mv _build.python310 build
[  234s] + echo python310
[  234s] + python_flavor=python310
[  234s] + /usr/bin/python3.10 setup.py install -O1 --skip-build --force --root /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64 --prefix /usr
[  239s] running install
[  239s] /usr/lib/python3.10/site-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.
[  239s]   warnings.warn(
[  240s] running install_lib
[  240s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10
[  240s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages
[  240s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/__main__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/ddict.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/doctype.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/entities.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/html_utils.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/i18n.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/ir.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/lnotab.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/loader.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/markup_template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/text.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/util.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/version.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] copying build/lib/kajiki/xml_template.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki
[  240s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/integration
[  240s] copying build/lib/kajiki/integration/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/integration
[  240s] copying build/lib/kajiki/integration/pyramid.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/integration
[  240s] copying build/lib/kajiki/integration/turbogears1.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/integration
[  240s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests
[  240s] copying build/lib/kajiki/tests/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests
[  240s] copying build/lib/kajiki/tests/test_cli.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests
[  240s] copying build/lib/kajiki/tests/test_doctype.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests
[  240s] copying build/lib/kajiki/tests/test_ir.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests
[  240s] copying build/lib/kajiki/tests/test_runtime.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests
[  240s] copying build/lib/kajiki/tests/test_text.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests
[  240s] copying build/lib/kajiki/tests/test_xml.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests
[  240s] creating /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/data
[  240s] copying build/lib/kajiki/tests/data/__init__.py -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/data
[  240s] copying build/lib/kajiki/tests/data/debug.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/data
[  240s] copying build/lib/kajiki/tests/data/debug.txt -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/data
[  240s] copying build/lib/kajiki/tests/data/error.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/data
[  240s] copying build/lib/kajiki/tests/data/file_child.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/data
[  240s] copying build/lib/kajiki/tests/data/file_parent.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/data
[  240s] copying build/lib/kajiki/tests/data/simple.html -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/data
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/__init__.py to __init__.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/__main__.py to __main__.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/ddict.py to ddict.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/doctype.py to doctype.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/entities.py to entities.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/html_utils.py to html_utils.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/i18n.py to i18n.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/ir.py to ir.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/lnotab.py to lnotab.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/loader.py to loader.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/markup_template.py to markup_template.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/template.py to template.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/text.py to text.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/util.py to util.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/version.py to version.cpython-310.pyc
[  240s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/xml_template.py to xml_template.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/integration/__init__.py to __init__.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/integration/pyramid.py to pyramid.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/integration/turbogears1.py to turbogears1.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/__init__.py to __init__.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/test_cli.py to test_cli.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/test_doctype.py to test_doctype.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/test_ir.py to test_ir.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/test_runtime.py to test_runtime.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/test_text.py to test_text.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/test_xml.py to test_xml.cpython-310.pyc
[  241s] byte-compiling /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests/data/__init__.py to __init__.cpython-310.pyc
[  241s] writing byte-compilation script '/tmp/tmpy5hcu22o.py'
[  241s] /usr/bin/python3.10 /tmp/tmpy5hcu22o.py
[  247s] removing /tmp/tmpy5hcu22o.py
[  247s] running install_egg_info
[  247s] running egg_info
[  247s] writing kajiki.egg-info/PKG-INFO
[  247s] writing dependency_links to kajiki.egg-info/dependency_links.txt
[  247s] writing entry points to kajiki.egg-info/entry_points.txt
[  247s] writing requirements to kajiki.egg-info/requires.txt
[  247s] writing top-level names to kajiki.egg-info/top_level.txt
[  247s] reading manifest file 'kajiki.egg-info/SOURCES.txt'
[  247s] reading manifest template 'MANIFEST.in'
[  248s] no previously-included directories found matching 'kajiki/perf'
[  248s] no previously-included directories found matching 'docs/_build'
[  248s] warning: no previously-included files matching '*.pyc' found anywhere in distribution
[  248s] adding license file 'LICENSE.rst'
[  248s] writing manifest file 'kajiki.egg-info/SOURCES.txt'
[  248s] Copying kajiki.egg-info to /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki-0.8.3-py3.10.egg-info
[  248s] running install_scripts
[  248s] Installing kajiki script to /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin
[  249s] + cp /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki-3.8
[  249s] + sed -ri '1s@#!.*python.*@#!/usr/bin/python3.8@' /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki-3.8
[  249s] + cp /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki-3.9
[  249s] + sed -ri '1s@#!.*python.*@#!/usr/bin/python3.9@' /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki-3.9
[  249s] + cp /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki-3.11
[  249s] + sed -ri '1s@#!.*python.*@#!/usr/bin/python3.11@' /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki-3.11
[  249s] + cp /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki-3.10
[  249s] + sed -ri '1s@#!.*python.*@#!/usr/bin/python3.10@' /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki-3.10
[  249s] + rm -f /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki
[  249s] + alternative_target=/usr/bin/kajiki
[  249s] + [[ /usr/bin/kajiki == /usr/share/man* ]]
[  249s] + '[' 0 -eq 1 ']'
[  249s] + mkdir -p /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/etc/alternatives
[  249s] + touch /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/etc/alternatives/kajiki
[  249s] + ln -sf /etc/alternatives/kajiki /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/bin/kajiki
[  249s] ++ '[' -f _current_flavor ']'
[  249s] ++ cat _current_flavor
[  249s] + last_flavor=python310
[  249s] + '[' -z python310 ']'
[  249s] + '[' python310 '!=' python38 ']'
[  249s] + '[' -d build ']'
[  249s] + mv build _build.python310
[  249s] + '[' -d _build.python38 ']'
[  249s] + mv _build.python38 build
[  249s] + echo python38
[  249s] + python_flavor=python38
[  249s] + rm -r /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki/tests
[  249s] ++ '[' -f _current_flavor ']'
[  249s] ++ cat _current_flavor
[  249s] + last_flavor=python38
[  249s] + '[' -z python38 ']'
[  249s] + '[' python38 '!=' python39 ']'
[  249s] + '[' -d build ']'
[  249s] + mv build _build.python38
[  250s] + '[' -d _build.python39 ']'
[  250s] + mv _build.python39 build
[  250s] + echo python39
[  250s] + python_flavor=python39
[  250s] + rm -r /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki/tests
[  250s] ++ '[' -f _current_flavor ']'
[  250s] ++ cat _current_flavor
[  250s] + last_flavor=python39
[  250s] + '[' -z python39 ']'
[  250s] + '[' python39 '!=' python311 ']'
[  250s] + '[' -d build ']'
[  250s] + mv build _build.python39
[  250s] + '[' -d _build.python311 ']'
[  250s] + mv _build.python311 build
[  250s] + echo python311
[  250s] + python_flavor=python311
[  250s] + rm -r /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/tests
[  250s] ++ '[' -f _current_flavor ']'
[  250s] ++ cat _current_flavor
[  250s] + last_flavor=python311
[  250s] + '[' -z python311 ']'
[  250s] + '[' python311 '!=' python310 ']'
[  250s] + '[' -d build ']'
[  250s] + mv build _build.python311
[  250s] + '[' -d _build.python310 ']'
[  250s] + mv _build.python310 build
[  250s] + echo python310
[  250s] + python_flavor=python310
[  250s] + rm -r /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki/tests
[  250s] ++ '[' -f _current_flavor ']'
[  250s] ++ cat _current_flavor
[  250s] + last_flavor=python310
[  250s] + '[' -z python310 ']'
[  250s] + '[' python310 '!=' python38 ']'
[  250s] + '[' -d build ']'
[  250s] + mv build _build.python310
[  250s] + '[' -d _build.python38 ']'
[  250s] + mv _build.python38 build
[  250s] + echo python38
[  250s] + python_flavor=python38
[  250s] + /usr/lib/rpm/fdupes_wrapper /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages
[  250s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki-0.8.3-py3.8.egg-info/dependency_links.txt -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages/kajiki-0.8.3-py3.8.egg-info/not-zip-safe
[  250s] ++ '[' -f _current_flavor ']'
[  250s] ++ cat _current_flavor
[  250s] + last_flavor=python38
[  250s] + '[' -z python38 ']'
[  250s] + '[' python38 '!=' python39 ']'
[  250s] + '[' -d build ']'
[  250s] + mv build _build.python38
[  250s] + '[' -d _build.python39 ']'
[  250s] + mv _build.python39 build
[  251s] + echo python39
[  251s] + python_flavor=python39
[  251s] + /usr/lib/rpm/fdupes_wrapper /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki-0.8.3-py3.9.egg-info/dependency_links.txt -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages/kajiki-0.8.3-py3.9.egg-info/not-zip-safe
[  251s] ++ '[' -f _current_flavor ']'
[  251s] ++ cat _current_flavor
[  251s] + last_flavor=python39
[  251s] + '[' -z python39 ']'
[  251s] + '[' python39 '!=' python311 ']'
[  251s] + '[' -d build ']'
[  251s] + mv build _build.python39
[  251s] + '[' -d _build.python311 ']'
[  251s] + mv _build.python311 build
[  251s] + echo python311
[  251s] + python_flavor=python311
[  251s] + /usr/lib/rpm/fdupes_wrapper /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki-0.8.3-py3.11.egg-info/dependency_links.txt -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki-0.8.3-py3.11.egg-info/not-zip-safe
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/version.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/version.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/util.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/util.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/text.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/text.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/template.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/template.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/xml_template.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/xml_template.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/loader.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/loader.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/lnotab.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/lnotab.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/ir.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/ir.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/i18n.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/i18n.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/html_utils.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/html_utils.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/entities.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/entities.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/doctype.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/doctype.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/ddict.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/ddict.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/__main__.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/__main__.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/__init__.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/__init__.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/markup_template.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/__pycache__/markup_template.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration/__pycache__/turbogears1.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration/__pycache__/turbogears1.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration/__pycache__/pyramid.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration/__pycache__/pyramid.cpython-311.pyc
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration/__pycache__/__init__.cpython-311.opt-1.pyc -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages/kajiki/integration/__pycache__/__init__.cpython-311.pyc
[  251s] ++ '[' -f _current_flavor ']'
[  251s] ++ cat _current_flavor
[  251s] + last_flavor=python311
[  251s] + '[' -z python311 ']'
[  251s] + '[' python311 '!=' python310 ']'
[  251s] + '[' -d build ']'
[  251s] + mv build _build.python311
[  251s] + '[' -d _build.python310 ']'
[  251s] + mv _build.python310 build
[  251s] + echo python310
[  251s] + python_flavor=python310
[  251s] + /usr/lib/rpm/fdupes_wrapper /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages
[  251s] Linking /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki-0.8.3-py3.10.egg-info/dependency_links.txt -> /home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.10/site-packages/kajiki-0.8.3-py3.10.egg-info/not-zip-safe
[  251s] + /usr/lib/rpm/find-debuginfo -j4 -n --run-dwz --dwz-low-mem-die-limit 10000000 --dwz-max-die-limit 50000000 -S debugsourcefiles.list /home/abuild/rpmbuild/BUILD/kajiki-0.8.3
[  252s] + /usr/lib/rpm/brp-compress
[  253s] + /usr/lib/rpm/brp-suse
[  253s] calling /usr/lib/rpm/brp-suse.d/brp-05-permissions
[  253s] calling /usr/lib/rpm/brp-suse.d/brp-15-strip-debug
[  253s] calling /usr/lib/rpm/brp-suse.d/brp-25-symlink
[  253s] calling /usr/lib/rpm/brp-suse.d/brp-50-generate-fips-hmac
[  253s] calling /usr/lib/rpm/brp-suse.d/brp-75-ar
[  254s] Executing(%check): /usr/bin/bash -e /var/tmp/rpm-tmp.VNnYhu
[  254s] + umask 022
[  254s] + cd /home/abuild/rpmbuild/BUILD
[  254s] + cd kajiki-0.8.3
[  254s] + set +x
[  254s] Using libalternatives variant 38 for py.test in XDG_CONFIG_HOME during Python 3.8 expansions.
[  254s] Using libalternatives variant 38 for pybabel in XDG_CONFIG_HOME during Python 3.8 expansions.
[  254s] Using libalternatives variant 38 for pytest in XDG_CONFIG_HOME during Python 3.8 expansions.
[  255s] Using alternative kajiki-3.8 for kajiki in ./build/flavorbin during Python 3.8 expansions.
[  255s] Using libalternatives variant 39 for py.test in XDG_CONFIG_HOME during Python 3.9 expansions.
[  255s] Using libalternatives variant 39 for pybabel in XDG_CONFIG_HOME during Python 3.9 expansions.
[  255s] Using libalternatives variant 39 for pytest in XDG_CONFIG_HOME during Python 3.9 expansions.
[  256s] Using alternative kajiki-3.9 for kajiki in ./build/flavorbin during Python 3.9 expansions.
[  256s] Using libalternatives variant 311 for py.test in XDG_CONFIG_HOME during Python 3.11 expansions.
[  256s] Using libalternatives variant 311 for pybabel in XDG_CONFIG_HOME during Python 3.11 expansions.
[  256s] Using libalternatives variant 311 for pytest in XDG_CONFIG_HOME during Python 3.11 expansions.
[  257s] Using alternative kajiki-3.11 for kajiki in ./build/flavorbin during Python 3.11 expansions.
[  257s] Using alternative kajiki-3.10 for kajiki in ./build/flavorbin during Python 3.10 expansions.
[  257s] + export PATH=/home/abuild/rpmbuild/BUILD/kajiki-0.8.3/build/flavorbin:/usr/local/bin:/usr/bin:/bin
[  257s] + PATH=/home/abuild/rpmbuild/BUILD/kajiki-0.8.3/build/flavorbin:/usr/local/bin:/usr/bin:/bin
[  257s] ++ '[' -f _current_flavor ']'
[  257s] ++ cat _current_flavor
[  257s] + last_flavor=python310
[  257s] + '[' -z python310 ']'
[  257s] + '[' python310 '!=' python38 ']'
[  257s] + '[' -d build ']'
[  257s] + mv build _build.python310
[  257s] + '[' -d _build.python38 ']'
[  257s] + mv _build.python38 build
[  257s] + echo python38
[  257s] + python_flavor=python38
[  257s] + PYTHONPATH=/home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.8/site-packages
[  257s] + PYTHONDONTWRITEBYTECODE=1
[  257s] + pytest-3.8 --ignore=_build.python38 --ignore=_build.python39 --ignore=_build.python311 --ignore=_build.python310 -v
[  263s] ============================= test session starts ==============================
[  263s] platform linux -- Python 3.8.16, pytest-7.2.0, pluggy-1.0.0 -- /usr/bin/python3.8
[  263s] cachedir: .pytest_cache
[  263s] rootdir: /home/abuild/rpmbuild/BUILD/kajiki-0.8.3
[  270s] collecting ... collected 147 items
[  270s] 
[  270s] kajiki/tests/test_cli.py::TestCLI::test_output_to_file PASSED            [  0%]
[  270s] kajiki/tests/test_cli.py::TestCLI::test_package_loader_site_dirs PASSED  [  1%]
[  270s] kajiki/tests/test_cli.py::TestCLI::test_simple_file_load PASSED          [  2%]
[  270s] kajiki/tests/test_cli.py::TestCLI::test_simple_package_load PASSED       [  2%]
[  270s] kajiki/tests/test_cli.py::TestCLI::test_template_variables PASSED        [  3%]
[  270s] kajiki/tests/test_doctype.py::TestDTD::test_dtd PASSED                   [  4%]
[  270s] kajiki/tests/test_doctype.py::TestDTD::test_extract_dtd PASSED           [  4%]
[  271s] kajiki/tests/test_ir.py::TestBasic::test PASSED                          [  5%]
[  271s] kajiki/tests/test_ir.py::TestSwitch::test_basic PASSED                   [  6%]
[  271s] kajiki/tests/test_ir.py::TestFunction::test_basic PASSED                 [  6%]
[  271s] kajiki/tests/test_ir.py::TestCall::test_basic PASSED                     [  7%]
[  271s] kajiki/tests/test_ir.py::TestImport::test_import PASSED                  [  8%]
[  271s] kajiki/tests/test_ir.py::TestInclude::test_include PASSED                [  8%]
[  271s] kajiki/tests/test_ir.py::TestExtends::test_extends PASSED                [  9%]
[  271s] kajiki/tests/test_ir.py::TestDynamicExtends::test_extends PASSED         [ 10%]
[  271s] kajiki/tests/test_runtime.py::TestBasic::test_basic PASSED               [ 10%]
[  271s] kajiki/tests/test_runtime.py::TestSwitch::test_basic PASSED              [ 11%]
[  271s] kajiki/tests/test_runtime.py::TestFunction::test_basic PASSED            [ 12%]
[  271s] kajiki/tests/test_runtime.py::TestCall::test_basic PASSED                [ 12%]
[  271s] kajiki/tests/test_runtime.py::TestImport::test_import PASSED             [ 13%]
[  271s] kajiki/tests/test_runtime.py::TestInclude::test_include PASSED           [ 14%]
[  271s] kajiki/tests/test_runtime.py::TestExtends::test_extends PASSED           [ 14%]
[  271s] kajiki/tests/test_runtime.py::TestDynamicExtends::test_extends PASSED    [ 15%]
[  271s] kajiki/tests/test_text.py::TestBasic::test_auto_escape PASSED            [ 16%]
[  271s] kajiki/tests/test_text.py::TestBasic::test_auto_escape_disable PASSED    [ 17%]
[  271s] kajiki/tests/test_text.py::TestBasic::test_expr_None PASSED              [ 17%]
[  271s] kajiki/tests/test_text.py::TestBasic::test_expr_brace PASSED             [ 18%]
[  271s] kajiki/tests/test_text.py::TestBasic::test_expr_brace_complex PASSED     [ 19%]
[  271s] kajiki/tests/test_text.py::TestBasic::test_expr_multiline PASSED         [ 19%]
[  271s] kajiki/tests/test_text.py::TestBasic::test_expr_name PASSED              [ 20%]
[  271s] kajiki/tests/test_text.py::TestSwitch::test_ljust PASSED                 [ 21%]
[  271s] kajiki/tests/test_text.py::TestSwitch::test_rstrip PASSED                [ 21%]
[  271s] kajiki/tests/test_text.py::TestSwitch::test_switch PASSED                [ 22%]
[  271s] kajiki/tests/test_text.py::TestFunction::test_function PASSED            [ 23%]
[  271s] kajiki/tests/test_text.py::TestCall::test_call PASSED                    [ 23%]
[  271s] kajiki/tests/test_text.py::TestImport::test_import_auto PASSED           [ 24%]
[  272s] kajiki/tests/test_text.py::TestImport::test_import_simple PASSED         [ 25%]
[  272s] kajiki/tests/test_text.py::TestImport::test_include PASSED               [ 25%]
[  272s] kajiki/tests/test_text.py::TestExtends::test_basic PASSED                [ 26%]
[  272s] kajiki/tests/test_text.py::TestExtends::test_block PASSED                [ 27%]
[  272s] kajiki/tests/test_text.py::TestExtends::test_dynamic PASSED              [ 27%]
[  272s] kajiki/tests/test_text.py::TestClosure::test PASSED                      [ 28%]
[  272s] kajiki/tests/test_text.py::TestPython::test_basic PASSED                 [ 29%]
[  272s] kajiki/tests/test_text.py::TestPython::test_indent PASSED                [ 29%]
[  272s] kajiki/tests/test_text.py::TestPython::test_mod PASSED                   [ 30%]
[  272s] kajiki/tests/test_text.py::TestPython::test_short PASSED                 [ 31%]
[  272s] kajiki/tests/test_text.py::TestDebug::test_debug PASSED                  [ 31%]
[  272s] kajiki/tests/test_xml.py::TestParser::test_parser PASSED                 [ 32%]
[  272s] kajiki/tests/test_xml.py::TestExpand::test_expand PASSED                 [ 33%]
[  272s] kajiki/tests/test_xml.py::TestSimple::test_CDATA_disabled PASSED         [ 34%]
[  272s] kajiki/tests/test_xml.py::TestSimple::test_CDATA_escaping PASSED         [ 34%]
[  272s] kajiki/tests/test_xml.py::TestSimple::test_CDATA_escaping_mixed PASSED   [ 35%]
[  272s] kajiki/tests/test_xml.py::TestSimple::test_double_escape_dollar PASSED   [ 36%]
[  272s] kajiki/tests/test_xml.py::TestSimple::test_empty_attr PASSED             [ 36%]
[  272s] kajiki/tests/test_xml.py::TestSimple::test_escape_dollar PASSED          [ 37%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_escape_dollar_followed_by_dollar PASSED [ 38%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_expr_brace_complex PASSED     [ 38%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_expr_braced PASSED            [ 39%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_expr_multiline PASSED         [ 40%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_expr_multiline_and_IndentationError PASSED [ 40%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_expr_multiline_cdata PASSED   [ 41%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_expr_name PASSED              [ 42%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_html_entities PASSED          [ 42%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_jquery_call_is_not_expr PASSED [ 43%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_jquery_shortcut_is_not_expr PASSED [ 44%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_pre_whitespace PASSED         [ 44%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_preserve_dollar_not_variable_brace PASSED [ 45%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_script PASSED                 [ 46%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_script_commented_CDATA PASSED [ 46%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_script_escaping PASSED        [ 47%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_script_variable PASSED        [ 48%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_style_escaping PASSED         [ 48%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_textarea_whitespace PASSED    [ 49%]
[  273s] kajiki/tests/test_xml.py::TestSimple::test_xml_entities PASSED           [ 50%]
[  273s] kajiki/tests/test_xml.py::TestSwitch::test_case_elem PASSED              [ 51%]
[  273s] kajiki/tests/test_xml.py::TestSwitch::test_switch PASSED                 [ 51%]
[  273s] kajiki/tests/test_xml.py::TestSwitch::test_switch_div PASSED             [ 52%]
[  273s] kajiki/tests/test_xml.py::TestSwitch::test_switch_multi PASSED           [ 53%]
[  273s] kajiki/tests/test_xml.py::TestElse::test_pyif_pyelse PASSED              [ 53%]
[  273s] kajiki/tests/test_xml.py::TestElse::test_pyif_pyelse_continuation PASSED [ 54%]
[  273s] kajiki/tests/test_xml.py::TestElse::test_pyiftag_pyelse_continuation PASSED [ 55%]
[  273s] kajiki/tests/test_xml.py::TestWith::test_standalone PASSED               [ 55%]
[  273s] kajiki/tests/test_xml.py::TestWith::test_with PASSED                     [ 56%]
[  274s] kajiki/tests/test_xml.py::TestWith::test_with_multiple PASSED            [ 57%]
[  274s] kajiki/tests/test_xml.py::TestWith::test_with_multiple_and_whitespace PASSED [ 57%]
[  274s] kajiki/tests/test_xml.py::TestWith::test_with_multiple_with_embedded_semicolons PASSED [ 58%]
[  274s] kajiki/tests/test_xml.py::TestWith::test_with_ordered_multiple PASSED    [ 59%]
[  274s] kajiki/tests/test_xml.py::TestWith::test_with_trailing_semicolon PASSED  [ 59%]
[  274s] kajiki/tests/test_xml.py::TestFunction::test_empty_function PASSED       [ 60%]
[  274s] kajiki/tests/test_xml.py::TestFunction::test_function PASSED             [ 61%]
[  274s] kajiki/tests/test_xml.py::TestFunction::test_function_in_attr PASSED     [ 61%]
[  274s] kajiki/tests/test_xml.py::TestCall::test_call PASSED                     [ 62%]
[  274s] kajiki/tests/test_xml.py::TestImport::test_import PASSED                 [ 63%]
[  274s] kajiki/tests/test_xml.py::TestImport::test_import_auto PASSED            [ 63%]
[  274s] kajiki/tests/test_xml.py::TestImport::test_include PASSED                [ 64%]
[  274s] kajiki/tests/test_xml.py::TestImport::test_include_html5 PASSED          [ 65%]
[  274s] kajiki/tests/test_xml.py::TestExtends::test_autoblocks PASSED            [ 65%]
[  274s] kajiki/tests/test_xml.py::TestExtends::test_autoblocks_disabling PASSED  [ 66%]
[  274s] kajiki/tests/test_xml.py::TestExtends::test_basic PASSED                 [ 67%]
[  274s] kajiki/tests/test_xml.py::TestExtends::test_block PASSED                 [ 68%]
[  274s] kajiki/tests/test_xml.py::TestExtends::test_dynamic PASSED               [ 68%]
[  274s] kajiki/tests/test_xml.py::TestClosure::test PASSED                       [ 69%]
[  274s] kajiki/tests/test_xml.py::TestPython::test_basic PASSED                  [ 70%]
[  274s] kajiki/tests/test_xml.py::TestPython::test_indent PASSED                 [ 70%]
[  274s] kajiki/tests/test_xml.py::TestPython::test_mod PASSED                    [ 71%]
[  275s] kajiki/tests/test_xml.py::TestPython::test_short PASSED                  [ 72%]
[  275s] kajiki/tests/test_xml.py::TestComment::test_basic PASSED                 [ 72%]
[  275s] kajiki/tests/test_xml.py::TestAttributes::test_attrs PASSED              [ 73%]
[  275s] kajiki/tests/test_xml.py::TestAttributes::test_basic PASSED              [ 74%]
[  275s] kajiki/tests/test_xml.py::TestAttributes::test_content PASSED            [ 74%]
[  275s] kajiki/tests/test_xml.py::TestAttributes::test_escape_attr_values PASSED [ 75%]
[  275s] kajiki/tests/test_xml.py::TestAttributes::test_html_attrs PASSED         [ 76%]
[  275s] kajiki/tests/test_xml.py::TestAttributes::test_replace PASSED            [ 76%]
[  275s] kajiki/tests/test_xml.py::TestAttributes::test_strip PASSED              [ 77%]
[  275s] kajiki/tests/test_xml.py::TestAttributes::test_xml_namespaces PASSED     [ 78%]
[  275s] kajiki/tests/test_xml.py::TestDebug::test_debug PASSED                   [ 78%]
[  275s] kajiki/tests/test_xml.py::TestPackageLoader::test_pkg_loader PASSED      [ 79%]
[  275s] kajiki/tests/test_xml.py::TestBuiltinFunctions::test_defined PASSED      [ 80%]
[  275s] kajiki/tests/test_xml.py::TestBuiltinFunctions::test_literal PASSED      [ 80%]
[  275s] kajiki/tests/test_xml.py::TestBuiltinFunctions::test_value_of PASSED     [ 81%]
[  275s] kajiki/tests/test_xml.py::TestTranslation::test_extract_python_inside PASSED [ 82%]
[  275s] kajiki/tests/test_xml.py::TestTranslation::test_extract_python_inside_invalid PASSED [ 82%]
[  275s] kajiki/tests/test_xml.py::TestTranslation::test_extract_translate PASSED [ 83%]
[  276s] kajiki/tests/test_xml.py::TestTranslation::test_scripts_non_translatable PASSED [ 84%]
[  276s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda PASSED [ 85%]
[  276s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending PASSED [ 85%]
[  276s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending_file PASSED [ 86%]
[  276s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending_twice PASSED [ 87%]
[  276s] kajiki/tests/test_xml.py::TestTranslation::test_without_substituting_gettext_with_lambda_extending_file PASSED [ 87%]
[  276s] kajiki/tests/test_xml.py::TestDOMTransformations::test_empty_text_extraction PASSED [ 88%]
[  276s] kajiki/tests/test_xml.py::TestDOMTransformations::test_empty_text_extraction_lineno PASSED [ 89%]
[  276s] kajiki/tests/test_xml.py::TestErrorReporting::test_code_error PASSED     [ 89%]
[  276s] kajiki/tests/test_xml.py::TestErrorReporting::test_syntax_error PASSED   [ 90%]
[  276s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_brackets_asymmetric PASSED [ 91%]
[  276s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_complex PASSED  [ 91%]
[  276s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_leading_opening_brace PASSED [ 92%]
[  276s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_raise_plus_with_an_operand PASSED [ 93%]
[  276s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_raise_unclosed_string PASSED [ 93%]
[  276s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_simple PASSED   [ 94%]
[  276s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_some_brackets PASSED [ 95%]
[  276s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_unclosed_braced PASSED [ 95%]
[  276s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_with_padding_space PASSED [ 96%]
[  276s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_comment PASSED [ 97%]
[  276s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_multiple_nodes PASSED [ 97%]
[  276s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_ok PASSED      [ 98%]
[  276s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_only_comment PASSED [ 99%]
[  276s] kajiki/tests/test_xml.py::TestSyntaxErrorCallingWithTrailingParenthesis::test_raise PASSED [100%]
[  276s] 
[  276s] ============================= 147 passed in 13.56s =============================
[  277s] ++ '[' -f _current_flavor ']'
[  277s] ++ cat _current_flavor
[  277s] + last_flavor=python38
[  277s] + '[' -z python38 ']'
[  277s] + '[' python38 '!=' python39 ']'
[  277s] + '[' -d build ']'
[  277s] + mv build _build.python38
[  277s] + '[' -d _build.python39 ']'
[  277s] + mv _build.python39 build
[  277s] + echo python39
[  277s] + python_flavor=python39
[  277s] + PYTHONPATH=/home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.9/site-packages
[  277s] + PYTHONDONTWRITEBYTECODE=1
[  277s] + pytest-3.9 --ignore=_build.python38 --ignore=_build.python39 --ignore=_build.python311 --ignore=_build.python310 -v
[  281s] ============================= test session starts ==============================
[  281s] platform linux -- Python 3.9.16, pytest-7.2.0, pluggy-1.0.0 -- /usr/bin/python3.9
[  281s] cachedir: .pytest_cache
[  281s] rootdir: /home/abuild/rpmbuild/BUILD/kajiki-0.8.3
[  289s] collecting ... collected 147 items
[  289s] 
[  290s] kajiki/tests/test_cli.py::TestCLI::test_output_to_file PASSED            [  0%]
[  290s] kajiki/tests/test_cli.py::TestCLI::test_package_loader_site_dirs PASSED  [  1%]
[  290s] kajiki/tests/test_cli.py::TestCLI::test_simple_file_load PASSED          [  2%]
[  290s] kajiki/tests/test_cli.py::TestCLI::test_simple_package_load PASSED       [  2%]
[  290s] kajiki/tests/test_cli.py::TestCLI::test_template_variables PASSED        [  3%]
[  290s] kajiki/tests/test_doctype.py::TestDTD::test_dtd PASSED                   [  4%]
[  290s] kajiki/tests/test_doctype.py::TestDTD::test_extract_dtd PASSED           [  4%]
[  290s] kajiki/tests/test_ir.py::TestBasic::test PASSED                          [  5%]
[  290s] kajiki/tests/test_ir.py::TestSwitch::test_basic PASSED                   [  6%]
[  290s] kajiki/tests/test_ir.py::TestFunction::test_basic PASSED                 [  6%]
[  290s] kajiki/tests/test_ir.py::TestCall::test_basic PASSED                     [  7%]
[  290s] kajiki/tests/test_ir.py::TestImport::test_import PASSED                  [  8%]
[  290s] kajiki/tests/test_ir.py::TestInclude::test_include PASSED                [  8%]
[  290s] kajiki/tests/test_ir.py::TestExtends::test_extends PASSED                [  9%]
[  290s] kajiki/tests/test_ir.py::TestDynamicExtends::test_extends PASSED         [ 10%]
[  290s] kajiki/tests/test_runtime.py::TestBasic::test_basic PASSED               [ 10%]
[  290s] kajiki/tests/test_runtime.py::TestSwitch::test_basic PASSED              [ 11%]
[  290s] kajiki/tests/test_runtime.py::TestFunction::test_basic PASSED            [ 12%]
[  290s] kajiki/tests/test_runtime.py::TestCall::test_basic PASSED                [ 12%]
[  290s] kajiki/tests/test_runtime.py::TestImport::test_import PASSED             [ 13%]
[  290s] kajiki/tests/test_runtime.py::TestInclude::test_include PASSED           [ 14%]
[  290s] kajiki/tests/test_runtime.py::TestExtends::test_extends PASSED           [ 14%]
[  290s] kajiki/tests/test_runtime.py::TestDynamicExtends::test_extends PASSED    [ 15%]
[  290s] kajiki/tests/test_text.py::TestBasic::test_auto_escape PASSED            [ 16%]
[  290s] kajiki/tests/test_text.py::TestBasic::test_auto_escape_disable PASSED    [ 17%]
[  290s] kajiki/tests/test_text.py::TestBasic::test_expr_None PASSED              [ 17%]
[  290s] kajiki/tests/test_text.py::TestBasic::test_expr_brace PASSED             [ 18%]
[  291s] kajiki/tests/test_text.py::TestBasic::test_expr_brace_complex PASSED     [ 19%]
[  291s] kajiki/tests/test_text.py::TestBasic::test_expr_multiline PASSED         [ 19%]
[  291s] kajiki/tests/test_text.py::TestBasic::test_expr_name PASSED              [ 20%]
[  291s] kajiki/tests/test_text.py::TestSwitch::test_ljust PASSED                 [ 21%]
[  291s] kajiki/tests/test_text.py::TestSwitch::test_rstrip PASSED                [ 21%]
[  291s] kajiki/tests/test_text.py::TestSwitch::test_switch PASSED                [ 22%]
[  291s] kajiki/tests/test_text.py::TestFunction::test_function PASSED            [ 23%]
[  291s] kajiki/tests/test_text.py::TestCall::test_call PASSED                    [ 23%]
[  291s] kajiki/tests/test_text.py::TestImport::test_import_auto PASSED           [ 24%]
[  291s] kajiki/tests/test_text.py::TestImport::test_import_simple PASSED         [ 25%]
[  291s] kajiki/tests/test_text.py::TestImport::test_include PASSED               [ 25%]
[  291s] kajiki/tests/test_text.py::TestExtends::test_basic PASSED                [ 26%]
[  291s] kajiki/tests/test_text.py::TestExtends::test_block PASSED                [ 27%]
[  291s] kajiki/tests/test_text.py::TestExtends::test_dynamic PASSED              [ 27%]
[  291s] kajiki/tests/test_text.py::TestClosure::test PASSED                      [ 28%]
[  291s] kajiki/tests/test_text.py::TestPython::test_basic PASSED                 [ 29%]
[  291s] kajiki/tests/test_text.py::TestPython::test_indent PASSED                [ 29%]
[  291s] kajiki/tests/test_text.py::TestPython::test_mod PASSED                   [ 30%]
[  291s] kajiki/tests/test_text.py::TestPython::test_short PASSED                 [ 31%]
[  291s] kajiki/tests/test_text.py::TestDebug::test_debug PASSED                  [ 31%]
[  291s] kajiki/tests/test_xml.py::TestParser::test_parser PASSED                 [ 32%]
[  292s] kajiki/tests/test_xml.py::TestExpand::test_expand PASSED                 [ 33%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_CDATA_disabled PASSED         [ 34%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_CDATA_escaping PASSED         [ 34%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_CDATA_escaping_mixed PASSED   [ 35%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_double_escape_dollar PASSED   [ 36%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_empty_attr PASSED             [ 36%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_escape_dollar PASSED          [ 37%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_escape_dollar_followed_by_dollar PASSED [ 38%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_expr_brace_complex PASSED     [ 38%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_expr_braced PASSED            [ 39%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_expr_multiline PASSED         [ 40%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_expr_multiline_and_IndentationError PASSED [ 40%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_expr_multiline_cdata PASSED   [ 41%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_expr_name PASSED              [ 42%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_html_entities PASSED          [ 42%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_jquery_call_is_not_expr PASSED [ 43%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_jquery_shortcut_is_not_expr PASSED [ 44%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_pre_whitespace PASSED         [ 44%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_preserve_dollar_not_variable_brace PASSED [ 45%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_script PASSED                 [ 46%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_script_commented_CDATA PASSED [ 46%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_script_escaping PASSED        [ 47%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_script_variable PASSED        [ 48%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_style_escaping PASSED         [ 48%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_textarea_whitespace PASSED    [ 49%]
[  292s] kajiki/tests/test_xml.py::TestSimple::test_xml_entities PASSED           [ 50%]
[  293s] kajiki/tests/test_xml.py::TestSwitch::test_case_elem PASSED              [ 51%]
[  293s] kajiki/tests/test_xml.py::TestSwitch::test_switch PASSED                 [ 51%]
[  293s] kajiki/tests/test_xml.py::TestSwitch::test_switch_div PASSED             [ 52%]
[  293s] kajiki/tests/test_xml.py::TestSwitch::test_switch_multi PASSED           [ 53%]
[  293s] kajiki/tests/test_xml.py::TestElse::test_pyif_pyelse PASSED              [ 53%]
[  293s] kajiki/tests/test_xml.py::TestElse::test_pyif_pyelse_continuation PASSED [ 54%]
[  293s] kajiki/tests/test_xml.py::TestElse::test_pyiftag_pyelse_continuation PASSED [ 55%]
[  293s] kajiki/tests/test_xml.py::TestWith::test_standalone PASSED               [ 55%]
[  293s] kajiki/tests/test_xml.py::TestWith::test_with PASSED                     [ 56%]
[  293s] kajiki/tests/test_xml.py::TestWith::test_with_multiple PASSED            [ 57%]
[  293s] kajiki/tests/test_xml.py::TestWith::test_with_multiple_and_whitespace PASSED [ 57%]
[  293s] kajiki/tests/test_xml.py::TestWith::test_with_multiple_with_embedded_semicolons PASSED [ 58%]
[  293s] kajiki/tests/test_xml.py::TestWith::test_with_ordered_multiple PASSED    [ 59%]
[  293s] kajiki/tests/test_xml.py::TestWith::test_with_trailing_semicolon PASSED  [ 59%]
[  293s] kajiki/tests/test_xml.py::TestFunction::test_empty_function PASSED       [ 60%]
[  293s] kajiki/tests/test_xml.py::TestFunction::test_function PASSED             [ 61%]
[  293s] kajiki/tests/test_xml.py::TestFunction::test_function_in_attr PASSED     [ 61%]
[  293s] kajiki/tests/test_xml.py::TestCall::test_call PASSED                     [ 62%]
[  293s] kajiki/tests/test_xml.py::TestImport::test_import PASSED                 [ 63%]
[  293s] kajiki/tests/test_xml.py::TestImport::test_import_auto PASSED            [ 63%]
[  293s] kajiki/tests/test_xml.py::TestImport::test_include PASSED                [ 64%]
[  293s] kajiki/tests/test_xml.py::TestImport::test_include_html5 PASSED          [ 65%]
[  293s] kajiki/tests/test_xml.py::TestExtends::test_autoblocks PASSED            [ 65%]
[  293s] kajiki/tests/test_xml.py::TestExtends::test_autoblocks_disabling PASSED  [ 66%]
[  294s] kajiki/tests/test_xml.py::TestExtends::test_basic PASSED                 [ 67%]
[  294s] kajiki/tests/test_xml.py::TestExtends::test_block PASSED                 [ 68%]
[  294s] kajiki/tests/test_xml.py::TestExtends::test_dynamic PASSED               [ 68%]
[  294s] kajiki/tests/test_xml.py::TestClosure::test PASSED                       [ 69%]
[  294s] kajiki/tests/test_xml.py::TestPython::test_basic PASSED                  [ 70%]
[  294s] kajiki/tests/test_xml.py::TestPython::test_indent PASSED                 [ 70%]
[  294s] kajiki/tests/test_xml.py::TestPython::test_mod PASSED                    [ 71%]
[  294s] kajiki/tests/test_xml.py::TestPython::test_short PASSED                  [ 72%]
[  294s] kajiki/tests/test_xml.py::TestComment::test_basic PASSED                 [ 72%]
[  294s] kajiki/tests/test_xml.py::TestAttributes::test_attrs PASSED              [ 73%]
[  294s] kajiki/tests/test_xml.py::TestAttributes::test_basic PASSED              [ 74%]
[  294s] kajiki/tests/test_xml.py::TestAttributes::test_content PASSED            [ 74%]
[  294s] kajiki/tests/test_xml.py::TestAttributes::test_escape_attr_values PASSED [ 75%]
[  294s] kajiki/tests/test_xml.py::TestAttributes::test_html_attrs PASSED         [ 76%]
[  294s] kajiki/tests/test_xml.py::TestAttributes::test_replace PASSED            [ 76%]
[  294s] kajiki/tests/test_xml.py::TestAttributes::test_strip PASSED              [ 77%]
[  294s] kajiki/tests/test_xml.py::TestAttributes::test_xml_namespaces PASSED     [ 78%]
[  294s] kajiki/tests/test_xml.py::TestDebug::test_debug PASSED                   [ 78%]
[  294s] kajiki/tests/test_xml.py::TestPackageLoader::test_pkg_loader PASSED      [ 79%]
[  294s] kajiki/tests/test_xml.py::TestBuiltinFunctions::test_defined PASSED      [ 80%]
[  295s] kajiki/tests/test_xml.py::TestBuiltinFunctions::test_literal PASSED      [ 80%]
[  295s] kajiki/tests/test_xml.py::TestBuiltinFunctions::test_value_of PASSED     [ 81%]
[  295s] kajiki/tests/test_xml.py::TestTranslation::test_extract_python_inside PASSED [ 82%]
[  295s] kajiki/tests/test_xml.py::TestTranslation::test_extract_python_inside_invalid PASSED [ 82%]
[  295s] kajiki/tests/test_xml.py::TestTranslation::test_extract_translate PASSED [ 83%]
[  295s] kajiki/tests/test_xml.py::TestTranslation::test_scripts_non_translatable PASSED [ 84%]
[  295s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda PASSED [ 85%]
[  295s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending PASSED [ 85%]
[  295s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending_file PASSED [ 86%]
[  295s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending_twice PASSED [ 87%]
[  295s] kajiki/tests/test_xml.py::TestTranslation::test_without_substituting_gettext_with_lambda_extending_file PASSED [ 87%]
[  295s] kajiki/tests/test_xml.py::TestDOMTransformations::test_empty_text_extraction PASSED [ 88%]
[  295s] kajiki/tests/test_xml.py::TestDOMTransformations::test_empty_text_extraction_lineno PASSED [ 89%]
[  295s] kajiki/tests/test_xml.py::TestErrorReporting::test_code_error PASSED     [ 89%]
[  295s] kajiki/tests/test_xml.py::TestErrorReporting::test_syntax_error PASSED   [ 90%]
[  295s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_brackets_asymmetric PASSED [ 91%]
[  295s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_complex PASSED  [ 91%]
[  295s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_leading_opening_brace PASSED [ 92%]
[  295s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_raise_plus_with_an_operand PASSED [ 93%]
[  295s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_raise_unclosed_string PASSED [ 93%]
[  295s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_simple PASSED   [ 94%]
[  295s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_some_brackets PASSED [ 95%]
[  295s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_unclosed_braced PASSED [ 95%]
[  296s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_with_padding_space PASSED [ 96%]
[  296s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_comment PASSED [ 97%]
[  296s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_multiple_nodes PASSED [ 97%]
[  296s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_ok PASSED      [ 98%]
[  296s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_only_comment PASSED [ 99%]
[  296s] kajiki/tests/test_xml.py::TestSyntaxErrorCallingWithTrailingParenthesis::test_raise PASSED [100%]
[  296s] 
[  296s] ============================= 147 passed in 14.31s =============================
[  296s] ++ '[' -f _current_flavor ']'
[  296s] ++ cat _current_flavor
[  296s] + last_flavor=python39
[  296s] + '[' -z python39 ']'
[  296s] + '[' python39 '!=' python311 ']'
[  296s] + '[' -d build ']'
[  296s] + mv build _build.python39
[  296s] + '[' -d _build.python311 ']'
[  296s] + mv _build.python311 build
[  296s] + echo python311
[  296s] + python_flavor=python311
[  296s] + PYTHONPATH=/home/abuild/rpmbuild/BUILDROOT/python-Kajiki-0.8.3-1.5.riscv64/usr/lib/python3.11/site-packages
[  296s] + PYTHONDONTWRITEBYTECODE=1
[  296s] + pytest-3.11 --ignore=_build.python38 --ignore=_build.python39 --ignore=_build.python311 --ignore=_build.python310 -v
[  301s] ============================= test session starts ==============================
[  301s] platform linux -- Python 3.11.1, pytest-7.2.0, pluggy-1.0.0 -- /usr/bin/python3.11
[  301s] cachedir: .pytest_cache
[  301s] rootdir: /home/abuild/rpmbuild/BUILD/kajiki-0.8.3
[  308s] collecting ... collected 147 items
[  308s] 
[  308s] kajiki/tests/test_cli.py::TestCLI::test_output_to_file PASSED            [  0%]
[  308s] kajiki/tests/test_cli.py::TestCLI::test_package_loader_site_dirs PASSED  [  1%]
[  308s] kajiki/tests/test_cli.py::TestCLI::test_simple_file_load PASSED          [  2%]
[  308s] kajiki/tests/test_cli.py::TestCLI::test_simple_package_load PASSED       [  2%]
[  309s] kajiki/tests/test_cli.py::TestCLI::test_template_variables PASSED        [  3%]
[  309s] kajiki/tests/test_doctype.py::TestDTD::test_dtd PASSED                   [  4%]
[  309s] kajiki/tests/test_doctype.py::TestDTD::test_extract_dtd PASSED           [  4%]
[  310s] kajiki/tests/test_ir.py::TestBasic::test FAILED                          [  5%]
[  310s] kajiki/tests/test_ir.py::TestSwitch::test_basic FAILED                   [  6%]
[  311s] kajiki/tests/test_ir.py::TestFunction::test_basic FAILED                 [  6%]
[  311s] kajiki/tests/test_ir.py::TestCall::test_basic FAILED                     [  7%]
[  312s] kajiki/tests/test_ir.py::TestImport::test_import FAILED                  [  8%]
[  312s] kajiki/tests/test_ir.py::TestInclude::test_include FAILED                [  8%]
[  313s] kajiki/tests/test_ir.py::TestExtends::test_extends FAILED                [  9%]
[  313s] kajiki/tests/test_ir.py::TestDynamicExtends::test_extends FAILED         [ 10%]
[  313s] kajiki/tests/test_runtime.py::TestBasic::test_basic PASSED               [ 10%]
[  313s] kajiki/tests/test_runtime.py::TestSwitch::test_basic PASSED              [ 11%]
[  313s] kajiki/tests/test_runtime.py::TestFunction::test_basic PASSED            [ 12%]
[  313s] kajiki/tests/test_runtime.py::TestCall::test_basic PASSED                [ 12%]
[  313s] kajiki/tests/test_runtime.py::TestImport::test_import PASSED             [ 13%]
[  313s] kajiki/tests/test_runtime.py::TestInclude::test_include PASSED           [ 14%]
[  313s] kajiki/tests/test_runtime.py::TestExtends::test_extends PASSED           [ 14%]
[  313s] kajiki/tests/test_runtime.py::TestDynamicExtends::test_extends PASSED    [ 15%]
[  314s] kajiki/tests/test_text.py::TestBasic::test_auto_escape FAILED            [ 16%]
[  315s] kajiki/tests/test_text.py::TestBasic::test_auto_escape_disable FAILED    [ 17%]
[  315s] kajiki/tests/test_text.py::TestBasic::test_expr_None FAILED              [ 17%]
[  316s] kajiki/tests/test_text.py::TestBasic::test_expr_brace FAILED             [ 18%]
[  317s] kajiki/tests/test_text.py::TestBasic::test_expr_brace_complex FAILED     [ 19%]
[  317s] kajiki/tests/test_text.py::TestBasic::test_expr_multiline FAILED         [ 19%]
[  318s] kajiki/tests/test_text.py::TestBasic::test_expr_name FAILED              [ 20%]
[  319s] kajiki/tests/test_text.py::TestSwitch::test_ljust FAILED                 [ 21%]
[  319s] kajiki/tests/test_text.py::TestSwitch::test_rstrip FAILED                [ 21%]
[  320s] kajiki/tests/test_text.py::TestSwitch::test_switch FAILED                [ 22%]
[  321s] kajiki/tests/test_text.py::TestFunction::test_function FAILED            [ 23%]
[  321s] kajiki/tests/test_text.py::TestCall::test_call FAILED                    [ 23%]
[  322s] kajiki/tests/test_text.py::TestImport::test_import_auto FAILED           [ 24%]
[  323s] kajiki/tests/test_text.py::TestImport::test_import_simple FAILED         [ 25%]
[  323s] kajiki/tests/test_text.py::TestImport::test_include FAILED               [ 25%]
[  324s] kajiki/tests/test_text.py::TestExtends::test_basic FAILED                [ 26%]
[  325s] kajiki/tests/test_text.py::TestExtends::test_block FAILED                [ 27%]
[  325s] kajiki/tests/test_text.py::TestExtends::test_dynamic FAILED              [ 27%]
[  326s] kajiki/tests/test_text.py::TestClosure::test FAILED                      [ 28%]
[  327s] kajiki/tests/test_text.py::TestPython::test_basic FAILED                 [ 29%]
[  327s] kajiki/tests/test_text.py::TestPython::test_indent FAILED                [ 29%]
[  328s] kajiki/tests/test_text.py::TestPython::test_mod FAILED                   [ 30%]
[  329s] kajiki/tests/test_text.py::TestPython::test_short FAILED                 [ 31%]
[  329s] kajiki/tests/test_text.py::TestDebug::test_debug FAILED                  [ 31%]
[  330s] kajiki/tests/test_xml.py::TestParser::test_parser PASSED                 [ 32%]
[  330s] kajiki/tests/test_xml.py::TestExpand::test_expand PASSED                 [ 33%]
[  331s] kajiki/tests/test_xml.py::TestSimple::test_CDATA_disabled FAILED         [ 34%]
[  332s] kajiki/tests/test_xml.py::TestSimple::test_CDATA_escaping FAILED         [ 34%]
[  333s] kajiki/tests/test_xml.py::TestSimple::test_CDATA_escaping_mixed FAILED   [ 35%]
[  334s] kajiki/tests/test_xml.py::TestSimple::test_double_escape_dollar FAILED   [ 36%]
[  336s] kajiki/tests/test_xml.py::TestSimple::test_empty_attr FAILED             [ 36%]
[  337s] kajiki/tests/test_xml.py::TestSimple::test_escape_dollar FAILED          [ 37%]
[  338s] kajiki/tests/test_xml.py::TestSimple::test_escape_dollar_followed_by_dollar FAILED [ 38%]
[  339s] kajiki/tests/test_xml.py::TestSimple::test_expr_brace_complex FAILED     [ 38%]
[  340s] kajiki/tests/test_xml.py::TestSimple::test_expr_braced FAILED            [ 39%]
[  341s] kajiki/tests/test_xml.py::TestSimple::test_expr_multiline FAILED         [ 40%]
[  341s] kajiki/tests/test_xml.py::TestSimple::test_expr_multiline_and_IndentationError PASSED [ 40%]
[  343s] kajiki/tests/test_xml.py::TestSimple::test_expr_multiline_cdata FAILED   [ 41%]
[  344s] kajiki/tests/test_xml.py::TestSimple::test_expr_name FAILED              [ 42%]
[  345s] kajiki/tests/test_xml.py::TestSimple::test_html_entities FAILED          [ 42%]
[  346s] kajiki/tests/test_xml.py::TestSimple::test_jquery_call_is_not_expr FAILED [ 43%]
[  347s] kajiki/tests/test_xml.py::TestSimple::test_jquery_shortcut_is_not_expr FAILED [ 44%]
[  348s] kajiki/tests/test_xml.py::TestSimple::test_pre_whitespace FAILED         [ 44%]
[  350s] kajiki/tests/test_xml.py::TestSimple::test_preserve_dollar_not_variable_brace FAILED [ 45%]
[  351s] kajiki/tests/test_xml.py::TestSimple::test_script FAILED                 [ 46%]
[  352s] kajiki/tests/test_xml.py::TestSimple::test_script_commented_CDATA FAILED [ 46%]
[  353s] kajiki/tests/test_xml.py::TestSimple::test_script_escaping FAILED        [ 47%]
[  354s] kajiki/tests/test_xml.py::TestSimple::test_script_variable FAILED        [ 48%]
[  355s] kajiki/tests/test_xml.py::TestSimple::test_style_escaping FAILED         [ 48%]
[  357s] kajiki/tests/test_xml.py::TestSimple::test_textarea_whitespace FAILED    [ 49%]
[  358s] kajiki/tests/test_xml.py::TestSimple::test_xml_entities FAILED           [ 50%]
[  359s] kajiki/tests/test_xml.py::TestSwitch::test_case_elem FAILED              [ 51%]
[  360s] kajiki/tests/test_xml.py::TestSwitch::test_switch FAILED                 [ 51%]
[  360s] kajiki/tests/test_xml.py::TestSwitch::test_switch_div PASSED             [ 52%]
[  361s] kajiki/tests/test_xml.py::TestSwitch::test_switch_multi FAILED           [ 53%]
[  361s] kajiki/tests/test_xml.py::TestElse::test_pyif_pyelse PASSED              [ 53%]
[  363s] kajiki/tests/test_xml.py::TestElse::test_pyif_pyelse_continuation FAILED [ 54%]
[  364s] kajiki/tests/test_xml.py::TestElse::test_pyiftag_pyelse_continuation FAILED [ 55%]
[  365s] kajiki/tests/test_xml.py::TestWith::test_standalone FAILED               [ 55%]
[  366s] kajiki/tests/test_xml.py::TestWith::test_with FAILED                     [ 56%]
[  367s] kajiki/tests/test_xml.py::TestWith::test_with_multiple FAILED            [ 57%]
[  368s] kajiki/tests/test_xml.py::TestWith::test_with_multiple_and_whitespace FAILED [ 57%]
[  370s] kajiki/tests/test_xml.py::TestWith::test_with_multiple_with_embedded_semicolons FAILED [ 58%]
[  371s] kajiki/tests/test_xml.py::TestWith::test_with_ordered_multiple FAILED    [ 59%]
[  372s] kajiki/tests/test_xml.py::TestWith::test_with_trailing_semicolon FAILED  [ 59%]
[  373s] kajiki/tests/test_xml.py::TestFunction::test_empty_function FAILED       [ 60%]
[  374s] kajiki/tests/test_xml.py::TestFunction::test_function FAILED             [ 61%]
[  375s] kajiki/tests/test_xml.py::TestFunction::test_function_in_attr FAILED     [ 61%]
[  377s] kajiki/tests/test_xml.py::TestCall::test_call FAILED                     [ 62%]
[  378s] kajiki/tests/test_xml.py::TestImport::test_import FAILED                 [ 63%]
[  379s] kajiki/tests/test_xml.py::TestImport::test_import_auto FAILED            [ 63%]
[  380s] kajiki/tests/test_xml.py::TestImport::test_include FAILED                [ 64%]
[  381s] kajiki/tests/test_xml.py::TestImport::test_include_html5 FAILED          [ 65%]
[  382s] kajiki/tests/test_xml.py::TestExtends::test_autoblocks FAILED            [ 65%]
[  383s] kajiki/tests/test_xml.py::TestExtends::test_autoblocks_disabling FAILED  [ 66%]
[  384s] kajiki/tests/test_xml.py::TestExtends::test_basic FAILED                 [ 67%]
[  385s] kajiki/tests/test_xml.py::TestExtends::test_block FAILED                 [ 68%]
[  386s] kajiki/tests/test_xml.py::TestExtends::test_dynamic FAILED               [ 68%]
[  387s] kajiki/tests/test_xml.py::TestClosure::test FAILED                       [ 69%]
[  389s] kajiki/tests/test_xml.py::TestPython::test_basic FAILED                  [ 70%]
[  390s] kajiki/tests/test_xml.py::TestPython::test_indent FAILED                 [ 70%]
[  391s] kajiki/tests/test_xml.py::TestPython::test_mod FAILED                    [ 71%]
[  392s] kajiki/tests/test_xml.py::TestPython::test_short FAILED                  [ 72%]
[  393s] kajiki/tests/test_xml.py::TestComment::test_basic FAILED                 [ 72%]
[  394s] kajiki/tests/test_xml.py::TestAttributes::test_attrs FAILED              [ 73%]
[  396s] kajiki/tests/test_xml.py::TestAttributes::test_basic FAILED              [ 74%]
[  397s] kajiki/tests/test_xml.py::TestAttributes::test_content FAILED            [ 74%]
[  398s] kajiki/tests/test_xml.py::TestAttributes::test_escape_attr_values FAILED [ 75%]
[  399s] kajiki/tests/test_xml.py::TestAttributes::test_html_attrs FAILED         [ 76%]
[  400s] kajiki/tests/test_xml.py::TestAttributes::test_replace FAILED            [ 76%]
[  402s] kajiki/tests/test_xml.py::TestAttributes::test_strip FAILED              [ 77%]
[  403s] kajiki/tests/test_xml.py::TestAttributes::test_xml_namespaces FAILED     [ 78%]
[  404s] kajiki/tests/test_xml.py::TestDebug::test_debug FAILED                   [ 78%]
[  405s] kajiki/tests/test_xml.py::TestPackageLoader::test_pkg_loader FAILED      [ 79%]
[  406s] kajiki/tests/test_xml.py::TestBuiltinFunctions::test_defined FAILED      [ 80%]
[  408s] kajiki/tests/test_xml.py::TestBuiltinFunctions::test_literal FAILED      [ 80%]
[  409s] kajiki/tests/test_xml.py::TestBuiltinFunctions::test_value_of FAILED     [ 81%]
[  410s] kajiki/tests/test_xml.py::TestTranslation::test_extract_python_inside FAILED [ 82%]
[  410s] kajiki/tests/test_xml.py::TestTranslation::test_extract_python_inside_invalid PASSED [ 82%]
[  411s] kajiki/tests/test_xml.py::TestTranslation::test_extract_translate FAILED [ 83%]
[  411s] kajiki/tests/test_xml.py::TestTranslation::test_scripts_non_translatable PASSED [ 84%]
[  413s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda FAILED [ 85%]
[  414s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending FAILED [ 85%]
[  415s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending_file FAILED [ 86%]
[  416s] kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending_twice FAILED [ 87%]
[  417s] kajiki/tests/test_xml.py::TestTranslation::test_without_substituting_gettext_with_lambda_extending_file FAILED [ 87%]
[  417s] kajiki/tests/test_xml.py::TestDOMTransformations::test_empty_text_extraction PASSED [ 88%]
[  417s] kajiki/tests/test_xml.py::TestDOMTransformations::test_empty_text_extraction_lineno PASSED [ 89%]
[  418s] kajiki/tests/test_xml.py::TestErrorReporting::test_code_error FAILED     [ 89%]
[  418s] kajiki/tests/test_xml.py::TestErrorReporting::test_syntax_error PASSED   [ 90%]
[  419s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_brackets_asymmetric FAILED [ 91%]
[  421s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_complex FAILED  [ 91%]
[  421s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_leading_opening_brace PASSED [ 92%]
[  421s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_raise_plus_with_an_operand PASSED [ 93%]
[  421s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_raise_unclosed_string PASSED [ 93%]
[  422s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_simple FAILED   [ 94%]
[  423s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_some_brackets FAILED [ 95%]
[  423s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_unclosed_braced PASSED [ 95%]
[  424s] kajiki/tests/test_xml.py::TestBracketsInExpression::test_with_padding_space FAILED [ 96%]
[  425s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_comment FAILED [ 97%]
[  425s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_multiple_nodes PASSED [ 97%]
[  426s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_ok FAILED      [ 98%]
[  426s] kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_only_comment PASSED [ 99%]
[  426s] kajiki/tests/test_xml.py::TestSyntaxErrorCallingWithTrailingParenthesis::test_raise PASSED [100%]
[  426s] 
[  426s] =================================== FAILURES ===================================
[  426s] ________________________________ TestBasic.test ________________________________
[  426s] 
[  426s] self = <kajiki.tests.test_ir.TestBasic testMethod=test>
[  426s] 
[  426s]     def test(self):
[  426s] >       tpl = kajiki.template.from_ir(self.tpl)
[  426s] 
[  426s] kajiki/tests/test_ir.py:22: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x40046972d0, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x00\x08\x00L\x00'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ____________________________ TestSwitch.test_basic _____________________________
[  426s] 
[  426s] self = <kajiki.tests.test_ir.TestSwitch testMethod=test_basic>
[  426s] 
[  426s]     def test_basic(self):
[  426s] >       tpl = kajiki.template.from_ir(self.tpl)
[  426s] 
[  426s] kajiki/tests/test_ir.py:45: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x4000794db0, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x00"\x00B\x00\x08\x00D\x00\x02\x00>\x00\n\x00\x08\x00'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ----------------------------- Captured stdout call -----------------------------
[  426s] ERROR LOOKING UP LINE #260
[  426s] ___________________________ TestFunction.test_basic ____________________________
[  426s] 
[  426s] self = <kajiki.tests.test_ir.TestFunction testMethod=test_basic>
[  426s] 
[  426s]     def test_basic(self):
[  426s] >       tpl = kajiki.template.from_ir(self.tpl)
[  426s] 
[  426s] kajiki/tests/test_ir.py:70: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x40043cbab0, file "<string>", line 8>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x00"\x00B\x00\x08\x00\\\x00'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ----------------------------- Captured stdout call -----------------------------
[  426s] ERROR LOOKING UP LINE #266
[  426s] _____________________________ TestCall.test_basic ______________________________
[  426s] 
[  426s] self = <kajiki.tests.test_ir.TestCall testMethod=test_basic>
[  426s] 
[  426s]     def test_basic(self):
[  426s] >       tpl = kajiki.template.from_ir(self.tpl)
[  426s] 
[  426s] kajiki/tests/test_ir.py:96: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x4004697e10, file "<string>", line 10>
[  426s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x00 \x00'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ----------------------------- Captured stdout call -----------------------------
[  426s] ERROR LOOKING UP LINE #268
[  426s] ERROR LOOKING UP LINE #269
[  426s] ERROR LOOKING UP LINE #272
[  426s] ____________________________ TestImport.test_import ____________________________
[  426s] 
[  426s] self = <kajiki.tests.test_ir.TestImport testMethod=test_import>
[  426s] 
[  426s]     def setUp(self):
[  426s]         lib = ir.TemplateNode(
[  426s]             defs=[ir.DefNode(
[  426s]                   'evenness(n)',
[  426s]                   ir.IfNode(
[  426s]                       'n % 2 == 0',
[  426s]                       ir.TextNode('even')),
[  426s]                   ir.ElseNode(
[  426s]                   ir.TextNode('odd'))),
[  426s]                   ir.DefNode(
[  426s]                   'half_evenness(n)',
[  426s]                   ir.TextNode(' half of '),
[  426s]                   ir.ExprNode('n'),
[  426s]                   ir.TextNode(' is '),
[  426s]                   ir.ExprNode('evenness(n/2)'))])
[  426s]         tpl = ir.TemplateNode(
[  426s]             defs=[ir.DefNode(
[  426s]                   '__main__()',
[  426s]                   ir.ImportNode(
[  426s]                       'lib.txt',
[  426s]                       'simple_function'),
[  426s]                   ir.ForNode(
[  426s]                   'i in range(4)',
[  426s]                   ir.ExprNode('i'),
[  426s]                   ir.TextNode(' is '),
[  426s]                   ir.ExprNode('simple_function.evenness(i)'),
[  426s]                   ir.ExprNode('simple_function.half_evenness(i)'),
[  426s]                   ir.TextNode('\n')))])
[  426s]         loader = kajiki.loader.MockLoader({
[  426s] >           'lib.txt': kajiki.template.from_ir(lib),
[  426s]             'tpl.txt': kajiki.template.from_ir(tpl)})
[  426s] 
[  426s] kajiki/tests/test_ir.py:133: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object evenness at 0x400473e3d0, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x00\x12\x00\x0c\x00'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ___________________________ TestInclude.test_include ___________________________
[  426s] 
[  426s] self = <kajiki.tests.test_ir.TestInclude testMethod=test_include>
[  426s] 
[  426s]     def setUp(self):
[  426s]         hdr = ir.TemplateNode(
[  426s]             defs=[
[  426s]                 ir.DefNode(
[  426s]                     '__main__()',
[  426s]                     ir.TextNode('# header\n'))])
[  426s]         tpl = ir.TemplateNode(
[  426s]             defs=[
[  426s]                 ir.DefNode(
[  426s]                     '__main__()',
[  426s]                     ir.TextNode('a\n'),
[  426s]                     ir.IncludeNode('hdr.txt'),
[  426s]                     ir.TextNode('b\n'))])
[  426s]         loader = kajiki.loader.MockLoader({
[  426s] >           'hdr.txt': kajiki.template.from_ir(hdr),
[  426s]             'tpl.txt': kajiki.template.from_ir(tpl)})
[  426s] 
[  426s] kajiki/tests/test_ir.py:160: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x4004f2eb40, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x00'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ___________________________ TestExtends.test_extends ___________________________
[  426s] 
[  426s] self = <kajiki.tests.test_ir.TestExtends testMethod=test_extends>
[  426s] 
[  426s]     def setUp(self):
[  426s]         parent_tpl = ir.TemplateNode(
[  426s]             defs=[
[  426s]                 ir.DefNode(
[  426s]                     '__main__()',
[  426s]                     ir.ExprNode('header()'),
[  426s]                     ir.ExprNode('body()'),
[  426s]                     ir.ExprNode('footer()')),
[  426s]                 ir.DefNode(
[  426s]                     'header()',
[  426s]                     ir.TextNode('# Header name='),
[  426s]                     ir.ExprNode('name'),
[  426s]                     ir.TextNode('\n')),
[  426s]                 ir.DefNode(
[  426s]                     'body()',
[  426s]                     ir.TextNode('## Parent Body\n'),
[  426s]                     ir.TextNode('local.id() = '),
[  426s]                     ir.ExprNode('local.id()'),
[  426s]                     ir.TextNode('\n'),
[  426s]                     ir.TextNode('self.id() = '),
[  426s]                     ir.ExprNode('self.id()'),
[  426s]                     ir.TextNode('\n'),
[  426s]                     ir.TextNode('child.id() = '),
[  426s]                     ir.ExprNode('child.id()'),
[  426s]                     ir.TextNode('\n')),
[  426s]                 ir.DefNode(
[  426s]                     'footer()',
[  426s]                     ir.TextNode('# Footer\n')),
[  426s]                 ir.DefNode(
[  426s]                     'id()',
[  426s]                     ir.TextNode('parent'))])
[  426s]         mid_tpl = ir.TemplateNode(
[  426s]             defs=[
[  426s]                 ir.DefNode(
[  426s]                     '__main__()',
[  426s]                     ir.ExtendNode('parent.txt')),
[  426s]                 ir.DefNode(
[  426s]                     'id()',
[  426s]                     ir.TextNode('mid'))])
[  426s]         child_tpl = ir.TemplateNode(
[  426s]             defs=[
[  426s]                 ir.DefNode(
[  426s]                     '__main__()',
[  426s]                     ir.ExtendNode('mid.txt')),
[  426s]                 ir.DefNode(
[  426s]                     'body()',
[  426s]                     ir.TextNode('## Child Body\n'),
[  426s]                     ir.ExprNode('parent.body()')),
[  426s]                 ir.DefNode(
[  426s]                     'id()',
[  426s]                     ir.TextNode('child'))])
[  426s]         loader = kajiki.loader.MockLoader({
[  426s] >           'parent.txt': kajiki.template.from_ir(parent_tpl),
[  426s]             'mid.txt': kajiki.template.from_ir(mid_tpl),
[  426s]             'child.txt': kajiki.template.from_ir(child_tpl)})
[  426s] 
[  426s] kajiki/tests/test_ir.py:222: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x40043e3c00, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x00Z\x00Z\x00'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] _______________________ TestDynamicExtends.test_extends ________________________
[  426s] 
[  426s] self = <kajiki.tests.test_ir.TestDynamicExtends testMethod=test_extends>
[  426s] 
[  426s]     def setUp(self):
[  426s]         p0 = ir.TemplateNode(
[  426s]             defs=[
[  426s]                 ir.DefNode(
[  426s]                     '__main__()',
[  426s]                     ir.TextNode('Parent 0'))])
[  426s]         p1 = ir.TemplateNode(
[  426s]             defs=[
[  426s]                 ir.DefNode(
[  426s]                     '__main__()',
[  426s]                     ir.TextNode('Parent 1'))])
[  426s]         child = ir.TemplateNode(
[  426s]             defs=[
[  426s]                 ir.DefNode(
[  426s]                     '__main__()',
[  426s]                     ir.IfNode(
[  426s]                         'p==0',
[  426s]                         ir.ExtendNode('parent0.txt')),
[  426s]                     ir.ElseNode(
[  426s]                         ir.ExtendNode('parent1.txt')))])
[  426s]         loader = kajiki.loader.MockLoader({
[  426s] >           'parent0.txt': kajiki.template.from_ir(p0),
[  426s]             'parent1.txt': kajiki.template.from_ir(p1),
[  426s]             'child.txt': kajiki.template.from_ir(child)})
[  426s] 
[  426s] kajiki/tests/test_ir.py:261: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x4004c21070, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x00'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] __________________________ TestBasic.test_auto_escape __________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestBasic testMethod=test_auto_escape>
[  426s] 
[  426s]     def test_auto_escape(self):
[  426s] >       tpl = TextTemplate(source="${'<h1>'}", autoescape=True)
[  426s] 
[  426s] kajiki/tests/test_text.py:16: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x4004c50030, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ______________________ TestBasic.test_auto_escape_disable ______________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestBasic testMethod=test_auto_escape_disable>
[  426s] 
[  426s]     def test_auto_escape_disable(self):
[  426s] >       tpl = TextTemplate(source="${literal('<h1>')}")
[  426s] 
[  426s] kajiki/tests/test_text.py:21: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x400473fc30, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ___________________________ TestBasic.test_expr_None ___________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestBasic testMethod=test_expr_None>
[  426s] 
[  426s]     def test_expr_None(self):
[  426s] >       tpl = TextTemplate(source='Hello, ${name}\n')
[  426s] 
[  426s] kajiki/tests/test_text.py:34: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x400473e1f0, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x01\x08\x00\x12\x01'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] __________________________ TestBasic.test_expr_brace ___________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestBasic testMethod=test_expr_brace>
[  426s] 
[  426s]     def test_expr_brace(self):
[  426s] >       tpl = TextTemplate(source='Hello, ${name}\n')
[  426s] 
[  426s] kajiki/tests/test_text.py:29: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x400473f1e0, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x01\x08\x00\x12\x01'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ______________________ TestBasic.test_expr_brace_complex _______________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestBasic testMethod=test_expr_brace_complex>
[  426s] 
[  426s]     def test_expr_brace_complex(self):
[  426s] >       tpl = TextTemplate(source="Hello, ${{'name':name}['name']}\n")
[  426s] 
[  426s] kajiki/tests/test_text.py:39: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x400471b930, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x01\x08\x00"\x01'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ________________________ TestBasic.test_expr_multiline _________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestBasic testMethod=test_expr_multiline>
[  426s] 
[  426s]     def test_expr_multiline(self):
[  426s] >       tpl = TextTemplate(source="""Hello, ${{'name': 'Rick',
[  426s]                                                'age': 26}['name']}""")
[  426s] 
[  426s] kajiki/tests/test_text.py:56: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x4003e2cd50, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x01\x08\x01\x02\x00'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ----------------------------- Captured stdout call -----------------------------
[  426s] ERROR LOOKING UP LINE #261
[  426s] ERROR LOOKING UP LINE #262
[  426s] ERROR LOOKING UP LINE #517
[  426s] ___________________________ TestBasic.test_expr_name ___________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestBasic testMethod=test_expr_name>
[  426s] 
[  426s]     def test_expr_name(self):
[  426s] >       tpl = TextTemplate(source='Hello, $name\n')
[  426s] 
[  426s] kajiki/tests/test_text.py:44: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x4004c7c8a0, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x01\x08\x00\x12\x01'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ____________________________ TestSwitch.test_ljust _____________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestSwitch testMethod=test_ljust>
[  426s] 
[  426s]         def test_ljust(self):
[  426s] >           tpl = TextTemplate('''     %for i in range(2)
[  426s]     $i is {%switch i % 2 %}{%case 0%}even\n{%else%}odd\n{%end%}\\
[  426s]     %end''')
[  426s] 
[  426s] kajiki/tests/test_text.py:71: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x40043dba50, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x00"\x02\x08\x00\x08\x00D\x00\x02\x00>\x01\n\x01\x08\x01\x08\x00<\x01'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ----------------------------- Captured stdout call -----------------------------
[  426s] ERROR LOOKING UP LINE #260
[  426s] ____________________________ TestSwitch.test_rstrip ____________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestSwitch testMethod=test_rstrip>
[  426s] 
[  426s]         def test_rstrip(self):
[  426s] >           tpl = TextTemplate('''     %for i in range(2)
[  426s]     $i is {%switch i % 2 %}{%case 0-%}    even\n{%else%}odd\n{%end%}\\
[  426s]     %end''')
[  426s] 
[  426s] kajiki/tests/test_text.py:83: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x40043dbe10, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x00"\x02\x08\x00\x08\x00D\x00\x02\x00>\x01\n\x01\x08\x01\x08\x00<\x01'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ----------------------------- Captured stdout call -----------------------------
[  426s] ERROR LOOKING UP LINE #260
[  426s] ____________________________ TestSwitch.test_switch ____________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestSwitch testMethod=test_switch>
[  426s] 
[  426s]         def test_switch(self):
[  426s] >           tpl = TextTemplate('''%for i in range(2)
[  426s]     $i is {%switch i % 2 %}{%case 0%}even\n{%else%}odd\n{%end%}\\
[  426s]     %end''')
[  426s] 
[  426s] kajiki/tests/test_text.py:64: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x40043dbc30, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x00"\x02\x08\x00\x08\x00D\x00\x02\x00>\x01\n\x01\x08\x01\x08\x00<\x01'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ----------------------------- Captured stdout call -----------------------------
[  426s] ERROR LOOKING UP LINE #260
[  426s] __________________________ TestFunction.test_function __________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestFunction testMethod=test_function>
[  426s] 
[  426s]         def test_function(self):
[  426s] >           tpl = TextTemplate('''%def evenness(n)
[  426s]     {%if n % 2 == 0 %}even{%else%}odd{%end%}\\
[  426s]     %end
[  426s]     %for i in range(2)
[  426s]     $i is ${evenness(i)}
[  426s]     %end
[  426s]     ''')
[  426s] 
[  426s] kajiki/tests/test_text.py:92: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x4004bdd350, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0
[  426s] lnotab = b'\x00\x00\x06\x00"\x05\x08\x00\x08\x00"\x01'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ----------------------------- Captured stdout call -----------------------------
[  426s] ERROR LOOKING UP LINE #260
[  426s] ______________________________ TestCall.test_call ______________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestCall testMethod=test_call>
[  426s] 
[  426s]         def test_call(self):
[  426s] >           tpl = TextTemplate('''%def quote(caller, speaker)
[  426s]         %for i in range(2)
[  426s]     Quoth $speaker, "${caller(i)}."
[  426s]         %end
[  426s]     %end
[  426s]     %call(n) quote(%caller ,'the raven')
[  426s]     Nevermore $n\\
[  426s]     %end''')
[  426s] 
[  426s] kajiki/tests/test_text.py:105: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x40046e6c20, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x00 \x00'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  426s]             code.co_stacksize,
[  426s]             code.co_flags,
[  426s]             code.co_code,
[  426s]             code.co_consts,
[  426s]             code.co_names,
[  426s]             code.co_varnames,
[  426s]             filename,
[  426s]             code.co_name,
[  426s]             firstlineno,
[  426s]             lnotab,
[  426s]             code.co_freevars,
[  426s]             code.co_cellvars,
[  426s]         ])
[  426s] >       return types.CodeType(*code_args)
[  426s] E       TypeError: code() argument 13 must be str, not int
[  426s] 
[  426s] kajiki/template.py:440: TypeError
[  426s] ----------------------------- Captured stdout call -----------------------------
[  426s] ERROR LOOKING UP LINE #260
[  426s] ERROR LOOKING UP LINE #261
[  426s] ERROR LOOKING UP LINE #265
[  426s] ERROR LOOKING UP LINE #266
[  426s] _________________________ TestImport.test_import_auto __________________________
[  426s] 
[  426s] self = <kajiki.tests.test_text.TestImport testMethod=test_import_auto>
[  426s] 
[  426s]         def test_import_auto(self):
[  426s] >           lib = TextTemplate('''%def evenness(n)
[  426s]     %if n % 2 == 0
[  426s]     even\\
[  426s]     %else
[  426s]     odd\\
[  426s]     %end
[  426s]     %end
[  426s]     %def half_evenness(n)
[  426s]      half of $n is ${evenness(n/2)}\\
[  426s]     %end''')
[  426s] 
[  426s] kajiki/tests/test_text.py:146: 
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] kajiki/text.py:69: in TextTemplate
[  426s]     return kajiki.template.from_ir(tree)
[  426s] kajiki/template.py:331: in from_ir
[  426s]     tpl.annotate_lnotab(py_linenos)
[  426s] kajiki/template.py:265: in annotate_lnotab
[  426s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  426s] kajiki/template.py:397: in annotate_lnotab
[  426s]     new_code = patch_code_file_lines(
[  426s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  426s] 
[  426s] code = <code object __main__ at 0x4003d1e590, file "<string>", line 2>
[  426s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x0b'
[  426s] 
[  426s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  426s]         code_args = [code.co_argcount]
[  426s]         if version_info >= (3, 8):
[  426s]             code_args.append(code.co_posonlyargcount)
[  426s]         code_args.extend([
[  426s]             code.co_kwonlyargcount,
[  426s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ________________________ TestImport.test_import_simple _________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestImport testMethod=test_import_simple>
[  427s] 
[  427s]         def test_import_simple(self):
[  427s] >           lib = TextTemplate('''%def evenness(n)
[  427s]     %if n % 2 == 0
[  427s]     even\\
[  427s]     %else
[  427s]     odd\\
[  427s]     %end
[  427s]     %end
[  427s]     %def half_evenness(n)
[  427s]      half of $n is ${evenness(n/2)}\\
[  427s]     %end''')
[  427s] 
[  427s] kajiki/tests/test_text.py:121: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4003e55a30, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x0b'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ___________________________ TestImport.test_include ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestImport testMethod=test_include>
[  427s] 
[  427s]         def test_include(self):
[  427s]             loader = MockLoader({
[  427s] >               'hdr.txt': TextTemplate('# header\n'),
[  427s]                 'tpl.txt': TextTemplate('''a
[  427s]     %include "hdr.txt"
[  427s]     b
[  427s]     ''')})
[  427s] 
[  427s] kajiki/tests/test_text.py:172: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4003f90fa0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x02'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestExtends.test_basic ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestExtends testMethod=test_basic>
[  427s] 
[  427s]         def test_basic(self):
[  427s] >           parent = TextTemplate('''
[  427s]     %def header()
[  427s]     # Header name=$name
[  427s]     %end
[  427s]     %def footer()
[  427s]     # Footer
[  427s]     %end
[  427s]     %def body()
[  427s]     ## Parent Body
[  427s]     id() = ${id()}
[  427s]     local.id() = ${local.id()}
[  427s]     self.id() = ${self.id()}
[  427s]     child.id() = ${child.id()}
[  427s]     %end
[  427s]     %def id()
[  427s]     parent\\
[  427s]     %end
[  427s]     ${header()}${body()}${footer()}''')
[  427s] 
[  427s] kajiki/tests/test_text.py:184: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004c8a040, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x11 \x00 \x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestExtends.test_block ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestExtends testMethod=test_block>
[  427s] 
[  427s]         def test_block(self):
[  427s]             loader = MockLoader({
[  427s] >               'parent.txt': TextTemplate('''%def greet(name)
[  427s]     Hello, $name!\\
[  427s]     %end
[  427s]     %def sign(name)
[  427s]     Sincerely,
[  427s]     $name\\
[  427s]     %end
[  427s]     ${greet(to)}
[  427s]     
[  427s]     %block body
[  427s]     It was good seeing you last Friday.  Thanks for the gift!
[  427s]     %end
[  427s]     
[  427s]     ${sign(from_)}
[  427s]     '''),
[  427s]                 'child.txt': TextTemplate('''%extends "parent.txt"
[  427s]     %def greet(name)
[  427s]     Dear $name:\\
[  427s]     %end
[  427s]     %block body
[  427s]     ${parent_block()}\\
[  427s]     
[  427s]     And don't forget you owe me money!
[  427s]     %end
[  427s]     ''')})
[  427s] 
[  427s] kajiki/tests/test_text.py:250: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004c2a5b0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x08,\x01\x08\x00Z\x04\x08\x00,\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ___________________________ TestExtends.test_dynamic ___________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestExtends testMethod=test_dynamic>
[  427s] 
[  427s]         def test_dynamic(self):
[  427s]             loader = MockLoader({
[  427s] >               'parent0.txt': TextTemplate('Parent 0'),
[  427s]                 'parent1.txt': TextTemplate('Parent 1'),
[  427s]                 'child.txt': TextTemplate('''%if p == 0
[  427s]     %extends "parent0.txt"
[  427s]     %else
[  427s]     %extends "parent1.txt"
[  427s]     %end
[  427s]     ''')
[  427s]             })
[  427s] 
[  427s] kajiki/tests/test_text.py:233: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f109f0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _______________________________ TestClosure.test _______________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestClosure testMethod=test>
[  427s] 
[  427s]         def test(self):
[  427s] >           tpl = TextTemplate('''%def add(x)
[  427s]     %def inner(y)
[  427s]     ${x+y}\\
[  427s]     %end
[  427s]     ${inner(x*2)}\\
[  427s]     %end
[  427s]     ${add(5)}
[  427s]     ''')
[  427s] 
[  427s] kajiki/tests/test_text.py:289: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004c7d980, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x07"\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestPython.test_basic _____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestPython testMethod=test_basic>
[  427s] 
[  427s]         def test_basic(self):
[  427s] >           tpl = TextTemplate('''%py
[  427s]     import os
[  427s]     %end
[  427s]     ${os.path.join('a','b','c')}''')
[  427s] 
[  427s] kajiki/tests/test_text.py:303: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f58580, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x00\x08\x04'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestPython.test_indent ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestPython testMethod=test_indent>
[  427s] 
[  427s]         def test_indent(self):
[  427s] >           tpl = TextTemplate('''%py
[  427s]         import os
[  427s]         import re
[  427s]     %end
[  427s]     ${os.path.join('a','b','c')}''')
[  427s] 
[  427s] kajiki/tests/test_text.py:311: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400472c250, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x00\x08\x00\x08\x05'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____________________________ TestPython.test_mod ______________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestPython testMethod=test_mod>
[  427s] 
[  427s]         def test_mod(self):
[  427s] >           tpl = TextTemplate('''%py% import os
[  427s]     %def test()
[  427s]     ${os.path.join('a','b','c')}\\
[  427s]     %end
[  427s]     ${test()}''')
[  427s] 
[  427s] kajiki/tests/test_text.py:326: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400473e010, file "<string>", line 3>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x05'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestPython.test_short _____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestPython testMethod=test_short>
[  427s] 
[  427s]         def test_short(self):
[  427s] >           tpl = TextTemplate('''%py import os
[  427s]     ${os.path.join('a','b','c')}''')
[  427s] 
[  427s] kajiki/tests/test_text.py:320: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400472d130, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x00\x08\x02'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____________________________ TestDebug.test_debug _____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_text.TestDebug testMethod=test_debug>
[  427s] 
[  427s]     def test_debug(self):
[  427s]         loader = FileLoader(path=os.path.join(os.path.dirname(__file__),
[  427s]                             'data'))
[  427s] >       tpl = loader.import_('debug.txt')
[  427s] 
[  427s] kajiki/tests/test_text.py:339: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/loader.py:78: in import_
[  427s]     return super(FileLoader, self).import_(name, *args, **kwargs)
[  427s] kajiki/loader.py:21: in import_
[  427s]     mod = self._load(name, *args, **kwargs)
[  427s] kajiki/loader.py:103: in _load
[  427s]     return self.extension_map[ext](
[  427s] kajiki/loader.py:59: in <lambda>
[  427s]     txt=lambda *a, **kw: TextTemplate(
[  427s] kajiki/text.py:69: in TextTemplate
[  427s]     return kajiki.template.from_ir(tree)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400473db60, file "<string>", line 2>
[  427s] filename = '/home/abuild/rpmbuild/BUILD/kajiki-0.8.3/kajiki/tests/data/debug.txt'
[  427s] firstlineno = 0, lnotab = b'\x00\x00\x06\n \x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ________________________ TestSimple.test_CDATA_disabled ________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_CDATA_disabled>
[  427s] 
[  427s]     def test_CDATA_disabled(self):
[  427s]         src = '<script> $name </script>'
[  427s] >       perform(src, '<script> Rick </script>', mode='xml', cdata_scripts=False)
[  427s] 
[  427s] kajiki/tests/test_xml.py:136: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004bdd8f0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00L\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ________________________ TestSimple.test_CDATA_escaping ________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_CDATA_escaping>
[  427s] 
[  427s]     def test_CDATA_escaping(self):
[  427s]         src = '''<myxml><data><![CDATA[&gt;&#240; $name]]></data></myxml>'''
[  427s] >       perform(src, '<myxml><data><![CDATA[&gt;&#240; Rick]]></data></myxml>', mode='xml')
[  427s] 
[  427s] kajiki/tests/test_xml.py:141: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f709d0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00L\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____________________ TestSimple.test_CDATA_escaping_mixed _____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_CDATA_escaping_mixed>
[  427s] 
[  427s]     def test_CDATA_escaping_mixed(self):
[  427s]         src = '''<myxml><data><![CDATA[&gt;&#240; $name]]> &gt;</data></myxml>'''
[  427s] >       perform(src, '<myxml><data><![CDATA[&gt;&#240; Rick]]> &gt;</data></myxml>', mode='xml')
[  427s] 
[  427s] kajiki/tests/test_xml.py:146: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40047163a0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00L\x00\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____________________ TestSimple.test_double_escape_dollar _____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_double_escape_dollar>
[  427s] 
[  427s]     def test_double_escape_dollar(self):
[  427s] >       perform('<div>$$$$</div>', '<div>$$</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:164: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f70b30, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] __________________________ TestSimple.test_empty_attr __________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_empty_attr>
[  427s] 
[  427s]     def test_empty_attr(self):
[  427s] >       perform(source='<img src="/foo/bar.baz.gif" alt="" />', mode='html',
[  427s]             expected_output='<img alt="" src="/foo/bar.baz.gif">')
[  427s] 
[  427s] kajiki/tests/test_xml.py:88: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4000736c40, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x06\x00N\x00H\x00\n\x00\x06\x00N\x00H\x00\n\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ________________________ TestSimple.test_escape_dollar _________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_escape_dollar>
[  427s] 
[  427s]     def test_escape_dollar(self):
[  427s] >       perform('<div>$$</div>', '<div>$</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:158: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046973f0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _______________ TestSimple.test_escape_dollar_followed_by_dollar _______________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_escape_dollar_followed_by_dollar>
[  427s] 
[  427s]     def test_escape_dollar_followed_by_dollar(self):
[  427s] >       perform('<div>$$$</div>', '<div>$$</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:161: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f709d0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________________ TestSimple.test_expr_brace_complex ______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_expr_brace_complex>
[  427s] 
[  427s]     def test_expr_brace_complex(self):
[  427s] >       perform("<div>Hello, ${{'name':name}['name']}</div>",
[  427s]                 '<div>Hello, Rick</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:177: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f89450, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00\\\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _________________________ TestSimple.test_expr_braced __________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_expr_braced>
[  427s] 
[  427s]     def test_expr_braced(self):
[  427s] >       perform('<div>Hello, ${name}</div>', '<div>Hello, Rick</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:174: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f709d0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00L\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ________________________ TestSimple.test_expr_multiline ________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_expr_multiline>
[  427s] 
[  427s]     def test_expr_multiline(self):
[  427s] >       perform("""<div>Hello, ${{'name': 'Rick',
[  427s]                                  'age': 26}['name']}</div>""",
[  427s]                 '<div>Hello, Rick</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:181: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f892e0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00.\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ----------------------------- Captured stdout call -----------------------------
[  427s] ERROR LOOKING UP LINE #262
[  427s] ERROR LOOKING UP LINE #263
[  427s] ERROR LOOKING UP LINE #518
[  427s] ERROR LOOKING UP LINE #520
[  427s] _____________________ TestSimple.test_expr_multiline_cdata _____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_expr_multiline_cdata>
[  427s] 
[  427s]     def test_expr_multiline_cdata(self):
[  427s] >       perform("""<script><![CDATA[Hello, ${{'name': 'Rick',
[  427s]                                  'age': 26}['name']}]]></script>""",
[  427s]                 '<script>/*<![CDATA[*/Hello, Rick/*]]>*/</script>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:195: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046e6c20, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00.\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ----------------------------- Captured stdout call -----------------------------
[  427s] ERROR LOOKING UP LINE #261
[  427s] ERROR LOOKING UP LINE #262
[  427s] ERROR LOOKING UP LINE #517
[  427s] ERROR LOOKING UP LINE #519
[  427s] __________________________ TestSimple.test_expr_name ___________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_expr_name>
[  427s] 
[  427s]     def test_expr_name(self):
[  427s] >       perform('<div>Hello, $name</div>', '<div>Hello, Rick</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:171: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f70b30, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00L\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ________________________ TestSimple.test_html_entities _________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_html_entities>
[  427s] 
[  427s]     def test_html_entities(self):
[  427s]         source = "<div>Spam&nbsp;Spam &lt; Spam &gt; Spam &hellip;</div>"
[  427s]         output = '<div>Spam Spam &lt; Spam &gt; Spam \u2026</div>'
[  427s]         assert chr(32) in output  # normal space
[  427s]         assert chr(160) in output  # non breaking space
[  427s] >       perform(source, output)
[  427s] 
[  427s] kajiki/tests/test_xml.py:231: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004bdee50, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ___________________ TestSimple.test_jquery_call_is_not_expr ____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_jquery_call_is_not_expr>
[  427s] 
[  427s]     def test_jquery_call_is_not_expr(self):
[  427s]         '''Ensure we handle '$(' as a text literal, since it cannot be a
[  427s]         valid variable sequence.  This simplifies, for example,
[  427s]         templates containing inline scripts with jQuery calls
[  427s]         which otherwise have to be written '$$(...'
[  427s]         '''
[  427s]         js = "$(function () { alert('.ready()'); });"
[  427s]         src = "<html><pre>" + js + "</pre><script>" + js + \
[  427s]               "</script></html>"
[  427s]         out = "<html><pre>" + js + "</pre><script>/*<![CDATA[*/" + js + \
[  427s]               "/*]]>*/</script></html>"
[  427s] >       perform(src, out)
[  427s] 
[  427s] kajiki/tests/test_xml.py:210: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004696f70, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _________________ TestSimple.test_jquery_shortcut_is_not_expr __________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_jquery_shortcut_is_not_expr>
[  427s] 
[  427s]     def test_jquery_shortcut_is_not_expr(self):
[  427s]         '''Ensure we handle '$.' as a text literal in script blocks'''
[  427s]     
[  427s]         js = "$.extend({}, {foo: 'bar'})"
[  427s]         src = "<html><pre>" + js + "</pre><script>" + js + \
[  427s]               "</script></html>"
[  427s]         out = "<html><pre>" + js + "</pre><script>/*<![CDATA[*/" + js + \
[  427s]               "/*]]>*/</script></html>"
[  427s] >       perform(src, out)
[  427s] 
[  427s] kajiki/tests/test_xml.py:220: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004697510, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ________________________ TestSimple.test_pre_whitespace ________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_pre_whitespace>
[  427s] 
[  427s]     def test_pre_whitespace(self):
[  427s]         src = '<pre name="foo">\nHey there.  \n\n    I am indented.\n' \
[  427s]               '</pre>'
[  427s] >       perform(src, src, mode='html')
[  427s] 
[  427s] kajiki/tests/test_xml.py:94: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f0ceb0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x06\x00N\x00H\x00\n\x00\x08\x01B\x02'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________ TestSimple.test_preserve_dollar_not_variable_brace ______________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_preserve_dollar_not_variable_brace>
[  427s] 
[  427s]     def test_preserve_dollar_not_variable_brace(self):
[  427s] >       perform('<div>$(</div>', '<div>$(</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:167: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004bdc150, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestSimple.test_script ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_script>
[  427s] 
[  427s]     def test_script(self):
[  427s]         'Always close script tags, even in xml mode.'
[  427s]         source = '<html><script src="public"/></html>'
[  427s]         output = '<html><script src="public"></script></html>'
[  427s] >       perform(source, output, mode='html')
[  427s] 
[  427s] kajiki/tests/test_xml.py:107: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046d6130, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x06\x00N\x00H\x00\n\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________ TestSimple.test_script_commented_CDATA ____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_script_commented_CDATA>
[  427s] 
[  427s]     def test_script_commented_CDATA(self):
[  427s]         script = 'if (1 < 2) { doc.write("<p>Offen&nbsp;bach</p>"); }\n'
[  427s]         src = '<script>/*<![CDATA[*/\n{0}/*]]>*/</script>'.format(script)
[  427s] >       perform(src, mode='html',
[  427s]                 expected_output='<script>/**/\n{0}/**/</script>'.format(script))
[  427s] 
[  427s] kajiki/tests/test_xml.py:152: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f79070, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _______________________ TestSimple.test_script_escaping ________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_script_escaping>
[  427s] 
[  427s]     def test_script_escaping(self):
[  427s]         '''In HTML script and style tags are automatically CDATA; in XML they
[  427s]         must be explicitly be made so.
[  427s]         '''
[  427s]         script = 'if (1 < 2) { doc.write("<p>Offen&nbsp;bach</p>"); }\n'
[  427s]         src = '<script><![CDATA[\n{0}]]></script>'.format(script)
[  427s] >       perform(src, mode='html',
[  427s]                 expected_output='<script>\n{0}</script>'.format(script))
[  427s] 
[  427s] kajiki/tests/test_xml.py:116: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4003f90fa0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _______________________ TestSimple.test_script_variable ________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_script_variable>
[  427s] 
[  427s]     def test_script_variable(self):
[  427s]         '''Interpolate variables inside <script> tags'''
[  427s]         src = '<script><![CDATA[ $name ]]></script>'
[  427s] >       perform(src, '<script>/*<![CDATA[*/ Rick /*]]>*/</script>', mode='xml')
[  427s] 
[  427s] kajiki/tests/test_xml.py:131: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004697bd0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00L\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ________________________ TestSimple.test_style_escaping ________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_style_escaping>
[  427s] 
[  427s]     def test_style_escaping(self):
[  427s]         style = 'html > body { display: none; }\n'
[  427s]         src = '<style><![CDATA[\n{0}]]></style>'.format(style)
[  427s] >       perform(src, '<style>/*<![CDATA[*/\n{0}/*]]>*/</style>'.format(style),
[  427s]                 mode='xml')
[  427s] 
[  427s] kajiki/tests/test_xml.py:124: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4003b2e0b0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____________________ TestSimple.test_textarea_whitespace ______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_textarea_whitespace>
[  427s] 
[  427s]     def test_textarea_whitespace(self):
[  427s]         src = '<textarea name="foo">\nHey there.  \n\n    I am indented.\n' \
[  427s]               '</textarea>'
[  427s] >       perform(src, src, mode='html')
[  427s] 
[  427s] kajiki/tests/test_xml.py:100: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f0ceb0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x06\x00N\x00H\x00\n\x00\x08\x01B\x02'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _________________________ TestSimple.test_xml_entities _________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSimple testMethod=test_xml_entities>
[  427s] 
[  427s]     def test_xml_entities(self):
[  427s]         source = "<div>Cookies &amp; Cream</div>"
[  427s] >       perform(source, source)
[  427s] 
[  427s] kajiki/tests/test_xml.py:224: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046973f0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] __________________________ TestSwitch.test_case_elem ___________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSwitch testMethod=test_case_elem>
[  427s] 
[  427s]       def test_case_elem(self):
[  427s] >         perform('''<div>
[  427s]       <py:switch test="True">
[  427s]         <span py:case="0 == 1">0</span>
[  427s]         <span py:case="1 == 1">1</span>
[  427s]         <span py:else="">2</span>
[  427s]       </py:switch>
[  427s]     </div>''', '<div>\n    <span>1</span>\n  </div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:261: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40007aa890, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x01>\x00\x02\x01F\x00\x08\x00B\x00\n\x01F\x00\x08\x00B\x00\n\x01\x08\x00B\x00\x08\x00<\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestSwitch.test_switch ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSwitch testMethod=test_switch>
[  427s] 
[  427s]         def test_switch(self):
[  427s] >           perform('''<div py:for="i in range(2)">
[  427s]     $i is <py:switch test="i % 2">
[  427s]     <py:case value="0">even</py:case>
[  427s]     <py:else>odd</py:else>
[  427s]     </py:switch></div>''',   '''<div>
[  427s]     0 is even</div><div>
[  427s]     1 is odd</div>''')
[  427s] 
[  427s] kajiki/tests/test_xml.py:236: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400085a0e0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01"\x00\x08\x01B\x00B\x00\x08\x00D\x00\x02\x01>\x00D\x01B\x00<\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ----------------------------- Captured stdout call -----------------------------
[  427s] ERROR LOOKING UP LINE #260
[  427s] _________________________ TestSwitch.test_switch_multi _________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestSwitch testMethod=test_switch_multi>
[  427s] 
[  427s]         def test_switch_multi(self):
[  427s] >           perform('''<div py:for="i in range(8)">
[  427s]     $i is <py:switch test="i % 4">
[  427s]     <py:case value="0">ok</py:case>
[  427s]     <py:case value="1">nearly</py:case>
[  427s]     <py:else>nope</py:else>
[  427s]     </py:switch></div>''',   '''<div>
[  427s]     0 is ok</div><div>
[  427s]     1 is nearly</div><div>
[  427s]     2 is nope</div><div>
[  427s]     3 is nope</div><div>
[  427s]     4 is ok</div><div>
[  427s]     5 is nearly</div><div>
[  427s]     6 is nope</div><div>
[  427s]     7 is nope</div>''')
[  427s] 
[  427s] kajiki/tests/test_xml.py:245: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40007a2d90, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01$\x00\x08\x01B\x00B\x00\x08\x00D\x00\x02\x01>\x00D\x01>\x00D\x01B\x00<\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ----------------------------- Captured stdout call -----------------------------
[  427s] ERROR LOOKING UP LINE #260
[  427s] ____________________ TestElse.test_pyif_pyelse_continuation ____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestElse testMethod=test_pyif_pyelse_continuation>
[  427s] 
[  427s]     def test_pyif_pyelse_continuation(self):
[  427s] >       tpl = perform(
[  427s]             '''<div><py:if test="False">True</py:if><py:else>False</py:else></div>''',
[  427s]             '''<div>False</div>'''
[  427s]         )
[  427s] 
[  427s] kajiki/tests/test_xml.py:306: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004bdd8f0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x02\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] __________________ TestElse.test_pyiftag_pyelse_continuation ___________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestElse testMethod=test_pyiftag_pyelse_continuation>
[  427s] 
[  427s]     def test_pyiftag_pyelse_continuation(self):
[  427s] >       tpl = perform(
[  427s]             '''<div><div py:if="False">True</div><py:else>False</py:else></div>''',
[  427s]             '''<div>False</div>'''
[  427s]         )
[  427s] 
[  427s] kajiki/tests/test_xml.py:300: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004697990, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x02\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ___________________________ TestWith.test_standalone ___________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestWith testMethod=test_standalone>
[  427s] 
[  427s]     def test_standalone(self):
[  427s] >       perform('''<div><py:with vars="a=';';b='-)'">$a$b</py:with></div>''',
[  427s]                 '<div>;-)</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:354: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004662630, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\\\x00\x04\x00\x04\x00B\x00B\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________________________ TestWith.test_with ______________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestWith testMethod=test_with>
[  427s] 
[  427s]         def test_with(self):
[  427s] >           perform('''<div py:with="a='foo'">
[  427s]     <div>$a</div>
[  427s]     <div py:with="a=5">$a</div>
[  427s]     <div>$a</div>
[  427s]     </div>''',   '''<div>
[  427s]     <div>foo</div>
[  427s]     <div>5</div>
[  427s]     <div>foo</div>
[  427s]     </div>''')
[  427s] 
[  427s] kajiki/tests/test_xml.py:314: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40007ecb10, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01Z\x00\x04\x00\x08\x01B\x00\x08\x01Z\x00\x04\x00\x08\x00B\x00\x08\x00@\x00\x08\x01B\x00\x08\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _________________________ TestWith.test_with_multiple __________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestWith testMethod=test_with_multiple>
[  427s] 
[  427s]         def test_with_multiple(self):
[  427s] >           perform('''<div py:with="a='foo';b=3">
[  427s]     <div>$a - $b</div>
[  427s]     <div py:with="a=5;b=1">$a - $b</div>
[  427s]     <div>$a - $b</div>
[  427s]     </div>''',   '''<div>
[  427s]     <div>foo - 3</div>
[  427s]     <div>5 - 1</div>
[  427s]     <div>foo - 3</div>
[  427s]     </div>''')
[  427s] 
[  427s] kajiki/tests/test_xml.py:325: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40007a2b50, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\\\x00\x04\x00\x04\x00\x08\x01B\x00B\x00B\x00\x08\x01\\\x00\x04\x00\x04\x00\x08\x00B\x00B\x00B\x00\x08\x00B\x00\x08\x01B\x00B\x00B\x00\x08\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] __________________ TestWith.test_with_multiple_and_whitespace __________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestWith testMethod=test_with_multiple_and_whitespace>
[  427s] 
[  427s]     def test_with_multiple_and_whitespace(self):
[  427s] >       perform('''<div py:with="a = 'foo';
[  427s]                                  b = 3">$a - $b</div>''',
[  427s]                 '<div>foo - 3</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:336: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40007aaee0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\\\x00\x04\x00\x04\x00\x08\x01B\x00B\x00B\x00\x08\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____________ TestWith.test_with_multiple_with_embedded_semicolons _____________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestWith testMethod=test_with_multiple_with_embedded_semicolons>
[  427s] 
[  427s]     def test_with_multiple_with_embedded_semicolons(self):
[  427s] >       perform('''<div py:with="a=';';b='-)'">$a$b</div>''',
[  427s]                 '<div>;-)</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:350: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004662630, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\\\x00\x04\x00\x04\x00\x08\x00B\x00B\x00\x08\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____________________ TestWith.test_with_ordered_multiple ______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestWith testMethod=test_with_ordered_multiple>
[  427s] 
[  427s]     def test_with_ordered_multiple(self):
[  427s] >       perform('''<div py:with="a='foo';b=a * 2;c=b[::-1];d=c[:3]">'''
[  427s]                 '''$a $b $c $d</div>''',
[  427s]                 '<div>foo foofoo oofoof oof</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:345: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400084b320, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\\\x00\x04\x00\n\x00\x16\x00\x14\x00\x08\x00B\x00\x08\x00B\x00\x08\x00B\x00\x08\x00B\x00\x08\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________ TestWith.test_with_trailing_semicolon _____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestWith testMethod=test_with_trailing_semicolon>
[  427s] 
[  427s]     def test_with_trailing_semicolon(self):
[  427s] >       perform('''<div py:with="a = 'foo';">$a</div>''',
[  427s]                 '<div>foo</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:341: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400470e4f0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01Z\x00\x04\x00\x08\x00B\x00\x08\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _______________________ TestFunction.test_empty_function _______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestFunction testMethod=test_empty_function>
[  427s] 
[  427s]     def test_empty_function(self):
[  427s]         '''Do not crash if a function has no content.'''
[  427s] >       perform('<div><py:def function="bruhaha()"></py:def></div>',
[  427s]                 '<div></div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:371: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4003e55a30, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] __________________________ TestFunction.test_function __________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestFunction testMethod=test_function>
[  427s] 
[  427s]         def test_function(self):
[  427s] >           perform('''<div
[  427s]     ><div py:def="evenness(n)"><py:if test="n % 2 == 0">even</py:if><py:else>odd</py:else></div>
[  427s]     <py:for each="i in range(2)">$i is ${evenness(i)}
[  427s]     </py:for
[  427s]     ></div>''',   '''<div>
[  427s]     0 is <div>even</div>
[  427s]     1 is <div>odd</div>
[  427s]     </div>''')
[  427s] 
[  427s] kajiki/tests/test_xml.py:360: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f81110, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x02"\x00B\x00B\x00\\\x00\n\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________________ TestFunction.test_function_in_attr ______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestFunction testMethod=test_function_in_attr>
[  427s] 
[  427s]         def test_function_in_attr(self):
[  427s]             '''Attribute value with a function call.'''
[  427s] >           perform('''<div
[  427s]     ><py:def function="attrtest(n, sz=16)">text/$sz/$n</py:def><img
[  427s]     src="${attrtest(name)}"/></div>''',
[  427s]                     '<div><img src="text/16/Rick"/></div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:376: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046d6130, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x01\x06\x00N\x00H\x00\n\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________________________ TestCall.test_call ______________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestCall testMethod=test_call>
[  427s] 
[  427s]         def test_call(self):
[  427s] >           perform('''<div
[  427s]     ><py:def function="quote(caller, speaker)"
[  427s]     ><ul>
[  427s]         <li py:for="i in range(2)">Quoth $speaker, ${caller(i)}</li>
[  427s]     </ul></py:def
[  427s]     ><py:call args="n" function="quote(%caller, 'the raven')"
[  427s]     >Nevermore $n</py:call></div>''',   '''<div><ul>
[  427s]         <li>Quoth the raven, Nevermore 0</li><li>Quoth the raven, Nevermore 1</li>
[  427s]     </ul></div>''')
[  427s] 
[  427s] kajiki/tests/test_xml.py:384: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046e6e80, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x05 \x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ----------------------------- Captured stdout call -----------------------------
[  427s] ERROR LOOKING UP LINE #261
[  427s] ERROR LOOKING UP LINE #262
[  427s] ERROR LOOKING UP LINE #265
[  427s] ERROR LOOKING UP LINE #266
[  427s] ____________________________ TestImport.test_import ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestImport testMethod=test_import>
[  427s] 
[  427s]         def test_import(self):
[  427s]             loader = MockLoader({
[  427s] >               'lib.html': XMLTemplate(source='''<div>
[  427s]     <span py:def="evenness(n)"
[  427s]         ><py:if test="n % 2 == 0"
[  427s]             >even</py:if
[  427s]         ><py:else
[  427s]             >odd</py:else
[  427s]     ></span>
[  427s]     <py:def function="half_evenness(n)"
[  427s]         >half of $n is ${evenness(n/2)}</py:def>
[  427s]     </div>'''),
[  427s]                 'tpl.html': XMLTemplate(source='''<div>
[  427s]     <py:import href="lib.html" alias="simple_function"
[  427s]     /><ul>
[  427s]         <li py:for="i in range(4)">
[  427s]             $i is ${simple_function.evenness(i)} ${simple_function.half_evenness(i)}
[  427s]         </li>
[  427s]     </ul>
[  427s]     </div>''')
[  427s]             })
[  427s] 
[  427s] kajiki/tests/test_xml.py:398: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4003c14100, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _________________________ TestImport.test_import_auto __________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestImport testMethod=test_import_auto>
[  427s] 
[  427s]         def test_import_auto(self):
[  427s]             loader = MockLoader({
[  427s] >               'lib.html': XMLTemplate(source='''<div>
[  427s]     <span py:def="evenness(n)"
[  427s]         ><py:if test="n % 2 == 0"
[  427s]             >even</py:if
[  427s]         ><py:else
[  427s]             >odd</py:else
[  427s]     ></span>
[  427s]     <py:def function="half_evenness(n)"
[  427s]         >half of $n is ${evenness(n/2)}</py:def>
[  427s]     </div>'''),
[  427s]                 'tpl.html': XMLTemplate(source='''<div>
[  427s]     <py:import href="lib.html"
[  427s]     /><ul>
[  427s]         <li py:for="i in range(4)">
[  427s]             $i is ${lib.evenness(i)} ${lib.half_evenness(i)}
[  427s]         </li>
[  427s]     </ul>
[  427s]     </div>''')
[  427s]             })
[  427s] 
[  427s] kajiki/tests/test_xml.py:435: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400363d480, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ___________________________ TestImport.test_include ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestImport testMethod=test_include>
[  427s] 
[  427s]     def test_include(self):
[  427s]         '''Must NOT result in: NameError: global name 'name' is not defined'''
[  427s]         loader = MockLoader({
[  427s] >           'included.html': XMLTemplate('<p>The included template must also '
[  427s]                 'access Kajiki globals and the template context: '
[  427s]                 '${value_of("name")}</p>\n'),
[  427s]             'tpl.html': XMLTemplate('<html><body><p>This is the body</p>\n'
[  427s]                 '<py:include href="included.html"/></body></html>')
[  427s]         })
[  427s] 
[  427s] kajiki/tests/test_xml.py:473: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f89730, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00\\\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ________________________ TestImport.test_include_html5 _________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestImport testMethod=test_include_html5>
[  427s] 
[  427s]     def test_include_html5(self):
[  427s]         '''Should not have DOCTYPE'''
[  427s]         class XMLSourceLoader(MockLoader):
[  427s]             """Fakes a FileLoader, but with source in a lookup table.
[  427s]     
[  427s]             It differs from MockLoader because MockLoader doesn't
[  427s]             create the template on load, it's already pre-instantiated
[  427s]             by the user of the MockLoader
[  427s]             """
[  427s]             def __init__(self, sources):
[  427s]                 self.sources = sources
[  427s]                 super(XMLSourceLoader, self).__init__({})
[  427s]     
[  427s]             def _load(self, name, encoding='utf-8', *args, **kwargs):
[  427s]                 return XMLTemplate(source=self.sources[name],
[  427s]                                    mode='html5',
[  427s]                                    *args, **kwargs)
[  427s]     
[  427s]         loader = XMLSourceLoader({
[  427s]             'included.html': '<p>The included template must also '
[  427s]                 'access Kajiki globals and the template context: '
[  427s]                 '${value_of("name")}</p>\n',
[  427s]             'tpl.html': '<html><body><p>This is the body</p>\n'
[  427s]                 '<py:include href="included.html"/></body></html>'
[  427s]         })
[  427s] >       tpl = loader.import_('tpl.html')
[  427s] 
[  427s] kajiki/tests/test_xml.py:510: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/loader.py:21: in import_
[  427s]     mod = self._load(name, *args, **kwargs)
[  427s] kajiki/tests/test_xml.py:499: in _load
[  427s]     return XMLTemplate(source=self.sources[name],
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40043cbc50, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00\x08\x01~\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _________________________ TestExtends.test_autoblocks __________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestExtends testMethod=test_autoblocks>
[  427s] 
[  427s]         def test_autoblocks(self):
[  427s]             loader = MockLoader({
[  427s] >               'parent.html': XMLTemplate('''
[  427s]     <html py:strip="">
[  427s]     <head></head>
[  427s]     <body>
[  427s]         <p py:block="body">It was good seeing you last Friday.
[  427s]         Thanks for the gift!</p>
[  427s]     </body>
[  427s]     </html>'''),
[  427s]                 'child.html': XMLTemplate('''
[  427s]     <html>
[  427s]     <py:extends href="parent.html"/>
[  427s]     <body><em>Great conference this weekend!</em></body>
[  427s]     </html>''', autoblocks=['body'])})
[  427s] 
[  427s] kajiki/tests/test_xml.py:619: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046e6fb0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x02\x02\x00\x08\x03Z\x01\x08\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________ TestExtends.test_autoblocks_disabling _____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestExtends testMethod=test_autoblocks_disabling>
[  427s] 
[  427s]         def test_autoblocks_disabling(self):
[  427s]             loader = MockLoader({
[  427s] >               'parent.html': XMLTemplate('''
[  427s]     <html py:strip="">
[  427s]     <head></head>
[  427s]     <body py:autoblock="False">
[  427s]         <p py:block="body">It was good seeing you last Friday.
[  427s]         Thanks for the gift!</p>
[  427s]     </body>
[  427s]     </html>''', autoblocks=['body']),
[  427s]                 'child.html': XMLTemplate('''
[  427s]     <html>
[  427s]     <py:extends href="parent.html"/>
[  427s]     <body><em>Great conference this weekend!</em></body>
[  427s]     </html>''', autoblocks=['body'])})
[  427s] 
[  427s] kajiki/tests/test_xml.py:657: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004c89330, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x02\x02\x00\x08\x03Z\x01\x08\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestExtends.test_basic ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestExtends testMethod=test_basic>
[  427s] 
[  427s]         def test_basic(self):
[  427s]             loader = MockLoader({
[  427s] >               'parent.html': XMLTemplate('''<div
[  427s]     ><h1 py:def="header()">Header name=$name</h1
[  427s]     ><h6 py:def="footer()">Footer</h6
[  427s]     ><div py:def="body()">
[  427s]     id() = ${id()}
[  427s]     local.id() = ${local.id()}
[  427s]     self.id() = ${self.id()}
[  427s]     child.id() = ${child.id()}
[  427s]     </div><span py:def="id()">parent</span>
[  427s]     ${header()}
[  427s]     ${body()}
[  427s]     ${footer()}
[  427s]     </div>'''),
[  427s]                 'mid.html': XMLTemplate('''<py:extends href="parent.html"
[  427s]     ><span py:def="id()">mid</span
[  427s]     ></py:extends>'''),
[  427s]                 'child.html': XMLTemplate('''<py:extends href="mid.html"
[  427s]     ><span py:def="id()">child</span
[  427s]     ><div py:def="body()">
[  427s]     <h2>Child Body</h2>
[  427s]     ${parent.body()}
[  427s]     </div></py:extends>''')})
[  427s] 
[  427s] kajiki/tests/test_xml.py:520: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40045bfc40, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\tZ\x00\x08\x01Z\x00\x08\x01Z\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestExtends.test_block ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestExtends testMethod=test_block>
[  427s] 
[  427s]         def test_block(self):
[  427s]             loader = MockLoader({
[  427s] >               'parent.html': XMLTemplate('''<div
[  427s]     ><py:def function="greet(name)"
[  427s]     >Hello, $name!</py:def
[  427s]     ><py:def function="sign(name)"
[  427s]     >Sincerely,<br/><em>$name</em></py:def
[  427s]     >${greet(to)}
[  427s]     
[  427s]     <p py:block="body">It was good seeing you last Friday.
[  427s]     Thanks for the gift!</p>
[  427s]     
[  427s]     ${sign(from_)}
[  427s]     </div>'''),
[  427s]                 'child.html': XMLTemplate('''<py:extends href="parent.html"
[  427s]     ><py:def function="greet(name)"
[  427s]     >Dear $name:</py:def
[  427s]     ><py:block name="body">${parent_block()}
[  427s]     <p>And don't forget you owe me money!</p>
[  427s]     </py:block
[  427s]     ></py:extends>
[  427s]     ''')})
[  427s] 
[  427s] kajiki/tests/test_xml.py:576: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40008807f0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x05f\x00\x08\x02Z\x01\x08\x02f\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ___________________________ TestExtends.test_dynamic ___________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestExtends testMethod=test_dynamic>
[  427s] 
[  427s]         def test_dynamic(self):
[  427s]             loader = MockLoader({
[  427s] >               'parent0.html': XMLTemplate('<span>Parent 0</span>'),
[  427s]                 'parent1.html': XMLTemplate('<span>Parent 1</span>'),
[  427s]                 'child.html': XMLTemplate('''<div
[  427s]     ><py:if test="p == 0"><py:extends href="parent0.html"/></py:if
[  427s]     ><py:else><py:extends href="parent1.html"/></py:else
[  427s]     ></div>
[  427s]     ''')
[  427s]             })
[  427s] 
[  427s] kajiki/tests/test_xml.py:560: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004697990, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _______________________________ TestClosure.test _______________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestClosure testMethod=test>
[  427s] 
[  427s]         def test(self):
[  427s] >           perform('''<div
[  427s]     ><py:def function="add(x)"
[  427s]         ><py:def function="inner(y)"
[  427s]             >${x+y}</py:def
[  427s]         >${inner(x*2)}</py:def
[  427s]     >${add(5)}</div>''',   '<div>15</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:696: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046e6890, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x05\\\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestPython.test_basic _____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestPython testMethod=test_basic>
[  427s] 
[  427s]         def test_basic(self):
[  427s] >           perform('''<div
[  427s]     ><?py
[  427s]     import os
[  427s]     ?>${os.path.join('a', 'b', 'c')}</div>''',   '<div>a/b/c</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:706: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004738c00, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x01\x08\x02v\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestPython.test_indent ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestPython testMethod=test_indent>
[  427s] 
[  427s]         def test_indent(self):
[  427s] >           perform('''<div
[  427s]     ><?py #
[  427s]         import os
[  427s]         import re
[  427s]     ?>${os.path.join('a','b','c')}</div>''',   '<div>a/b/c</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:712: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f70f50, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x01\x08\x00\x08\x03v\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____________________________ TestPython.test_mod ______________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestPython testMethod=test_mod>
[  427s] 
[  427s]         def test_mod(self):
[  427s] >           perform('''<div
[  427s]     ><?py %import os
[  427s]     ?><py:def function="test()"
[  427s]     >${os.path.join('a', 'b', 'c')}</py:def
[  427s]     >${test()}</div>''',   '<div>a/b/c</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:724: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046e69c0, file "<string>", line 3>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x04Z\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestPython.test_short _____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestPython testMethod=test_short>
[  427s] 
[  427s]         def test_short(self):
[  427s] >           perform('''<div
[  427s]     ><?py import os
[  427s]     ?>${os.path.join('a', 'b', 'c')}</div>''',   '<div>a/b/c</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:719: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400473a4f0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x01\x08\x01v\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________________ TestComment.test_basic ____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestComment testMethod=test_basic>
[  427s] 
[  427s]     def test_basic(self):
[  427s] >       perform('<div><!-- This comment is preserved. -->'
[  427s]                 '<!--! This comment is stripped. --></div>',
[  427s]                 '<div><!--  This comment is preserved.  --></div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:733: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4003b2e0b0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] __________________________ TestAttributes.test_attrs ___________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestAttributes testMethod=test_attrs>
[  427s] 
[  427s]     def test_attrs(self):
[  427s] >       perform('<div py:attrs="dict(a=5, b=6)"/>',   '<div a="5" b="6"/>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:749: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046f5e30, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00b\x00\n\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] __________________________ TestAttributes.test_basic ___________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestAttributes testMethod=test_basic>
[  427s] 
[  427s]     def test_basic(self):
[  427s] >       perform('''<div id="foo"/>''',   '<div id="foo"/>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:740: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046d6130, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x06\x00N\x00H\x00\n\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _________________________ TestAttributes.test_content __________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestAttributes testMethod=test_content>
[  427s] 
[  427s]     def test_content(self):
[  427s] >       perform('''<div py:content="'foo'"/>''',   '<div>foo</div>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:743: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004697ab0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________ TestAttributes.test_escape_attr_values ____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestAttributes testMethod=test_escape_attr_values>
[  427s] 
[  427s]     def test_escape_attr_values(self):
[  427s]         '''Escape static and dynamic attribute values.'''
[  427s]         context = dict(url='https://domain.com/path?a=1&b=2')
[  427s]         source = '''<a title='"Ha!"' href="$url">Link</a>'''
[  427s]         output = '<a href="https://domain.com/path?a=1&amp;b=2" ' \
[  427s]                  'title="&quot;Ha!&quot;">Link</a>'
[  427s] >       perform(source, output, context, mode='html')
[  427s] 
[  427s] kajiki/tests/test_xml.py:792: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40007ffbc0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x06\x00N\x00H\x00\n\x00\x06\x00N\x00H\x00\n\x00\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ________________________ TestAttributes.test_html_attrs ________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestAttributes testMethod=test_html_attrs>
[  427s] 
[  427s]     def test_html_attrs(self):
[  427s]         TPL = '<input type="checkbox" checked="$checked"/>'
[  427s]         context0 = dict(checked=None)
[  427s]         context1 = dict(checked=True)
[  427s] >       perform(TPL, '<input type="checkbox"/>', context0, mode='xml')
[  427s] 
[  427s] kajiki/tests/test_xml.py:768: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40007a6d90, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x06\x00N\x00H\x00\n\x00\x06\x00N\x00H\x00\n\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _________________________ TestAttributes.test_replace __________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestAttributes testMethod=test_replace>
[  427s] 
[  427s]     def test_replace(self):
[  427s] >       perform('''<div py:replace="'foo'"/>''',   'foo')
[  427s] 
[  427s] kajiki/tests/test_xml.py:746: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400472e120, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0, lnotab = b'\x00\x00\x06\x01'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] __________________________ TestAttributes.test_strip ___________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestAttributes testMethod=test_strip>
[  427s] 
[  427s]     def test_strip(self):
[  427s]         TPL = '<div><h1 py:strip="header">Header</h1></div>'
[  427s] >       perform(TPL, '<div>Header</div>', context=dict(header=True))
[  427s] 
[  427s] kajiki/tests/test_xml.py:759: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046f5430, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x16\x00B\x00\x16\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________________ TestAttributes.test_xml_namespaces ______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestAttributes testMethod=test_xml_namespaces>
[  427s] 
[  427s]     def test_xml_namespaces(self):
[  427s]         '''Namespaced attributes pass through.'''
[  427s]         TPL = '<p xml:lang="en">English text</p>'
[  427s] >       perform(TPL, TPL, mode='xml')
[  427s] 
[  427s] kajiki/tests/test_xml.py:783: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f0ceb0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x06\x00N\x00H\x00\n\x00\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____________________________ TestDebug.test_debug _____________________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestDebug testMethod=test_debug>
[  427s] 
[  427s]     def test_debug(self):
[  427s]         loader = FileLoader(path=os.path.join(os.path.dirname(__file__),
[  427s]                             'data'))
[  427s] >       tpl = loader.import_('debug.html')
[  427s] 
[  427s] kajiki/tests/test_xml.py:800: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/loader.py:78: in import_
[  427s]     return super(FileLoader, self).import_(name, *args, **kwargs)
[  427s] kajiki/loader.py:21: in import_
[  427s]     mod = self._load(name, *args, **kwargs)
[  427s] kajiki/loader.py:103: in _load
[  427s]     return self.extension_map[ext](
[  427s] kajiki/loader.py:62: in <lambda>
[  427s]     html=lambda *a, **kw: XMLTemplate(mode='html', *a, **kw),
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046e75a0, file "<string>", line 2>
[  427s] filename = '/home/abuild/rpmbuild/BUILD/kajiki-0.8.3/kajiki/tests/data/debug.html'
[  427s] firstlineno = 0, lnotab = b'\x00\x00\x06\x01\x08\x06Z\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________________ TestPackageLoader.test_pkg_loader _______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestPackageLoader testMethod=test_pkg_loader>
[  427s] 
[  427s]     def test_pkg_loader(self):
[  427s]         loader = PackageLoader()
[  427s] >       loader.import_('kajiki.tests.data.debug')
[  427s] 
[  427s] kajiki/tests/test_xml.py:818: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/loader.py:78: in import_
[  427s]     return super(FileLoader, self).import_(name, *args, **kwargs)
[  427s] kajiki/loader.py:21: in import_
[  427s]     mod = self._load(name, *args, **kwargs)
[  427s] kajiki/loader.py:103: in _load
[  427s]     return self.extension_map[ext](
[  427s] kajiki/loader.py:62: in <lambda>
[  427s]     html=lambda *a, **kw: XMLTemplate(mode='html', *a, **kw),
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046e7b90, file "<string>", line 2>
[  427s] filename = '/home/abuild/rpmbuild/BUILD/kajiki-0.8.3/kajiki/tests/data/debug.html'
[  427s] firstlineno = 0, lnotab = b'\x00\x00\x06\x01\x08\x06Z\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________________ TestBuiltinFunctions.test_defined _______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestBuiltinFunctions testMethod=test_defined>
[  427s] 
[  427s]         def test_defined(self):
[  427s] >           perform('''<div>\
[  427s]     <div py:if="defined('albatross')">$albatross</div>\
[  427s]     <p py:if="defined('parrot')">$parrot</p></div>''',
[  427s]     expected_output='<div><p>Bereft of life, it rests in peace</p></div>',
[  427s]     context=dict(parrot='Bereft of life, it rests in peace'))
[  427s] 
[  427s] kajiki/tests/test_xml.py:823: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f0c940, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\x1e\x00\x08\x00L\x00\x08\x00\x1e\x00\x08\x00L\x00\x08\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________________ TestBuiltinFunctions.test_literal _______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestBuiltinFunctions testMethod=test_literal>
[  427s] 
[  427s]     def test_literal(self):
[  427s]         '''Escape by default; literal() marks as safe.'''
[  427s]         context = dict(albatross="<em>Albatross!!!</em>")
[  427s]         expected_output = "<p><em>Albatross!!!</em></p>"
[  427s] >       perform("<p>${literal(albatross)}</p>", expected_output, context)
[  427s] 
[  427s] kajiki/tests/test_xml.py:839: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046f5e30, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00f\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________________ TestBuiltinFunctions.test_value_of ______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestBuiltinFunctions testMethod=test_value_of>
[  427s] 
[  427s]     def test_value_of(self):
[  427s]         TPL = "<p>${value_of('albatross', 'Albatross!!!')}</p>"
[  427s] >       perform(TPL,
[  427s]             expected_output="<p>It's</p>", context=dict(albatross="It's"))
[  427s] 
[  427s] kajiki/tests/test_xml.py:831: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x40046e7cc0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00^\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] __________________ TestTranslation.test_extract_python_inside __________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestTranslation testMethod=test_extract_python_inside>
[  427s] 
[  427s]     def test_extract_python_inside(self):
[  427s]         src = '''<xml><div>${_('hi')}</div><p>
[  427s]     
[  427s]         Hello
[  427s]         World</p></xml>'''
[  427s]         expected = '''<xml><div>xi</div><p>\n\n        TRANSLATED(Hello
[  427s]         World)</p></xml>'''
[  427s]     
[  427s]         # Build translation table
[  427s]         messages = {'hi': 'xi'}
[  427s]         for _, _, msgid, _ in i18n.extract(BytesIO(src.encode('utf-8')), [], None, {
[  427s]             'extract_python': True
[  427s]         }):
[  427s]             messages[msgid] = 'TRANSLATED(%s)' % msgid
[  427s]     
[  427s]         # Provide a fake translation function
[  427s]         default_gettext = i18n.gettext
[  427s]         i18n.gettext = lambda s: messages[s]
[  427s]         try:
[  427s] >           perform(src, expected)
[  427s] 
[  427s] kajiki/tests/test_xml.py:910: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4005148930, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00\\\x00\x08\x02B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________ TestTranslation.test_extract_translate ____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestTranslation testMethod=test_extract_translate>
[  427s] 
[  427s]     def test_extract_translate(self):
[  427s]         src = '''<xml><div>Hi</div><p>
[  427s]     
[  427s]         Hello
[  427s]         World</p></xml>'''
[  427s]         expected = {
[  427s]             False: '''<xml><div>TRANSLATED(Hi)</div><p>\n\n        TRANSLATED(Hello
[  427s]         World)</p></xml>''',
[  427s]             True: '''<xml><div>TRANSLATED(Hi)</div><p>TRANSLATED(Hello
[  427s]         World)</p></xml>'''
[  427s]         }
[  427s]     
[  427s]         for strip_text in (False, True):
[  427s]             # Build translation table
[  427s]             messages = {}
[  427s]             for _, _, msgid, _ in i18n.extract(BytesIO(src.encode('utf-8')), None, None, {
[  427s]                 'strip_text': strip_text
[  427s]             }):
[  427s]                 messages[msgid] = 'TRANSLATED(%s)' % msgid
[  427s]     
[  427s]             # Provide a fake translation function
[  427s]             default_gettext = i18n.gettext
[  427s]             i18n.gettext = lambda s: messages[s]
[  427s]             try:
[  427s] >               perform(src, expected[strip_text], strip_text=strip_text)
[  427s] 
[  427s] kajiki/tests/test_xml.py:887: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f71630, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00\x08\x02B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________ TestTranslation.test_substituting_gettext_with_lambda _____________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestTranslation testMethod=test_substituting_gettext_with_lambda>
[  427s] 
[  427s]     def test_substituting_gettext_with_lambda(self):
[  427s]         src = '''<xml>hi</xml>'''
[  427s]         expected = '''<xml>spam</xml>'''
[  427s]     
[  427s] >       perform(src, expected, context=dict(gettext=lambda x: 'spam'))
[  427s] 
[  427s] kajiki/tests/test_xml.py:929: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400515cff0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _______ TestTranslation.test_substituting_gettext_with_lambda_extending ________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestTranslation testMethod=test_substituting_gettext_with_lambda_extending>
[  427s] 
[  427s]     def test_substituting_gettext_with_lambda_extending(self):
[  427s]         gettext = lambda x: 'egg'
[  427s]         loader = MockLoader({
[  427s] >           'parent.html': XMLTemplate('''<div>parent</div>'''),
[  427s]             'child.html': XMLTemplate('''<py:extends href="parent.html"><div>child</div></py:extends>''')})
[  427s] 
[  427s] kajiki/tests/test_xml.py:934: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004696f70, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____ TestTranslation.test_substituting_gettext_with_lambda_extending_file _____
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestTranslation testMethod=test_substituting_gettext_with_lambda_extending_file>
[  427s] 
[  427s]     def test_substituting_gettext_with_lambda_extending_file(self):
[  427s]         loader = FileLoader(path=os.path.join(os.path.dirname(__file__),
[  427s]                             'data'), base_globals=dict(gettext=lambda x: 'egg'))
[  427s] >       tpl = loader.import_('file_child.html')
[  427s] 
[  427s] kajiki/tests/test_xml.py:954: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/loader.py:78: in import_
[  427s]     return super(FileLoader, self).import_(name, *args, **kwargs)
[  427s] kajiki/loader.py:21: in import_
[  427s]     mod = self._load(name, *args, **kwargs)
[  427s] kajiki/loader.py:103: in _load
[  427s]     return self.extension_map[ext](
[  427s] kajiki/loader.py:62: in <lambda>
[  427s]     html=lambda *a, **kw: XMLTemplate(mode='html', *a, **kw),
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4005148ab0, file "<string>", line 2>
[  427s] filename = '/home/abuild/rpmbuild/BUILD/kajiki-0.8.3/kajiki/tests/data/file_child.html'
[  427s] firstlineno = 0, lnotab = b'\x00\x00\x06\x01f\x00\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____ TestTranslation.test_substituting_gettext_with_lambda_extending_twice _____
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestTranslation testMethod=test_substituting_gettext_with_lambda_extending_twice>
[  427s] 
[  427s]     def test_substituting_gettext_with_lambda_extending_twice(self):
[  427s]         gettext = lambda x: 'egg'
[  427s]         loader = MockLoader({
[  427s] >           'parent.html': XMLTemplate('''<div>parent</div>'''),
[  427s]             'mid.html': XMLTemplate('''<py:extends href="parent.html"><div>${variable}</div></py:extends>'''),
[  427s]             'child.html': XMLTemplate('''<py:extends href="mid.html"><div>child</div></py:extends>''')})
[  427s] 
[  427s] kajiki/tests/test_xml.py:943: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400515c930, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _ TestTranslation.test_without_substituting_gettext_with_lambda_extending_file _
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestTranslation testMethod=test_without_substituting_gettext_with_lambda_extending_file>
[  427s] 
[  427s]     def test_without_substituting_gettext_with_lambda_extending_file(self):
[  427s]         # this should use i18n.gettext
[  427s]         loader = FileLoader(path=os.path.join(os.path.dirname(__file__),
[  427s]                             'data'))
[  427s] >       tpl = loader.import_('file_child.html')
[  427s] 
[  427s] kajiki/tests/test_xml.py:962: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/loader.py:78: in import_
[  427s]     return super(FileLoader, self).import_(name, *args, **kwargs)
[  427s] kajiki/loader.py:21: in import_
[  427s]     mod = self._load(name, *args, **kwargs)
[  427s] kajiki/loader.py:103: in _load
[  427s]     return self.extension_map[ext](
[  427s] kajiki/loader.py:62: in <lambda>
[  427s]     html=lambda *a, **kw: XMLTemplate(mode='html', *a, **kw),
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4005148c30, file "<string>", line 2>
[  427s] filename = '/home/abuild/rpmbuild/BUILD/kajiki-0.8.3/kajiki/tests/data/file_child.html'
[  427s] firstlineno = 0, lnotab = b'\x00\x00\x06\x01f\x00\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________________ TestErrorReporting.test_code_error ______________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestErrorReporting testMethod=test_code_error>
[  427s] 
[  427s]     def test_code_error(self):
[  427s]         for strip_text in (False, True):
[  427s]             try:
[  427s]                 child = FileLoader(
[  427s]                     os.path.join(os.path.dirname(__file__), 'data')
[  427s] >               ).load('error.html', strip_text=strip_text)
[  427s] 
[  427s] kajiki/tests/test_xml.py:1000: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/loader.py:78: in import_
[  427s]     return super(FileLoader, self).import_(name, *args, **kwargs)
[  427s] kajiki/loader.py:21: in import_
[  427s]     mod = self._load(name, *args, **kwargs)
[  427s] kajiki/loader.py:103: in _load
[  427s]     return self.extension_map[ext](
[  427s] kajiki/loader.py:62: in <lambda>
[  427s]     html=lambda *a, **kw: XMLTemplate(mode='html', *a, **kw),
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x400515d590, file "<string>", line 2>
[  427s] filename = '/home/abuild/rpmbuild/BUILD/kajiki-0.8.3/kajiki/tests/data/error.html'
[  427s] firstlineno = 0, lnotab = b'\x00\x00\x06\x01\x08\x03H\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ______________ TestBracketsInExpression.test_brackets_asymmetric _______________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestBracketsInExpression testMethod=test_brackets_asymmetric>
[  427s] 
[  427s]     def test_brackets_asymmetric(self):
[  427s] >       perform('<x>${\'{o{k}k  { \'}</x>', '<x>{o{k}k  { </x>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:1019: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004697bd0, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] ____________________ TestBracketsInExpression.test_complex _____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestBracketsInExpression testMethod=test_complex>
[  427s] 
[  427s]     def test_complex(self):
[  427s] >       perform(u"<xml><div>${'ciao {  } {' + \"a {} b {{{{} w}}rar\"}${'sd{}'} ${1+1}</div></xml>",
[  427s]                 u"<xml><div>ciao {  } {a {} b {{{{} w}}rarsd{} 2</div></xml>")
[  427s] 
[  427s] kajiki/tests/test_xml.py:1022: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  427s]     new_code = patch_code_file_lines(
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] 
[  427s] code = <code object __main__ at 0x4004f92c10, file "<string>", line 2>
[  427s] filename = '<string>', firstlineno = 0
[  427s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00B\x00\x08\x00B\x00'
[  427s] 
[  427s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  427s]         code_args = [code.co_argcount]
[  427s]         if version_info >= (3, 8):
[  427s]             code_args.append(code.co_posonlyargcount)
[  427s]         code_args.extend([
[  427s]             code.co_kwonlyargcount,
[  427s]             code.co_nlocals,
[  427s]             code.co_stacksize,
[  427s]             code.co_flags,
[  427s]             code.co_code,
[  427s]             code.co_consts,
[  427s]             code.co_names,
[  427s]             code.co_varnames,
[  427s]             filename,
[  427s]             code.co_name,
[  427s]             firstlineno,
[  427s]             lnotab,
[  427s]             code.co_freevars,
[  427s]             code.co_cellvars,
[  427s]         ])
[  427s] >       return types.CodeType(*code_args)
[  427s] E       TypeError: code() argument 13 must be str, not int
[  427s] 
[  427s] kajiki/template.py:440: TypeError
[  427s] _____________________ TestBracketsInExpression.test_simple _____________________
[  427s] 
[  427s] self = <kajiki.tests.test_xml.TestBracketsInExpression testMethod=test_simple>
[  427s] 
[  427s]     def test_simple(self):
[  427s] >       perform('<x>${\'ok\'}</x>', '<x>ok</x>')
[  427s] 
[  427s] kajiki/tests/test_xml.py:1013: 
[  427s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  427s] kajiki/tests/test_xml.py:74: in perform
[  427s]     tpl = XMLTemplate(source, **options)
[  427s] kajiki/xml_template.py:56: in XMLTemplate
[  427s]     t = template.from_ir(ir_, base_globals=base_globals)
[  427s] kajiki/template.py:331: in from_ir
[  427s]     tpl.annotate_lnotab(py_linenos)
[  427s] kajiki/template.py:265: in annotate_lnotab
[  427s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  427s] kajiki/template.py:397: in annotate_lnotab
[  428s]     new_code = patch_code_file_lines(
[  428s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  428s] 
[  428s] code = <code object __main__ at 0x400515c930, file "<string>", line 2>
[  428s] filename = '<string>', firstlineno = 0
[  428s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  428s] 
[  428s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  428s]         code_args = [code.co_argcount]
[  428s]         if version_info >= (3, 8):
[  428s]             code_args.append(code.co_posonlyargcount)
[  428s]         code_args.extend([
[  428s]             code.co_kwonlyargcount,
[  428s]             code.co_nlocals,
[  428s]             code.co_stacksize,
[  428s]             code.co_flags,
[  428s]             code.co_code,
[  428s]             code.co_consts,
[  428s]             code.co_names,
[  428s]             code.co_varnames,
[  428s]             filename,
[  428s]             code.co_name,
[  428s]             firstlineno,
[  428s]             lnotab,
[  428s]             code.co_freevars,
[  428s]             code.co_cellvars,
[  428s]         ])
[  428s] >       return types.CodeType(*code_args)
[  428s] E       TypeError: code() argument 13 must be str, not int
[  428s] 
[  428s] kajiki/template.py:440: TypeError
[  428s] _________________ TestBracketsInExpression.test_some_brackets __________________
[  428s] 
[  428s] self = <kajiki.tests.test_xml.TestBracketsInExpression testMethod=test_some_brackets>
[  428s] 
[  428s]     def test_some_brackets(self):
[  428s] >       perform('<x>${\'{ok}\'}</x>', '<x>{ok}</x>')
[  428s] 
[  428s] kajiki/tests/test_xml.py:1016: 
[  428s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  428s] kajiki/tests/test_xml.py:74: in perform
[  428s]     tpl = XMLTemplate(source, **options)
[  428s] kajiki/xml_template.py:56: in XMLTemplate
[  428s]     t = template.from_ir(ir_, base_globals=base_globals)
[  428s] kajiki/template.py:331: in from_ir
[  428s]     tpl.annotate_lnotab(py_linenos)
[  428s] kajiki/template.py:265: in annotate_lnotab
[  428s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  428s] kajiki/template.py:397: in annotate_lnotab
[  428s]     new_code = patch_code_file_lines(
[  428s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  428s] 
[  428s] code = <code object __main__ at 0x400515cff0, file "<string>", line 2>
[  428s] filename = '<string>', firstlineno = 0
[  428s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  428s] 
[  428s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  428s]         code_args = [code.co_argcount]
[  428s]         if version_info >= (3, 8):
[  428s]             code_args.append(code.co_posonlyargcount)
[  428s]         code_args.extend([
[  428s]             code.co_kwonlyargcount,
[  428s]             code.co_nlocals,
[  428s]             code.co_stacksize,
[  428s]             code.co_flags,
[  428s]             code.co_code,
[  428s]             code.co_consts,
[  428s]             code.co_names,
[  428s]             code.co_varnames,
[  428s]             filename,
[  428s]             code.co_name,
[  428s]             firstlineno,
[  428s]             lnotab,
[  428s]             code.co_freevars,
[  428s]             code.co_cellvars,
[  428s]         ])
[  428s] >       return types.CodeType(*code_args)
[  428s] E       TypeError: code() argument 13 must be str, not int
[  428s] 
[  428s] kajiki/template.py:440: TypeError
[  428s] _______________ TestBracketsInExpression.test_with_padding_space _______________
[  428s] 
[  428s] self = <kajiki.tests.test_xml.TestBracketsInExpression testMethod=test_with_padding_space>
[  428s] 
[  428s]     def test_with_padding_space(self):
[  428s] >       perform('<x y="${ 1 + 1}"> ${  "hello"     +   "world"   }  </x>',
[  428s]                 '<x y="2"> helloworld  </x>')
[  428s] 
[  428s] kajiki/tests/test_xml.py:1026: 
[  428s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  428s] kajiki/tests/test_xml.py:74: in perform
[  428s]     tpl = XMLTemplate(source, **options)
[  428s] kajiki/xml_template.py:56: in XMLTemplate
[  428s]     t = template.from_ir(ir_, base_globals=base_globals)
[  428s] kajiki/template.py:331: in from_ir
[  428s]     tpl.annotate_lnotab(py_linenos)
[  428s] kajiki/template.py:265: in annotate_lnotab
[  428s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  428s] kajiki/template.py:397: in annotate_lnotab
[  428s]     new_code = patch_code_file_lines(
[  428s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  428s] 
[  428s] code = <code object __main__ at 0x4004f0f2f0, file "<string>", line 2>
[  428s] filename = '<string>', firstlineno = 0
[  428s] lnotab = b'\x00\x00\x06\x01\x08\x00\x06\x00N\x00H\x00\n\x00\x08\x00B\x00'
[  428s] 
[  428s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  428s]         code_args = [code.co_argcount]
[  428s]         if version_info >= (3, 8):
[  428s]             code_args.append(code.co_posonlyargcount)
[  428s]         code_args.extend([
[  428s]             code.co_kwonlyargcount,
[  428s]             code.co_nlocals,
[  428s]             code.co_stacksize,
[  428s]             code.co_flags,
[  428s]             code.co_code,
[  428s]             code.co_consts,
[  428s]             code.co_names,
[  428s]             code.co_varnames,
[  428s]             filename,
[  428s]             code.co_name,
[  428s]             firstlineno,
[  428s]             lnotab,
[  428s]             code.co_freevars,
[  428s]             code.co_cellvars,
[  428s]         ])
[  428s] >       return types.CodeType(*code_args)
[  428s] E       TypeError: code() argument 13 must be str, not int
[  428s] 
[  428s] kajiki/template.py:440: TypeError
[  428s] ____________________ TestMultipleChildrenInDOM.test_comment ____________________
[  428s] 
[  428s] self = <kajiki.tests.test_xml.TestMultipleChildrenInDOM testMethod=test_comment>
[  428s] 
[  428s]     def test_comment(self):
[  428s] >       res = XMLTemplate('<!-- a --><x>${1+1}</x>')().render()
[  428s] 
[  428s] kajiki/tests/test_xml.py:1065: 
[  428s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  428s] kajiki/xml_template.py:56: in XMLTemplate
[  428s]     t = template.from_ir(ir_, base_globals=base_globals)
[  428s] kajiki/template.py:331: in from_ir
[  428s]     tpl.annotate_lnotab(py_linenos)
[  428s] kajiki/template.py:265: in annotate_lnotab
[  428s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  428s] kajiki/template.py:397: in annotate_lnotab
[  428s]     new_code = patch_code_file_lines(
[  428s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  428s] 
[  428s] code = <code object __main__ at 0x4004696f70, file "<string>", line 2>
[  428s] filename = '<string>', firstlineno = 0
[  428s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  428s] 
[  428s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  428s]         code_args = [code.co_argcount]
[  428s]         if version_info >= (3, 8):
[  428s]             code_args.append(code.co_posonlyargcount)
[  428s]         code_args.extend([
[  428s]             code.co_kwonlyargcount,
[  428s]             code.co_nlocals,
[  428s]             code.co_stacksize,
[  428s]             code.co_flags,
[  428s]             code.co_code,
[  428s]             code.co_consts,
[  428s]             code.co_names,
[  428s]             code.co_varnames,
[  428s]             filename,
[  428s]             code.co_name,
[  428s]             firstlineno,
[  428s]             lnotab,
[  428s]             code.co_freevars,
[  428s]             code.co_cellvars,
[  428s]         ])
[  428s] >       return types.CodeType(*code_args)
[  428s] E       TypeError: code() argument 13 must be str, not int
[  428s] 
[  428s] kajiki/template.py:440: TypeError
[  428s] ______________________ TestMultipleChildrenInDOM.test_ok _______________________
[  428s] 
[  428s] self = <kajiki.tests.test_xml.TestMultipleChildrenInDOM testMethod=test_ok>
[  428s] 
[  428s]     def test_ok(self):
[  428s] >       XMLTemplate('<xml><!--  a  --><x>${1+1}</x></xml>')
[  428s] 
[  428s] kajiki/tests/test_xml.py:1062: 
[  428s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  428s] kajiki/xml_template.py:56: in XMLTemplate
[  428s]     t = template.from_ir(ir_, base_globals=base_globals)
[  428s] kajiki/template.py:331: in from_ir
[  428s]     tpl.annotate_lnotab(py_linenos)
[  428s] kajiki/template.py:265: in annotate_lnotab
[  428s]     meth.annotate_lnotab(cls.filename, py_to_tpl, dict(py_to_tpl))
[  428s] kajiki/template.py:397: in annotate_lnotab
[  428s]     new_code = patch_code_file_lines(
[  428s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[  428s] 
[  428s] code = <code object __main__ at 0x400515cff0, file "<string>", line 2>
[  428s] filename = '<string>', firstlineno = 0
[  428s] lnotab = b'\x00\x00\x06\x01\x08\x00B\x00'
[  428s] 
[  428s]     def patch_code_file_lines(code, filename, firstlineno, lnotab):
[  428s]         code_args = [code.co_argcount]
[  428s]         if version_info >= (3, 8):
[  428s]             code_args.append(code.co_posonlyargcount)
[  428s]         code_args.extend([
[  428s]             code.co_kwonlyargcount,
[  428s]             code.co_nlocals,
[  428s]             code.co_stacksize,
[  428s]             code.co_flags,
[  428s]             code.co_code,
[  428s]             code.co_consts,
[  428s]             code.co_names,
[  428s]             code.co_varnames,
[  428s]             filename,
[  428s]             code.co_name,
[  428s]             firstlineno,
[  428s]             lnotab,
[  428s]             code.co_freevars,
[  428s]             code.co_cellvars,
[  428s]         ])
[  428s] >       return types.CodeType(*code_args)
[  428s] E       TypeError: code() argument 13 must be str, not int
[  428s] 
[  428s] kajiki/template.py:440: TypeError
[  428s] =========================== short test summary info ============================
[  428s] FAILED kajiki/tests/test_ir.py::TestBasic::test - TypeError: code() argument ...
[  428s] FAILED kajiki/tests/test_ir.py::TestSwitch::test_basic - TypeError: code() ar...
[  428s] FAILED kajiki/tests/test_ir.py::TestFunction::test_basic - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_ir.py::TestCall::test_basic - TypeError: code() argu...
[  428s] FAILED kajiki/tests/test_ir.py::TestImport::test_import - TypeError: code() a...
[  428s] FAILED kajiki/tests/test_ir.py::TestInclude::test_include - TypeError: code()...
[  428s] FAILED kajiki/tests/test_ir.py::TestExtends::test_extends - TypeError: code()...
[  428s] FAILED kajiki/tests/test_ir.py::TestDynamicExtends::test_extends - TypeError:...
[  428s] FAILED kajiki/tests/test_text.py::TestBasic::test_auto_escape - TypeError: co...
[  428s] FAILED kajiki/tests/test_text.py::TestBasic::test_auto_escape_disable - TypeE...
[  428s] FAILED kajiki/tests/test_text.py::TestBasic::test_expr_None - TypeError: code...
[  428s] FAILED kajiki/tests/test_text.py::TestBasic::test_expr_brace - TypeError: cod...
[  428s] FAILED kajiki/tests/test_text.py::TestBasic::test_expr_brace_complex - TypeEr...
[  428s] FAILED kajiki/tests/test_text.py::TestBasic::test_expr_multiline - TypeError:...
[  428s] FAILED kajiki/tests/test_text.py::TestBasic::test_expr_name - TypeError: code...
[  428s] FAILED kajiki/tests/test_text.py::TestSwitch::test_ljust - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_text.py::TestSwitch::test_rstrip - TypeError: code()...
[  428s] FAILED kajiki/tests/test_text.py::TestSwitch::test_switch - TypeError: code()...
[  428s] FAILED kajiki/tests/test_text.py::TestFunction::test_function - TypeError: co...
[  428s] FAILED kajiki/tests/test_text.py::TestCall::test_call - TypeError: code() arg...
[  428s] FAILED kajiki/tests/test_text.py::TestImport::test_import_auto - TypeError: c...
[  428s] FAILED kajiki/tests/test_text.py::TestImport::test_import_simple - TypeError:...
[  428s] FAILED kajiki/tests/test_text.py::TestImport::test_include - TypeError: code(...
[  428s] FAILED kajiki/tests/test_text.py::TestExtends::test_basic - TypeError: code()...
[  428s] FAILED kajiki/tests/test_text.py::TestExtends::test_block - TypeError: code()...
[  428s] FAILED kajiki/tests/test_text.py::TestExtends::test_dynamic - TypeError: code...
[  428s] FAILED kajiki/tests/test_text.py::TestClosure::test - TypeError: code() argum...
[  428s] FAILED kajiki/tests/test_text.py::TestPython::test_basic - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_text.py::TestPython::test_indent - TypeError: code()...
[  428s] FAILED kajiki/tests/test_text.py::TestPython::test_mod - TypeError: code() ar...
[  428s] FAILED kajiki/tests/test_text.py::TestPython::test_short - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_text.py::TestDebug::test_debug - TypeError: code() a...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_CDATA_disabled - TypeError:...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_CDATA_escaping - TypeError:...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_CDATA_escaping_mixed - Type...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_double_escape_dollar - Type...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_empty_attr - TypeError: cod...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_escape_dollar - TypeError: ...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_escape_dollar_followed_by_dollar
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_expr_brace_complex - TypeEr...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_expr_braced - TypeError: co...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_expr_multiline - TypeError:...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_expr_multiline_cdata - Type...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_expr_name - TypeError: code...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_html_entities - TypeError: ...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_jquery_call_is_not_expr - T...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_jquery_shortcut_is_not_expr
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_pre_whitespace - TypeError:...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_preserve_dollar_not_variable_brace
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_script - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_script_commented_CDATA - Ty...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_script_escaping - TypeError...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_script_variable - TypeError...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_style_escaping - TypeError:...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_textarea_whitespace - TypeE...
[  428s] FAILED kajiki/tests/test_xml.py::TestSimple::test_xml_entities - TypeError: c...
[  428s] FAILED kajiki/tests/test_xml.py::TestSwitch::test_case_elem - TypeError: code...
[  428s] FAILED kajiki/tests/test_xml.py::TestSwitch::test_switch - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_xml.py::TestSwitch::test_switch_multi - TypeError: c...
[  428s] FAILED kajiki/tests/test_xml.py::TestElse::test_pyif_pyelse_continuation - Ty...
[  428s] FAILED kajiki/tests/test_xml.py::TestElse::test_pyiftag_pyelse_continuation
[  428s] FAILED kajiki/tests/test_xml.py::TestWith::test_standalone - TypeError: code(...
[  428s] FAILED kajiki/tests/test_xml.py::TestWith::test_with - TypeError: code() argu...
[  428s] FAILED kajiki/tests/test_xml.py::TestWith::test_with_multiple - TypeError: co...
[  428s] FAILED kajiki/tests/test_xml.py::TestWith::test_with_multiple_and_whitespace
[  428s] FAILED kajiki/tests/test_xml.py::TestWith::test_with_multiple_with_embedded_semicolons
[  428s] FAILED kajiki/tests/test_xml.py::TestWith::test_with_ordered_multiple - TypeE...
[  428s] FAILED kajiki/tests/test_xml.py::TestWith::test_with_trailing_semicolon - Typ...
[  428s] FAILED kajiki/tests/test_xml.py::TestFunction::test_empty_function - TypeErro...
[  428s] FAILED kajiki/tests/test_xml.py::TestFunction::test_function - TypeError: cod...
[  428s] FAILED kajiki/tests/test_xml.py::TestFunction::test_function_in_attr - TypeEr...
[  428s] FAILED kajiki/tests/test_xml.py::TestCall::test_call - TypeError: code() argu...
[  428s] FAILED kajiki/tests/test_xml.py::TestImport::test_import - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_xml.py::TestImport::test_import_auto - TypeError: co...
[  428s] FAILED kajiki/tests/test_xml.py::TestImport::test_include - TypeError: code()...
[  428s] FAILED kajiki/tests/test_xml.py::TestImport::test_include_html5 - TypeError: ...
[  428s] FAILED kajiki/tests/test_xml.py::TestExtends::test_autoblocks - TypeError: co...
[  428s] FAILED kajiki/tests/test_xml.py::TestExtends::test_autoblocks_disabling - Typ...
[  428s] FAILED kajiki/tests/test_xml.py::TestExtends::test_basic - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_xml.py::TestExtends::test_block - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_xml.py::TestExtends::test_dynamic - TypeError: code(...
[  428s] FAILED kajiki/tests/test_xml.py::TestClosure::test - TypeError: code() argume...
[  428s] FAILED kajiki/tests/test_xml.py::TestPython::test_basic - TypeError: code() a...
[  428s] FAILED kajiki/tests/test_xml.py::TestPython::test_indent - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_xml.py::TestPython::test_mod - TypeError: code() arg...
[  428s] FAILED kajiki/tests/test_xml.py::TestPython::test_short - TypeError: code() a...
[  428s] FAILED kajiki/tests/test_xml.py::TestComment::test_basic - TypeError: code() ...
[  428s] FAILED kajiki/tests/test_xml.py::TestAttributes::test_attrs - TypeError: code...
[  428s] FAILED kajiki/tests/test_xml.py::TestAttributes::test_basic - TypeError: code...
[  428s] FAILED kajiki/tests/test_xml.py::TestAttributes::test_content - TypeError: co...
[  428s] FAILED kajiki/tests/test_xml.py::TestAttributes::test_escape_attr_values - Ty...
[  428s] FAILED kajiki/tests/test_xml.py::TestAttributes::test_html_attrs - TypeError:...
[  428s] FAILED kajiki/tests/test_xml.py::TestAttributes::test_replace - TypeError: co...
[  428s] FAILED kajiki/tests/test_xml.py::TestAttributes::test_strip - TypeError: code...
[  428s] FAILED kajiki/tests/test_xml.py::TestAttributes::test_xml_namespaces - TypeEr...
[  428s] FAILED kajiki/tests/test_xml.py::TestDebug::test_debug - TypeError: code() ar...
[  428s] FAILED kajiki/tests/test_xml.py::TestPackageLoader::test_pkg_loader - TypeErr...
[  428s] FAILED kajiki/tests/test_xml.py::TestBuiltinFunctions::test_defined - TypeErr...
[  428s] FAILED kajiki/tests/test_xml.py::TestBuiltinFunctions::test_literal - TypeErr...
[  428s] FAILED kajiki/tests/test_xml.py::TestBuiltinFunctions::test_value_of - TypeEr...
[  428s] FAILED kajiki/tests/test_xml.py::TestTranslation::test_extract_python_inside
[  428s] FAILED kajiki/tests/test_xml.py::TestTranslation::test_extract_translate - Ty...
[  428s] FAILED kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda
[  428s] FAILED kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending
[  428s] FAILED kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending_file
[  428s] FAILED kajiki/tests/test_xml.py::TestTranslation::test_substituting_gettext_with_lambda_extending_twice
[  428s] FAILED kajiki/tests/test_xml.py::TestTranslation::test_without_substituting_gettext_with_lambda_extending_file
[  428s] FAILED kajiki/tests/test_xml.py::TestErrorReporting::test_code_error - TypeEr...
[  428s] FAILED kajiki/tests/test_xml.py::TestBracketsInExpression::test_brackets_asymmetric
[  428s] FAILED kajiki/tests/test_xml.py::TestBracketsInExpression::test_complex - Typ...
[  428s] FAILED kajiki/tests/test_xml.py::TestBracketsInExpression::test_simple - Type...
[  428s] FAILED kajiki/tests/test_xml.py::TestBracketsInExpression::test_some_brackets
[  428s] FAILED kajiki/tests/test_xml.py::TestBracketsInExpression::test_with_padding_space
[  428s] FAILED kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_comment - Ty...
[  428s] FAILED kajiki/tests/test_xml.py::TestMultipleChildrenInDOM::test_ok - TypeErr...
[  428s] ================== 115 failed, 32 passed in 126.79s (0:02:06) ==================
[  428s] error: Bad exit status from /var/tmp/rpm-tmp.VNnYhu (%check)
[  428s] 
[  428s] RPM build errors:
[  428s]     Bad exit status from /var/tmp/rpm-tmp.VNnYhu (%check)
[  428s] ### VM INTERACTION START ###
[  429s] [  409.392198][    T1] sysrq: Power Off
[  429s] [  409.394613][   T18] reboot: Power down
[  429s] ### VM INTERACTION END ###
[  429s] 
[  429s] cloud125 failed "build python-Kajiki.spec" at Sun Feb 19 00:01:16 UTC 2023.
[  429s] 
